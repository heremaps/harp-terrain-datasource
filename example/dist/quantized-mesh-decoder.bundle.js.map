{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///./node_modules/@here/harp-geoutils/lib/coordinates/GeoCoordinates.js","webpack:///./node_modules/@here/harp-utils/index.js","webpack:///./node_modules/@here/harp-geoutils/lib/coordinates/GeoBox.js","webpack:///./node_modules/@here/harp-geoutils/lib/math/MathUtils.js","webpack:///./node_modules/@here/harp-datasource-protocol/index.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/TileKey.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/TilingScheme.js","webpack:///./node_modules/@here/harp-geoutils/lib/projection/EarthConstants.js","webpack:///./node_modules/@here/harp-geoutils/lib/projection/MercatorProjection.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.js","webpack:///./node_modules/@here/harp-materials/lib/MapMeshMaterials.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/ILogger.js","webpack:///./node_modules/@here/harp-materials/lib/ShaderChunks/LinesChunks.js","webpack:///./node_modules/@here/harp-mapview-decoder/lib/WorkerService.js","webpack:///./node_modules/@here/harp-geoutils/index.js","webpack:///./node_modules/@here/harp-geoutils/lib/projection/EquirectangularProjection.js","webpack:///./node_modules/@here/harp-geoutils/lib/projection/WebMercatorProjection.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/SubTiles.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/TileKeyUtils.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/TileTreeTraverse.js","webpack:///./node_modules/@here/harp-materials/index.js","webpack:///./node_modules/@here/harp-materials/lib/CopyShader.js","webpack:///./node_modules/@here/harp-materials/lib/SolidLineMaterial.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/ConsoleChannel.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/Logger.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/WorkerChannel.js","webpack:///./node_modules/@here/harp-datasource-protocol/lib/Techniques.js","webpack:///./node_modules/@here/quantized-mesh-decoder/src/index.js","webpack:///./node_modules/@here/harp-terrain-datasource/src/quantized-mesh/tile-decoder.js","webpack:///./src/quantized-mesh-decoder-worker.js","webpack:///./node_modules/@here/harp-terrain-datasource/src/quantized-mesh/tile-decoder-worker.js","webpack:///./node_modules/@here/harp-mapview-decoder/index-worker.js","webpack:///./node_modules/@here/harp-mapview-decoder/lib/ThemedTileDecoder.js","webpack:///./node_modules/@here/harp-datasource-protocol/lib/DecodedTile.js","webpack:///./node_modules/@here/harp-geoutils/lib/coordinates/GeoCoordinatesLike.js","webpack:///./node_modules/@here/harp-geoutils/lib/projection/IdentityProjection.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/QuadTree.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/HereTilingScheme.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/WebMercatorTilingScheme.js","webpack:///./node_modules/@here/harp-geoutils/lib/tiling/MercatorTilingScheme.js","webpack:///./node_modules/@here/harp-geoutils/lib/math/Vector3Like.js","webpack:///./node_modules/@here/harp-materials/lib/DashedLineMaterial.js","webpack:///./node_modules/@here/harp-utils/lib/GroupedPriorityList.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/index.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/LoggerManager.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/LoggerManagerImpl.js","webpack:///./node_modules/@here/harp-utils/lib/Logger/MultiChannel.js","webpack:///./node_modules/@here/harp-utils/lib/Math2D.js","webpack:///./node_modules/@here/harp-utils/lib/MathUtils.js","webpack:///./node_modules/@here/harp-utils/lib/Mixins.js","webpack:///./node_modules/@here/harp-utils/lib/assert.js","webpack:///./node_modules/@here/harp-utils/lib/PerformanceTimer.js","webpack:///./node_modules/@here/harp-utils/lib/OptionsUtils.js","webpack:///./node_modules/@here/harp-utils/lib/UrlResolver.js","webpack:///./node_modules/@here/harp-utils/lib/UrlUtils.js","webpack:///./node_modules/@here/harp-materials/lib/ShaderChunks/FadingChunks.js","webpack:///./node_modules/@here/harp-materials/lib/EdgeMaterial.js","webpack:///./node_modules/@here/harp-materials/lib/GlyphCopyMaterial.js","webpack:///./node_modules/@here/harp-materials/lib/HighPrecisionLineMaterial.js","webpack:///./node_modules/@here/harp-materials/lib/HighPrecisionPointMaterial.js","webpack:///./node_modules/@here/harp-materials/lib/IconMaterial.js","webpack:///./node_modules/@here/harp-materials/lib/CirclePointsMaterial.js","webpack:///./node_modules/@here/harp-materials/lib/MSAAMaterial.js","webpack:///./node_modules/@here/harp-materials/lib/TextMaterial.js","webpack:///./node_modules/@here/harp-datasource-protocol/lib/Theme.js","webpack:///./node_modules/@here/harp-datasource-protocol/lib/TileInfo.js","webpack:///./node_modules/@here/harp-datasource-protocol/lib/WorkerDecoderProtocol.js","webpack:///./node_modules/@here/harp-mapview-decoder/lib/TileDecoderService.js","webpack:///./node_modules/@here/harp-mapview-decoder/lib/WorkerServiceManager.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","THREE","RAD2DEG","Math","PI","DEG2RAD","GeoCoordinates","latitude","longitude","altitude","this","fromDegrees","fromRadians","configurable","isValid","isNaN","normalized","wrapped","equals","other","copy","clone","__export","GeoCoordinates_1","GeoBox","southWest","northEast","fromCoordinates","undefined","min","max","south","north","west","east","minAltitude","altitudeSpan","latitudeSpan","longitudeSpan","maxAltitude","width","contains","point","containsHelper","isFlat","isSameAltitude","isWithinAltitudeRange","MathUtils","normalizeAngleDeg","a","angleDistanceDeg","b","newEmptyBox3","x","Infinity","y","z","degToRad","degrees","radToDeg","radians","clamp","interpolateAnglesDeg","p0","p1","powerOfTwo","TileKey","row","column","level","fromRowColumnLevel","fromQuadKey","quadkey","length","mask","parseInt","charAt","fromMortonCode","quadKey64","quadKey","result","m_mortonCode","fromHereTile","quadkey64","m_hereTile","columnsAtLevel","pow","rowsAtLevel","atCoords","coordX","coordY","totalWidth","totalHeight","floor","parentMortonCode","mortonCode","parent","Error","changedLevelBy","delta","changedLevelTo","toHereTile","toString","toQuadKey","col","qnr","addedSubKey","sub","subQuad","child","addedSubHereTile","getSubHereTile","msb","rowCount","columnCount","FlatTileBoundingBoxGenerator_1","TileKeyUtils_1","TileTreeTraverse_1","TilingScheme","subdivisionScheme","projection","boundingBoxGenerator","FlatTileBoundingBoxGenerator","tileTreeTraverse","TileTreeTraverse","getSubTileKeys","tileKey","subTiles","getTileKey","geoPoint","TileKeyUtils","geoCoordinatesToTileKey","getTileKeys","geoBox","geoRectangleToTileKeys","getGeoBox","getWorldBox","EarthConstants","EQUATORIAL_CIRCUMFERENCE","GeoBox_1","MathUtils_1","EarthConstants_1","MercatorProjection","val","latitudeClamp","MAXIMUM_LATITUDE","latitudeProject","log","tan","latitudeClampProject","unprojectLatitude","atan","exp","getScaleFactor","worldPoint","cosh","worldExtent","projectPoint","latitudeInRadians","unprojectPoint","projectBox","center","worldCenter","worldNorth","worldSouth","worldYCenter","unprojectBox","worldBox","minGeo","maxGeo","mercatorProjection","QuadTreeSubdivisionScheme","getSubdivisionX","getSubdivisionY","getLevelDimensionX","getLevelDimensionY","quadTreeSubdivisionScheme","__extends","extendStatics","setPrototypeOf","__proto__","Array","__","constructor","FadingFeature","harp_utils_1","FadingChunks_1","cameraToWorldDistance","distance","camera","far","DEFAULT_FADE_NEAR","DEFAULT_FADE_FAR","patchGlobalShaderChunks","ShaderChunk","fading_pars_vertex","assign","default","updateDistanceFadeFeature","fadingMaterial","needsUpdate","defines","fadeFar","FADING_MATERIAL","insertShaderInclude","shaderContent","shaderName","insertedShaderName","addTab","tabChar","replace","onBeforeCompile","shader","uniforms","fadeNear","vertexShader","fragmentShader","addRenderHelper","forceMaterialToTransparent","updateUniforms","additionalCallback","onBeforeRender","renderer","scene","geom","material","transparent","properties","uniformsNeedUpdate","onAfterRender","FadingFeatureMixin","m_fadeNear","m_fadeFar","getFadeNear","setFadeNear","getFadeFar","setFadeFar","addFadingProperties","_this","set","applyFadingParameters","params","copyFadingParameters","source","MapMeshBasicMaterial","_super","MeshBasicMaterial","MapMeshStandardMaterial","MeshStandardMaterial","applyMixinsWithoutProperties","LogLevel","LoggerOptions","project_line_vert_func","join_dist_func","tile_clip_func","high_precision_vert2D_func","high_precision_vert3D_func","harp_datasource_protocol_1","logger","LoggerManager","instance","enabled","WorkerService","serviceId","m_pendingRequests","Map","onMessage","message","data","service","isRequestMessage","request_1","requestEntry_1","messageId","responseSent","tryHandleRequest","request","then","response","doSendResponse","type","DecodedTileMessageName","Response","transferList","catch","error","tryHandleMessage","err","self","addEventListener","isInitializedMessage","Initialized","postMessage","destroy","cancelAllPendingRequests","removeEventListener","handleMessage","handleRequest","Promise","reject","requestEntry","delete","forEach","EquirectangularProjection","_worldPoint","geoToWorldScale","worldToGeoScale","latitudeSpanInRadians","longitudeSpanInRadians","sizeX","sizeY","equirectangularProjection","MercatorProjection_1","WebMercatorProjection","apply","arguments","sy","sin","webMercatorProjection","tilingScheme","minElevation","maxElevation","m_tilingScheme","m_worldBox","_a","m_worldDimensions","levelDimensionX","levelDimensionY","originX","originY","HalfQuadTreeSubdivisionScheme","halfQuadTreeSubdivisionScheme","TileKey_1","SubTiles","m_tileKey","m_level","m_count","m_mask","m_shift","iterator","Iterator","skip","index","m_parent","m_index","parentKey","subLevel","next","cx","cy","worldSizeX","worldSizeY","wrap","lower","upper","minVal","maxVal","southWestLongitude","longitudeInRadians","southWestLatitude","northEastLongitude","northEastLatitude","minTileKey","maxTileKey","minColumn","maxColumn","minRow","maxRow","keys","push","SubTiles_1","m_subdivisionScheme","subTileMask","it","CopyShader","tDiffuse","opacity","MapMeshMaterials_1","LinesChunks_1","vertexSource","fragmentSource","SolidLineMaterial","DASHED_LINE","TILE_CLIP","hasFog","fog","USE_FOG","shaderParams","UniformsUtils","merge","diffuse","Uniform","Color","DEFAULT_COLOR","lineWidth","DEFAULT_WIDTH","DEFAULT_OPACITY","tileSize","Vector2","UniformsLib","extensions","derivatives","color","depthTest","updateFog","enableFog","USE_FADING","RawShaderMaterial","__read","e","ar","done","__spread","concat","ConsoleChannel","optionalParams","_i","console","debug","info","trace","warn","ILogger_1","Logger","m_channel","options","Trace","update","prefix","Debug","Info","Log","Warn","WORKERCHANNEL_MSG_TYPE","WorkerChannel","workerMessage","__values","harp_materials_1","isCaseProperty","getPropertyValue","e_1","property_1","property_1_1","range","minLevel","maxLevel","e_1_1","return","PoiStackMode","isCirclesTechnique","technique","isSquaresTechnique","isPoiTechnique","isLineMarkerTechnique","isLineTechnique","isSolidLineTechnique","isSegmentsTechnique","isExtrudedLineTechnique","isFillTechnique","isExtrudedPolygonTechnique","isStandardTechnique","isStandardTexturedTechnique","isLandmarkTechnique","isTextTechnique","isShaderTechnique","getMaterialConstructor","shading","DashedLineMaterial","PointsMaterial","CirclePointsMaterial","LineBasicMaterial","ShaderMaterial","getObjectConstructor","Mesh","Points","LineSegments","primitive","Line","BASE_TECHNIQUE_NON_MATERIAL_PROPS","isTextureBuffer","buffer","format","getAttributeValue","attribute","toWrappingMode","ClampToEdgeWrapping","RepeatWrapping","MirroredRepeatWrapping","applyTechniqueToMaterial","skipExtraProps","getOwnPropertyNames","propertyName","startsWith","indexOf","prop","QUANTIZED_MESH_HEADER","Float64Array","BYTES_PER_ELEMENT","Float32Array","decodeZigZag","decodeIndex","position","indicesCount","bytesPerIndex","encoded","indices","Uint16Array","Uint32Array","highest","code","decodeVertexNormalsExtension","extensionDataView","Uint8Array","byteOffset","byteLength","decodeWaterMaskExtension","slice","DECODING_STEPS","header","vertices","triangleIndices","edgeIndices","DEFAULT_OPTIONS","maxDecodingStep","decode","userOptions","view","DataView","headerEndPosition","dataView","bytesCount","getFloat64","getFloat32","decodeHeader","vertexData","vertexDataEndPosition","vertexCount","getUint32","bytesPerArrayElement","elementArrayLength","uArrayStartPosition","vArrayStartPosition","heightArrayStartPosition","u","v","height","getUint16","decodeVertexData","triangleIndicesEndPosition","triangleCount","triangleIndicesCount","decodeTriangleIndices","westIndices","southIndices","eastIndices","northIndices","edgeIndicesEndPosition","westVertexCount","southVertexCount","eastVertexCount","northVertexCount","decodeEdgeIndices","indicesEndPosition","extensionsEndPosition","extensionId","getUint8","extensionLength","extensionView","vertexNormals","waterMask","decodeExtensions","__webpack_exports__","QUANTIZED_MESH_TILE_DECODER_ID","tile_decoder_QuantizedMeshTileDecoder","[object Object]","resolve","positionAttributeArray","positionArray","filter","item","decodedTile","constructPositionArray","uvArray","constructUvArray","vertexAttributes","itemCount","metadata","array","verityTile","techniques","geometries","importScripts","WorkerServiceManager","TileDecoderService","QuantizedMeshTileDecoder","getInstance","register","serviceType","factory","start","ThemedTileDecoder","dispose","decodeTile","m_styleSetEvaluator","decodeThemedTile","getTileInfo","configure","styleSet","languages","StyleSetEvaluator","harp_geoutils_1","Techniques_1","getArrayConstructor","attr","GeometryType","createMaterial","Constructor","settings","HighPrecisionLineMaterial","id","flatShading","params_1","getProjection","projectionName","getProjectionName","getBufferAttribute","BufferAttribute","isGeoCoordinatesLike","IdentityProjection","identityProjection","QuadTree","visit","accept","visitTileKey","_b","_c","subTileKey","EquirectangularProjection_1","HalfQuadTreeSubdivisionScheme_1","TilingScheme_1","hereTilingScheme","WebMercatorProjection_1","QuadTreeSubdivisionScheme_1","webMercatorTilingScheme","mercatorTilingScheme","isVector3Like","dashSize","DEFAULT_DASH_SIZE","gapSize","DEFAULT_GAP_SIZE","updateDashedFeature","PriorityListGroup","priority","elements","GroupedPriorityList","groups","add","element","getGroup","remove","group","foundIndex","splice","normalizedPriority","clear","otherGroup","findGroup","e_2","priorityList","e_2_1","sort","LoggerManagerImpl_1","m_instance","LoggerManagerImpl","ConsoleChannel_1","Logger_1","WorkerChannel_1","m_loggers","channel","document","getLoggerNames","map","getLogger","find","loggerName","found","updateAll","config","enableAll","e_3","e_3_1","enable","setLogLevelForAll","e_4","e_4_1","setLogLevel","setChannel","MultiChannel","channels","e_5","e_5_1","e_6","e_6_1","Math2D","Box","w","h","intersects","distSquared","ax","ay","bx","by","computeSquaredLineLength","line","squaredLineLength","xDiff","yDiff","distToSegmentSquared","px","py","l0x","l0y","l1x","l1y","lineLengthSuared","smoothStep","edge0","edge1","smootherStep","lerp","inMin","inMax","outMin","outMax","min2","max2","isClamped","lowerBound","upperBound","applyMixins","derivedCtor","baseCtors","baseCtor","descriptor","getOwnPropertyDescriptor","isProduction","assert","condition","assertExists","PerformanceTimer","now","nowFunc","getNowFunc","performance","Date","getTime","__assign","getOptionValue","values","values_1","values_1_1","candidate","mergeWithOptions","parameters","optionValue","customDefaultUrlResolver","defaultUrlResolver","url","setDefaultUrlResolver","resolver","composeUrlResolvers","resolvers","originalUrl","reduce","resolveReferenceUrl","parentUrl","childUrl","absoluteUrlWithOriginRe","test","getUrlOrigin","substr","baseUrl","RegExp","idx","lastIndexOf","substring","parsed","getUrlHostAndProtocol","protocol","host","urlOriginRe","match","fading_vertex","fading_pars_fragment","fading_fragment","EdgeMaterial","edgeColor","edgeColorMix","DEFAULT_COLOR_MIX","depthWrite","colorMix","updateColorMixFeature","USE_COLOR","GlyphCopyMaterial","pageOffset","page0","Texture","DEFAULT_IMAGE","page1","page2","page3","page4","page5","page6","page7","vertexSource3D","u_mvp","Matrix4","u_eyepos","Vector3","u_eyepos_lowpart","isHighPrecisionLineMaterial","dimensionality","updateTransparencyFeature","setDimensionality","HighPrecisionPointMaterial","points_frag","size","DEFAULT_SIZE","scale","DEFAULT_SCALE","uvTransform","Matrix3","isHighPrecisionPointMaterial","IconMaterial","vertexColors","VertexColors","premultipliedAlpha","blending","NormalBlending","three_1","DEFAULT_CIRCLE_SIZE","isCirclePointsMaterial","m_size","m_color","getHexString","CopyShader_1","MSAAMaterial","AdditiveBlending","TextMaterial","texture","textureSize","bgFactor","DEFAULT_BG_FACTOR","bgColor","DEFAULT_BG_COLOR","bgAlpha","DEFAULT_BG_ALPHA","BG_TEXT","side","DoubleSide","updateBackgroundFeature","Env","lookup","_name","unmap","Bind","obj","EmptyEnv","MapEnv","entries","Expr","kind","parse","Parser","Character","Token","VarExpr","evaluate","env","NumberLiteralExpr","StringLiteralExpr","HasAttributeExpr","ContainsExpr","NotExpr","expr","BinaryExpr","op","left","right","endsWith","LogicalExpr","isSpace","codepoint","Tab","Lf","Cr","Space","isNumber","_0","_9","isLetter","A","Z","isIdentChar","isLetterOrNumber","_","Dollar","Dot","LBracket","RBracket","tokenSpell","token","Eof","Identifier","Number","String","Comma","LParen","RParen","Exclaim","TildeEqual","CaretEqual","DollarEqual","EqualEqual","ExclaimEqual","Less","Greater","LessEqual","GreaterEqual","BarBar","AmpAmp","Lexer","m_token","m_char","text","m_text","yylex","yyinp","codePointAt","ch","SingleQuote","DoubleQuote","Equal","Caret","Tilde","Bar","Amp","getEqualityOp","getRelationalOp","lex","parseLogicalOr","yyexpect","parsePrimary","parseFloat","parseUnary","parseRelational","parseEquality","parseLogicalAnd","createLight","lightDescription","light","AmbientLight","intensity","DirectionalLight","castShadow","direction","normalize","validate","m_renderOrderBiasGroups","m_techniques","techniqueRenderOrder","computeDefaultRenderOrder","style","renderOrderBiasGroup","renderOrderBiasGroupOrder","renderOrderBiasRange","renderOrder","minRange","maxRange","abs","styles","isArray","_d","currStyle","_renderOrderAuto","styleSet_1","styleSet_1_1","getMatchingTechniques","styleStack","processStyle","checkAddTechnique","_index","cleanupStyle","when","_whenExpr","JSON","stringify","pop","technique_1","addAttributes","transient","renderOrderBiasProperty","labelProperty","label","styleStack_1","styleStack_1_1","final","ThemeVisitor","theme","visitStyles","visitFunc","e_7","e_8","e_8_1","styleSetName","e_7_1","FeatureGroup","storeExtendedTags","startSize","featureIds","numFeatures","numPositions","techniqueIndex","textIndex","positionIndex","positions","layerIndex","classIndex","typeIndex","LineFeatureGroup","userData","PolygonFeatureGroup","groupNumRings","outerRingStartIndex","innerRingIsOuterContour","innerRingStartIndex","ExtendedTileInfo","textCatalog","techniqueCatalog","setupTime","pointGroup","lineGroup","polygonGroup","layerCatalog","classCatalog","typeCatalog","finishFeatureGroup","featureGroup","featureGroupFinished","finish","tileInfo","segmentIds","segmentStartOffsets","segmentEndOffsets","finishLineFeatureGroup","finishPolygonFeatureGroup","featureGroupSize","tileInfoFinished","getFeatureName","useAbbreviation","useIsoCode","abbreviation","isoCode","languages_1","languages_1_1","lang","ExtendedTileInfoWriter","techniqueIndexMap","stringMap","layerMap","classMap","typeMap","addTechnique","infoTileTechniqueIndex","storedTechnique","addFeature","featureId","isPolygonGroup","textTechnique","textLabel","stringIndex","addText","addLayer","addClass","addType","addFeaturePoint","addFeaturePoints","points","addRoadSegments","segmentId","startOffset","endOffset","addRingPoints","contour","isOuterRing","addStringValue","str","catalog","ExtendedTileInfoPolygonAccessorImpl","polygons","featureIndex","ringStart","numRings","setup","ringIndex","getPoints","numPointValues","pointsStart","ExtendedTileInfoVisitor","visitAll","handler","visitAllPointFeatures","visitAllLineFeatures","visitAllPolygonFeatures","visitFeature","numFeaturesFound","numPointFeatures","pointFeatures","visitPointFeature","numLineFeatures","lineFeatures","visitLineFeature","numPolygonFeatures","polygonsFeatures","visitPolygonFeature","getTag","acceptPoint","lines","positionsStart","acceptLine","polygonAccessor","acceptPolygon","Requests","WORKER_SERVICE_MANAGER_SERVICE_ID","isConfigurationMessage","Configuration","Request","isResponseMessage","isDecodeTileRequest","DecodeTileRequest","isTileInfoRequest","TileInfoRequest","WorkerService_1","m_decoder","connect","decoder","handleDecodeTileRequest","handleTileInfoRequest","handleConfigurationMessage","ArrayBuffer","m_factories","m_services","m_service","workerServiceDescriptor","CreateService","targetServiceId","targetServiceType","DestroyService"],"mappings":"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","file":"quantized-mesh-decoder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","module.exports = THREE;","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RAD2DEG = 180.0 / Math.PI;\nvar DEG2RAD = Math.PI / 180.0;\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nvar GeoCoordinates = /** @class */ (function () {\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    function GeoCoordinates(latitude, longitude, altitude) {\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.altitude = altitude;\n    }\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    GeoCoordinates.fromDegrees = function (latitude, longitude, altitude) {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    };\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in radians.\n     * @param longitude Longitude in radians.\n     * @param altitude Altitude in meters.\n     */\n    GeoCoordinates.fromRadians = function (latitude, longitude, altitude) {\n        return new GeoCoordinates(latitude * RAD2DEG, longitude * RAD2DEG, altitude);\n    };\n    Object.defineProperty(GeoCoordinates.prototype, \"latitudeInRadians\", {\n        /**\n         * Returns the latitude in radians.\n         */\n        get: function () {\n            return this.latitude * DEG2RAD;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoCoordinates.prototype, \"longitudeInRadians\", {\n        /**\n         * Returns the longitude in radians.\n         */\n        get: function () {\n            return this.longitude * DEG2RAD;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoCoordinates.prototype, \"latitudeInDegrees\", {\n        /**\n         * Returns the latitude in degrees.\n         * @deprecated Use the [[latitude]] property instead.\n         */\n        get: function () {\n            return this.latitude;\n        } // compat api\n        ,\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoCoordinates.prototype, \"longitudeInDegrees\", {\n        /**\n         * Returns the longitude in degrees.\n         * @deprecated Use the [[longitude]] property instead.\n         */\n        get: function () {\n            return this.longitude;\n        } // compat api\n        ,\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    GeoCoordinates.prototype.isValid = function () {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    };\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    GeoCoordinates.prototype.normalized = function () {\n        var _a = this, latitude = _a.latitude, longitude = _a.longitude;\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n        if (latitude > 90) {\n            var wrapped = (latitude + 90) % 360;\n            if (wrapped >= 180) {\n                longitude += 180;\n                wrapped = 360 - wrapped;\n            }\n            latitude = wrapped - 90;\n        }\n        if (latitude < -90) {\n            var wrapped = (latitude - 90) % 360;\n            if (wrapped <= -180) {\n                longitude += 180;\n                wrapped = -360 - wrapped;\n            }\n            latitude = wrapped + 90;\n        }\n        if (longitude < -180 || longitude > 180) {\n            longitude = ((longitude + 180) % 360) - 180;\n        }\n        if (latitude === this.latitude && longitude === this.longitude) {\n            return this;\n        }\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    };\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other GeoCoordinatesLike to compare to.\n     */\n    GeoCoordinates.prototype.equals = function (other) {\n        return (this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude);\n    };\n    /**\n     * Copy values from the other.\n     *\n     * @param other GeoCoordinatesLike to copy all values from.\n     */\n    GeoCoordinates.prototype.copy = function (other) {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    };\n    /**\n     * Clones this `GeoCoordinates`.\n     * @deprecated\n     */\n    GeoCoordinates.prototype.clone = function () {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    };\n    return GeoCoordinates;\n}());\nexports.GeoCoordinates = GeoCoordinates;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lib/GroupedPriorityList\"));\n__export(require(\"./lib/Logger\"));\n__export(require(\"./lib/Math2D\"));\n__export(require(\"./lib/MathUtils\"));\n__export(require(\"./lib/Mixins\"));\n__export(require(\"./lib/assert\"));\n__export(require(\"./lib/PerformanceTimer\"));\n__export(require(\"./lib/OptionsUtils\"));\n__export(require(\"./lib/UrlResolver\"));\n__export(require(\"./lib/UrlUtils\"));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GeoCoordinates_1 = require(\"./GeoCoordinates\");\nvar DEG2RAD = Math.PI / 180;\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nvar GeoBox = /** @class */ (function () {\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    function GeoBox(southWest, northEast) {\n        this.southWest = southWest;\n        this.northEast = northEast;\n    }\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    GeoBox.fromCoordinates = function (southWest, northEast) {\n        return new GeoBox(southWest, northEast);\n    };\n    Object.defineProperty(GeoBox.prototype, \"minAltitude\", {\n        /**\n         * Returns the minimum altitude or `undefined`.\n         */\n        get: function () {\n            if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n                return undefined;\n            }\n            return Math.min(this.southWest.altitude, this.northEast.altitude);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"maxAltitude\", {\n        /**\n         * Returns the maximum altitude or `undefined`.\n         */\n        get: function () {\n            if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n                return undefined;\n            }\n            return Math.max(this.southWest.altitude, this.northEast.altitude);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"south\", {\n        /**\n         * Returns the south latitude in degrees of this `GeoBox`.\n         */\n        get: function () {\n            return this.southWest.latitude;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"north\", {\n        /**\n         * Returns the north altitude in degrees of this `GeoBox`.\n         */\n        get: function () {\n            return this.northEast.latitude;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"west\", {\n        /**\n         * Returns the west longitude in degrees of this `GeoBox`.\n         */\n        get: function () {\n            return this.southWest.longitude;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"east\", {\n        /**\n         * Returns the east longitude in degrees of this `GeoBox`.\n         */\n        get: function () {\n            return this.northEast.longitude;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"center\", {\n        /**\n         * Returns the center of this `GeoBox`.\n         */\n        get: function () {\n            var latitude = (this.south + this.north) * 0.5;\n            var _a = this, west = _a.west, east = _a.east;\n            var _b = this, minAltitude = _b.minAltitude, altitudeSpan = _b.altitudeSpan;\n            var altitude;\n            if (minAltitude !== undefined && altitudeSpan !== undefined) {\n                altitude = minAltitude + altitudeSpan * 0.5;\n            }\n            if (west < east) {\n                return new GeoCoordinates_1.GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n            }\n            var longitude = (360 + east + west) * 0.5;\n            if (longitude > 360) {\n                longitude -= 360;\n            }\n            return new GeoCoordinates_1.GeoCoordinates(latitude, longitude, altitude);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"latitudeSpanInRadians\", {\n        /**\n         * Returns the latitude span in radians.\n         */\n        get: function () {\n            return this.latitudeSpan * DEG2RAD;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"longitudeSpanInRadians\", {\n        /**\n         * Returns the longitude span in radians.\n         */\n        get: function () {\n            return this.longitudeSpan * DEG2RAD;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"latitudeSpan\", {\n        /**\n         * Returns the latitude span in degrees.\n         */\n        get: function () {\n            return this.north - this.south;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"altitudeSpan\", {\n        get: function () {\n            if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n                return undefined;\n            }\n            return this.maxAltitude - this.minAltitude;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"longitudeSpan\", {\n        /**\n         * Returns the longitude span in degrees.\n         */\n        get: function () {\n            var width = this.northEast.longitude - this.southWest.longitude;\n            if (width < 0) {\n                width += 360;\n            }\n            return width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"latitudeSpanInDegrees\", {\n        /**\n         * Returns the latitude span in degrees.\n         * @deprecated Use [[latitudeSpan]] instead.\n         */\n        get: function () {\n            return this.latitudeSpan;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoBox.prototype, \"longitudeSpanInDegrees\", {\n        /**\n         * Returns the longitude span in degrees.\n         * @deprecated Use [[longitudeSpan]] instead.\n         */\n        get: function () {\n            return this.longitudeSpan;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point The geo coordinates.\n     */\n    GeoBox.prototype.contains = function (point) {\n        if (point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined) {\n            return this.containsHelper(point);\n        }\n        var isFlat = this.minAltitude === this.maxAltitude;\n        var isSameAltitude = this.minAltitude === point.altitude;\n        var isWithinAltitudeRange = this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n        return false;\n    };\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    GeoBox.prototype.clone = function () {\n        return new GeoBox(this.southWest, this.northEast);\n    };\n    GeoBox.prototype.containsHelper = function (point) {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n        var _a = this, west = _a.west, east = _a.east;\n        if (east > west) {\n            return point.longitude >= west && point.longitude < east;\n        }\n        return point.longitude > east || point.longitude <= west;\n    };\n    return GeoBox;\n}());\nexports.GeoBox = GeoBox;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DEG2RAD = Math.PI / 180;\nvar RAD2DEG = 180 / Math.PI;\nvar MathUtils;\n(function (MathUtils) {\n    /**\n     * Creates a new empty bounding box.\n     */\n    function newEmptyBox3() {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n    MathUtils.newEmptyBox3 = newEmptyBox3;\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees Value in degrees.\n     * @returns Value in radians.\n     */\n    function degToRad(degrees) {\n        return degrees * DEG2RAD;\n    }\n    MathUtils.degToRad = degToRad;\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees Value in radians.\n     * @returns Value in degrees.\n     */\n    function radToDeg(radians) {\n        return radians * RAD2DEG;\n    }\n    MathUtils.radToDeg = radToDeg;\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     * @returns Clamped value.\n     */\n    function clamp(value, min, max) {\n        return value < min ? min : value > max ? max : value;\n    }\n    MathUtils.clamp = clamp;\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    function normalizeAngleDeg(a) {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n    MathUtils.normalizeAngleDeg = normalizeAngleDeg;\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a Start angle in degrees.\n     * @param b End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    function angleDistanceDeg(a, b) {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n        var d = a - b;\n        if (d > 180) {\n            return d - 360;\n        }\n        else if (d <= -180) {\n            return d + 360;\n        }\n        else {\n            return d;\n        }\n    }\n    MathUtils.angleDistanceDeg = angleDistanceDeg;\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 Angle from in degrees\n     * @param p1 Angle to in degrees\n     * @param t Interpolation factor (alpha), in range `0-1`.\n     */\n    function interpolateAnglesDeg(p0, p1, t) {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n        var d = angleDistanceDeg(p1, p0);\n        var r = (p0 + d * t) % 360;\n        return r;\n    }\n    MathUtils.interpolateAnglesDeg = interpolateAnglesDeg;\n})(MathUtils = exports.MathUtils || (exports.MathUtils = {}));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lib/DecodedTile\"));\n__export(require(\"./lib/Techniques\"));\n__export(require(\"./lib/Theme\"));\n__export(require(\"./lib/TileInfo\"));\n__export(require(\"./lib/WorkerDecoderProtocol\"));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden */\nvar powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x20000000000000,\n    0x8000000000000\n];\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nvar TileKey = /** @class */ (function () {\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, [[TileKey.fromRowColumnLevel]] should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row Represents the row in the quadtree.\n     * @param column Represents the column in the quadtree.\n     * @param level Represents the level in the quadtree.\n     */\n    function TileKey(row, column, level) {\n        this.row = row;\n        this.column = column;\n        this.level = level;\n    }\n    /**\n     * Creates a tile key.\n     *\n     * @param row The requested row. Must be less than 2 to the power of level.\n     * @param column The requested column. Must be less than 2 to the power of level.\n     * @param level The requested level.\n     */\n    TileKey.fromRowColumnLevel = function (row, column, level) {\n        return new TileKey(row, column, level);\n    };\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    TileKey.fromQuadKey = function (quadkey) {\n        var level = quadkey.length;\n        var row = 0;\n        var column = 0;\n        // tslint:disable:no-bitwise\n        for (var i = 0; i < quadkey.length; ++i) {\n            var mask = 1 << i;\n            var d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    };\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 The Morton code to be converted.\n     * @returns A new instance of [[TileKey]].\n     */\n    TileKey.fromMortonCode = function (quadKey64) {\n        var level = 0;\n        var row = 0;\n        var column = 0;\n        var quadKey = quadKey64;\n        // tslint:disable:no-bitwise\n        while (quadKey > 1) {\n            var mask = 1 << level;\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        // tslint:enable:no-bitwise\n        var result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    };\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    TileKey.fromHereTile = function (quadkey64) {\n        var result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    };\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    TileKey.columnsAtLevel = function (level) {\n        return Math.pow(2, level);\n    };\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    TileKey.rowsAtLevel = function (level) {\n        return Math.pow(2, level);\n    };\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level The level for the tile key.\n     * @param coordX The X coordinate.\n     * @param coordY The Y coordinate.\n     * @param totalWidth The maximum X coordinate.\n     * @param totalHeight The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    TileKey.atCoords = function (level, coordX, coordY, totalWidth, totalHeight) {\n        return TileKey.fromRowColumnLevel(Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))), Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))), level);\n    };\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    TileKey.parentMortonCode = function (mortonCode) {\n        return Math.floor(mortonCode / 4);\n    };\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    TileKey.prototype.parent = function () {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        // tslint:disable-next-line:no-bitwise\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    };\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta The numeric difference between the current level and the requested level.\n     */\n    TileKey.prototype.changedLevelBy = function (delta) {\n        var level = Math.max(0, this.level + delta);\n        var row = this.row;\n        var column = this.column;\n        // tslint:disable:no-bitwise\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        }\n        else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    };\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level The requested level.\n     */\n    TileKey.prototype.changedLevelTo = function (level) {\n        return this.changedLevelBy(level - this.level);\n    };\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    TileKey.prototype.mortonCode = function () {\n        if (this.m_mortonCode === undefined) {\n            var column = this.column;\n            var row = this.row;\n            // tslint:disable:no-bitwise\n            var result = powerOfTwo[this.level << 1];\n            for (var i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n            // tslint:enable:no-bitwise\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    };\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    TileKey.prototype.toHereTile = function () {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    };\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    TileKey.prototype.toQuadKey = function () {\n        var result = \"\";\n        // tslint:disable:no-bitwise\n        for (var i = this.level; i > 0; --i) {\n            var mask = 1 << (i - 1);\n            var col = (this.column & mask) !== 0;\n            var row = (this.row & mask) !== 0;\n            if (col && row) {\n                result += \"3\";\n            }\n            else if (row) {\n                result += \"2\";\n            }\n            else if (col) {\n                result += \"1\";\n            }\n            else {\n                result += \"0\";\n            }\n        }\n        // tslint:enable:no-bitwise\n        return result;\n    };\n    /**\n     * Equality operator.\n     *\n     * @param qnr The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    TileKey.prototype.equals = function (qnr) {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    };\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    TileKey.prototype.addedSubKey = function (sub) {\n        var subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        var child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(child.row + subQuad.row, child.column + subQuad.column, child.level);\n    };\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    TileKey.prototype.addedSubHereTile = function (sub) {\n        var subQuad = TileKey.fromHereTile(sub);\n        var child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(child.row + subQuad.row, child.column + subQuad.column, child.level);\n    };\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta The number of levels relative to its parent quadkey. Must be greater or equal to\n     * 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    TileKey.prototype.getSubHereTile = function (delta) {\n        var key = this.mortonCode();\n        // tslint:disable-next-line:no-bitwise\n        var msb = 1 << (delta * 2);\n        var mask = msb - 1;\n        // tslint:disable-next-line:no-bitwise\n        var result = (key & mask) | msb;\n        return result.toString();\n    };\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    TileKey.prototype.rowCount = function () {\n        return TileKey.rowsAtLevel(this.level);\n    };\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    TileKey.prototype.columnCount = function () {\n        return TileKey.columnsAtLevel(this.level);\n    };\n    return TileKey;\n}());\nexports.TileKey = TileKey;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FlatTileBoundingBoxGenerator_1 = require(\"./FlatTileBoundingBoxGenerator\");\nvar TileKeyUtils_1 = require(\"./TileKeyUtils\");\nvar TileTreeTraverse_1 = require(\"./TileTreeTraverse\");\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nvar TilingScheme = /** @class */ (function () {\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme The subdivision scheme used by this `TilingScheme`.\n     * @param projection The projection used by this `TilingScheme`.\n     */\n    function TilingScheme(subdivisionScheme, projection) {\n        this.subdivisionScheme = subdivisionScheme;\n        this.projection = projection;\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator_1.FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse_1.TileTreeTraverse(subdivisionScheme);\n    }\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey The [[TileKey]].\n     * @returns The list of the sub tile keys.\n     */\n    TilingScheme.prototype.getSubTileKeys = function (tileKey) {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    };\n    /**\n     * Gets the [[TileKey]] from the given geo position and level.\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    TilingScheme.prototype.getTileKey = function (geoPoint, level) {\n        return TileKeyUtils_1.TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    };\n    /**\n     * Gets the list of [[TileKey]]s contained in the given [[GeoBox]].\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    TilingScheme.prototype.getTileKeys = function (geoBox, level) {\n        return TileKeyUtils_1.TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    };\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * @param tileKey The `TileKey`.\n     */\n    TilingScheme.prototype.getGeoBox = function (tileKey) {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    };\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey The `TileKey`.\n     * @param result The optional object that will contain the resulting bounding box.\n     */\n    TilingScheme.prototype.getWorldBox = function (tileKey, result) {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    };\n    return TilingScheme;\n}());\nexports.TilingScheme = TilingScheme;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EarthConstants = /** @class */ (function () {\n    function EarthConstants() {\n    }\n    /** The equatorial circumference in meters. */\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE = 40075016.6855784861531768177614;\n    return EarthConstants;\n}());\nexports.EarthConstants = EarthConstants;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GeoBox_1 = require(\"../coordinates/GeoBox\");\nvar GeoCoordinates_1 = require(\"../coordinates/GeoCoordinates\");\nvar MathUtils_1 = require(\"../math/MathUtils\");\nvar EarthConstants_1 = require(\"./EarthConstants\");\nvar MercatorProjection = /** @class */ (function () {\n    function MercatorProjection() {\n    }\n    MercatorProjection.clamp = function (val, min, max) {\n        return Math.min(Math.max(min, val), max);\n    };\n    MercatorProjection.latitudeClamp = function (latitude) {\n        return MercatorProjection.clamp(latitude, -MercatorProjection.MAXIMUM_LATITUDE, MercatorProjection.MAXIMUM_LATITUDE);\n    };\n    MercatorProjection.latitudeProject = function (latitude) {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    };\n    MercatorProjection.latitudeClampProject = function (latitude) {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    };\n    MercatorProjection.unprojectLatitude = function (y) {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    };\n    MercatorProjection.prototype.getScaleFactor = function (worldPoint) {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE - 0.5));\n    };\n    MercatorProjection.prototype.worldExtent = function (minAltitude, maxAltitude, result) {\n        if (!result) {\n            result = MathUtils_1.MathUtils.newEmptyBox3();\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        result.max.y = EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        result.max.z = maxAltitude;\n        return result;\n    };\n    MercatorProjection.prototype.projectPoint = function (geoPoint, result) {\n        var normalized;\n        if (geoPoint instanceof GeoCoordinates_1.GeoCoordinates) {\n            normalized = geoPoint.normalized();\n        }\n        else {\n            normalized = new GeoCoordinates_1.GeoCoordinates(geoPoint.latitude, geoPoint.longitude, geoPoint.altitude).normalized();\n        }\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 };\n        }\n        result.x = ((normalized.longitude + 180) / 360) * EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        result.y =\n            (MercatorProjection.latitudeClampProject(normalized.latitudeInRadians) * 0.5 + 0.5) *\n                EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    };\n    MercatorProjection.prototype.unprojectPoint = function (worldPoint) {\n        var geoPoint = GeoCoordinates_1.GeoCoordinates.fromRadians(MercatorProjection.unprojectLatitude((worldPoint.y / EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE - 0.5) * 2.0), (worldPoint.x / EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE) * 2 * Math.PI - Math.PI, worldPoint.z);\n        return geoPoint;\n    };\n    MercatorProjection.prototype.projectBox = function (geoBox, result) {\n        var center = geoBox.center;\n        var worldCenter = this.projectPoint(new GeoCoordinates_1.GeoCoordinates(center.latitude, center.longitude, 0));\n        var worldNorth = (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n            0.5) *\n            EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        var worldSouth = (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n            0.5) *\n            EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        var worldYCenter = (worldNorth + worldSouth) * 0.5;\n        worldCenter.y = worldYCenter;\n        var latitudeSpan = worldNorth - worldSouth;\n        var longitudeSpan = (geoBox.longitudeSpan / 360) * EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        if (!result) {\n            result = MathUtils_1.MathUtils.newEmptyBox3();\n        }\n        result.min.x = worldCenter.x - longitudeSpan * 0.5;\n        result.min.y = worldCenter.y - latitudeSpan * 0.5;\n        result.max.x = worldCenter.x + longitudeSpan * 0.5;\n        result.max.y = worldCenter.y + latitudeSpan * 0.5;\n        var altitudeSpan = geoBox.altitudeSpan;\n        if (altitudeSpan !== undefined) {\n            result.min.z = worldCenter.z - altitudeSpan * 0.5;\n            result.max.z = worldCenter.z + altitudeSpan * 0.5;\n        }\n        else {\n            result.min.z = 0;\n            result.max.z = 0;\n        }\n        return result;\n    };\n    MercatorProjection.prototype.unprojectBox = function (worldBox) {\n        var minGeo = this.unprojectPoint(worldBox.min);\n        var maxGeo = this.unprojectPoint(worldBox.max);\n        var geoBox = GeoBox_1.GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    };\n    MercatorProjection.MAXIMUM_LATITUDE = 1.4844222297453323;\n    return MercatorProjection;\n}());\nexports.MercatorProjection = MercatorProjection;\n/**\n * Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexports.mercatorProjection = new MercatorProjection();\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuadTreeSubdivisionScheme = /** @class */ (function () {\n    function QuadTreeSubdivisionScheme() {\n    }\n    QuadTreeSubdivisionScheme.prototype.getSubdivisionX = function () {\n        return 2;\n    };\n    QuadTreeSubdivisionScheme.prototype.getSubdivisionY = function () {\n        return 2;\n    };\n    QuadTreeSubdivisionScheme.prototype.getLevelDimensionX = function (level) {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    };\n    QuadTreeSubdivisionScheme.prototype.getLevelDimensionY = function (level) {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    };\n    return QuadTreeSubdivisionScheme;\n}());\n/**\n * [[SubdivisionScheme]] representing a quadtree.\n */\nexports.quadTreeSubdivisionScheme = new QuadTreeSubdivisionScheme();\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_utils_1 = require(\"@here/harp-utils\");\nvar THREE = require(\"three\");\nvar FadingChunks_1 = require(\"@here/harp-materials/lib/ShaderChunks/FadingChunks\");\n/**\n * Translates a linear distance value [0..1], where 1 is the distance to the far plane, into\n * [0..cameraFar].\n *\n * Copy from MapViewUtils, since it cannot be accessed here because of circular dependencies.\n *\n * @param distance Distance from the camera (range: [0, 1]).\n * @param camera Camera applying the perspective projection.\n */\nfunction cameraToWorldDistance(distance, camera) {\n    var perspCam = camera;\n    return distance * perspCam.far;\n}\n/**\n * Namespace with support functions for implementors of `FadingFeature`.\n */\nvar FadingFeature;\n(function (FadingFeature) {\n    FadingFeature.DEFAULT_FADE_NEAR = -1.0;\n    FadingFeature.DEFAULT_FADE_FAR = -1.0;\n    /**\n     * Patch the THREE.ShaderChunk on first call with some extra shader chunks.\n     */\n    function patchGlobalShaderChunks() {\n        if (THREE.ShaderChunk.fading_pars_vertex === undefined) {\n            Object.assign(THREE.ShaderChunk, FadingChunks_1.default);\n        }\n    }\n    FadingFeature.patchGlobalShaderChunks = patchGlobalShaderChunks;\n    /**\n     * Update the internals of the `FadingFeature` depending on the value of [[fadeNear]]. The\n     * fading feature will be disabled if fadeFar <= 0.0.\n     *\n     * @param fadingMaterial FadingFeature\n     */\n    function updateDistanceFadeFeature(fadingMaterial) {\n        fadingMaterial.needsUpdate = true;\n        if (fadingMaterial.defines === undefined) {\n            fadingMaterial.defines = {};\n        }\n        if (fadingMaterial.fadeFar !== undefined && fadingMaterial.fadeFar > 0.0) {\n            // Add this define to differentiate it internally from other MeshBasicMaterial\n            fadingMaterial.defines.FADING_MATERIAL = \"\";\n        }\n    }\n    FadingFeature.updateDistanceFadeFeature = updateDistanceFadeFeature;\n    /**\n     * Special function to insert shader includes after another shader include.\n     *\n     * @param shaderContent Original string.\n     * @param shaderName String to append to.\n     * @param insertedShaderName String to append after string `shaderA`.\n     * @param addTab If `true`, a tab character will be inserted before `shaderB`.\n     */\n    function insertShaderInclude(shaderContent, shaderName, insertedShaderName, addTab) {\n        var tabChar = addTab === true ? \"\\t\" : \"\";\n        var result = shaderContent.replace(\"#include <\" + shaderName + \">\", \"\\n#include <\" + shaderName + \">\\n// << Patched fading shader START >>\\n\" + tabChar + \"#include <\" + insertedShaderName + \">\\n// << Patched fading shader END >>\\n\");\n        return result;\n    }\n    FadingFeature.insertShaderInclude = insertShaderInclude;\n    /**\n     * This function should be called on implementors of FadingFeature in the `onBeforeCompile`\n     * callback of that material. It adds the required code to the shaders and declares the new\n     * uniforms that control fading based on view distance.\n     *\n     * @param fadingMaterial Material to add uniforms to.\n     * @param shader [[THREE.WebGLShader]] containing the vertex and fragment shaders to add the\n     *                  special includes to.\n     */\n    function onBeforeCompile(fadingMaterial, shader) {\n        if (fadingMaterial.fadeFar === undefined || fadingMaterial.fadeFar <= 0.0) {\n            return;\n        }\n        // The vertex and fragment shaders have been constructed dynamically. The uniforms and\n        // the shader includes are now appended to them.\n        //\n        // The object \"defines\" are not available for this material, so the fading shader chunks\n        // have the #ifdefs commented out.\n        // Create the uniforms for the shader (if not already existing), and add the new uniforms\n        // to it:\n        var uniforms = shader.uniforms;\n        uniforms.fadeNear = { value: fadingMaterial.fadeNear };\n        uniforms.fadeFar = { value: fadingMaterial.fadeFar };\n        // Append the new fading shader cod directly after the fog code. This is done by adding an\n        // include directive for the fading code.\n        shader.vertexShader = FadingFeature.insertShaderInclude(shader.vertexShader, \"fog_pars_vertex\", \"fading_pars_vertex\");\n        shader.vertexShader = FadingFeature.insertShaderInclude(shader.vertexShader, \"fog_vertex\", \"fading_vertex\", true);\n        shader.fragmentShader = FadingFeature.insertShaderInclude(shader.fragmentShader, \"fog_pars_fragment\", \"fading_pars_fragment\");\n        shader.fragmentShader = FadingFeature.insertShaderInclude(shader.fragmentShader, \"fog_fragment\", \"fading_fragment\", true);\n    }\n    FadingFeature.onBeforeCompile = onBeforeCompile;\n    /**\n     * As threejs is rendering the transparent objects last (internally), regardless of their\n     * renderOrder value, we set the transparent value to false in the [[onAfterRenderCall]]. In\n     * [[onBeforeRender]], the function [[calculateDepthFromCameraDistance]] sets it to true if the\n     * fade distance value is less than 1.\n     *\n     * @param object [[THREE.Object3D]] to prepare for rendering.\n     * @param fadeNear The fadeNear value to set in the material.\n     * @param fadeFar The fadeFar value to set in the material.\n     * @param forceMaterialToTransparent If `true`, the material will be forced to render with\n     *          blending set to `true`. May be `false` if the material is known to be transparent\n     *          anyway.\n     * @param updateUniforms If `true`, the fading uniforms are set. Not rquired if material is\n     *          handling the uniforms already, like in a [[THREE.ShaderMaterial]].\n     * @param additionalCallback If defined, this function will be called before the function will\n     *          return.\n     */\n    function addRenderHelper(object, fadeNear, fadeFar, forceMaterialToTransparent, updateUniforms, additionalCallback) {\n        // tslint:disable-next-line:no-unused-variable\n        object.onBeforeRender = function (renderer, scene, camera, geom, material) {\n            if (forceMaterialToTransparent) {\n                material.transparent = true;\n            }\n            var fadingMaterial = material;\n            fadingMaterial.fadeNear =\n                fadeNear === undefined\n                    ? FadingFeature.DEFAULT_FADE_NEAR\n                    : cameraToWorldDistance(fadeNear, camera);\n            fadingMaterial.fadeFar =\n                fadeFar === undefined\n                    ? FadingFeature.DEFAULT_FADE_FAR\n                    : cameraToWorldDistance(fadeFar, camera);\n            if (updateUniforms) {\n                var properties = renderer.properties.get(material);\n                if (properties.shader !== undefined) {\n                    properties.shader.uniforms.fadeNear.value = fadingMaterial.fadeNear;\n                    properties.shader.uniforms.fadeFar.value = fadingMaterial.fadeFar;\n                    fadingMaterial.uniformsNeedUpdate = true;\n                }\n            }\n            if (additionalCallback !== undefined) {\n                additionalCallback(renderer, material);\n            }\n        };\n        if (forceMaterialToTransparent) {\n            object.onAfterRender = function (renderer, scene, camera, geom, material) {\n                material.transparent = false;\n            };\n        }\n    }\n    FadingFeature.addRenderHelper = addRenderHelper;\n})(FadingFeature = exports.FadingFeature || (exports.FadingFeature = {}));\n/**\n * Mixin class for extended THREE materials. Adds new properties required for `fadeNear` and\n * `fadeFar`. Thre is some special handling for the fadeNear/fadeFar properties, which get some\n * setters and getters in a way that works well with the mixin.\n *\n * @see [[Tile#addRenderHelper]]\n */\nvar FadingFeatureMixin = /** @class */ (function () {\n    function FadingFeatureMixin() {\n        this.m_fadeNear = FadingFeature.DEFAULT_FADE_NEAR;\n        this.m_fadeFar = FadingFeature.DEFAULT_FADE_FAR;\n    }\n    /**\n     * @see [[FadingFeature#fadeNear]]\n     */\n    FadingFeatureMixin.prototype.getFadeNear = function () {\n        return this.m_fadeNear;\n    };\n    /**\n     * @see [[FadingFeature#fadeNear]]\n     */\n    FadingFeatureMixin.prototype.setFadeNear = function (value) {\n        this.needsUpdate = this.needsUpdate || value !== this.m_fadeNear;\n        this.m_fadeNear = value;\n        if (this.needsUpdate) {\n            FadingFeature.updateDistanceFadeFeature(this);\n        }\n    };\n    /**\n     * @see [[FadingFeature#fadeFar]]\n     */\n    FadingFeatureMixin.prototype.getFadeFar = function () {\n        return this.m_fadeFar;\n    };\n    /**\n     * @see [[FadingFeature#fadeFar]]\n     */\n    FadingFeatureMixin.prototype.setFadeFar = function (value) {\n        this.needsUpdate = this.needsUpdate || value !== this.m_fadeFar;\n        this.m_fadeFar = value;\n        if (this.needsUpdate) {\n            FadingFeature.updateDistanceFadeFeature(this);\n        }\n    };\n    /**\n     * The mixin classes should call this method to register the properties [[fadeNear]] and\n     * [[fadeFar]].\n     */\n    FadingFeatureMixin.prototype.addFadingProperties = function () {\n        var _this = this;\n        Object.defineProperty(this, \"fadeNear\", {\n            get: function () {\n                return _this.getFadeNear();\n            },\n            set: function (val) {\n                _this.setFadeNear(val);\n            }\n        });\n        Object.defineProperty(this, \"fadeFar\", {\n            get: function () {\n                return _this.getFadeFar();\n            },\n            set: function (val) {\n                _this.setFadeFar(val);\n            }\n        });\n    };\n    /**\n     * Apply the fadeNear/fadeFar values from the parameters to the respective properties.\n     *\n     * @param params `FadingMeshBasicMaterial` parameters.\n     */\n    FadingFeatureMixin.prototype.applyFadingParameters = function (params) {\n        var _this = this;\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.fadeNear !== undefined) {\n                this.setFadeNear(params.fadeNear);\n            }\n            if (params.fadeFar !== undefined) {\n                this.setFadeFar(params.fadeFar);\n            }\n        }\n        this.onBeforeCompile = function (shader) {\n            FadingFeature.onBeforeCompile(_this, shader);\n        };\n    };\n    /**\n     * Copy fadeNear/fadeFar values from other FadingFeature.\n     *\n     * @param source The material to copy property values from.\n     */\n    FadingFeatureMixin.prototype.copyFadingParameters = function (source) {\n        this.setFadeNear(source.fadeNear === undefined ? FadingFeature.DEFAULT_FADE_NEAR : source.fadeNear);\n        this.setFadeFar(source.fadeFar === undefined ? FadingFeature.DEFAULT_FADE_FAR : source.fadeFar);\n        return this;\n    };\n    return FadingFeatureMixin;\n}());\nexports.FadingFeatureMixin = FadingFeatureMixin;\n/**\n * Subclass of [[THREE.MeshBasicMaterial]]. Adds new properties required for [[fadeNear]] and\n * [[fadeFar]]. In addition to the new properties (which update their respective uniforms), it is\n * also required to update the material in their objects [[onBeforeRender]] and [[OnAfterRender]]\n * calls, where their flag [[transparent]] is set and the internal fadeNear/fadeFar values are\n * updated to world space distances.\n *\n * @see [[Tile#addRenderHelper]]\n */\nvar MapMeshBasicMaterial = /** @class */ (function (_super) {\n    __extends(MapMeshBasicMaterial, _super);\n    /**\n     * Constructs a new `FadingMeshBasicMaterial`.\n     *\n     * @param params `FadingMeshBasicMaterial` parameters.\n     */\n    function MapMeshBasicMaterial(params) {\n        var _this = _super.call(this, params) || this;\n        FadingFeature.patchGlobalShaderChunks();\n        _this.addFadingProperties();\n        _this.applyFadingParameters(params);\n        return _this;\n    }\n    MapMeshBasicMaterial.prototype.clone = function () {\n        return new MapMeshBasicMaterial().copy(this);\n    };\n    MapMeshBasicMaterial.prototype.copy = function (source) {\n        _super.prototype.copy.call(this, source);\n        this.copyFadingParameters(source);\n        return this;\n    };\n    Object.defineProperty(MapMeshBasicMaterial.prototype, \"fadeNear\", {\n        // Only here to make the compiler happy, these methods will be overriden: The actual\n        // implementations are those in [[FadingFeatureMixin]], see below:\n        //\n        // applyMixinsWithoutProperties(FadingMeshBasicMaterial, [FadingFeatureMixin]);\n        //\n        // Mixin declarations start ---------------------------------------------------------\n        get: function () {\n            return FadingFeature.DEFAULT_FADE_NEAR;\n        },\n        // tslint:disable-next-line:no-unused-variable\n        set: function (value) {\n            // to be overridden\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapMeshBasicMaterial.prototype, \"fadeFar\", {\n        get: function () {\n            return FadingFeature.DEFAULT_FADE_FAR;\n        },\n        // tslint:disable-next-line:no-unused-variable\n        set: function (value) {\n            // to be overridden\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MapMeshBasicMaterial.prototype.addFadingProperties = function () {\n        // to be overridden\n    };\n    // tslint:disable-next-line:no-unused-variable\n    MapMeshBasicMaterial.prototype.applyFadingParameters = function (params) {\n        // to be overridden\n    };\n    // tslint:disable-next-line:no-unused-variable\n    MapMeshBasicMaterial.prototype.copyFadingParameters = function (source) {\n        // to be overridden\n    };\n    return MapMeshBasicMaterial;\n}(THREE.MeshBasicMaterial));\nexports.MapMeshBasicMaterial = MapMeshBasicMaterial;\n/**\n * Subclass of THREE.MeshStandardMaterial. Adds new properties required for `fadeNear` and\n * `fadeFar`. In addition to the new properties (which fill respective uniforms), it is also\n * required to update the material in their objects `onBeforeRender` and `OnAfterRender` calls,\n * where their flag `transparent` is set and the internal fadeNear/fadeFar values are updated to\n * world space distances.\n *\n * @see [[Tile#addRenderHelper]]\n */\nvar MapMeshStandardMaterial = /** @class */ (function (_super) {\n    __extends(MapMeshStandardMaterial, _super);\n    /**\n     * Constructs a new `FadingMeshStandardMaterial`.\n     *\n     * @param params `FadingMeshStandardMaterial` parameters.\n     */\n    function MapMeshStandardMaterial(params) {\n        var _this = _super.call(this, params) || this;\n        FadingFeature.patchGlobalShaderChunks();\n        _this.addFadingProperties();\n        _this.applyFadingParameters(params);\n        return _this;\n    }\n    MapMeshStandardMaterial.prototype.clone = function () {\n        return new MapMeshStandardMaterial().copy(this);\n    };\n    MapMeshStandardMaterial.prototype.copy = function (source) {\n        _super.prototype.copy.call(this, source);\n        this.copyFadingParameters(source);\n        return this;\n    };\n    Object.defineProperty(MapMeshStandardMaterial.prototype, \"fadeNear\", {\n        // Only here to make the compiler happy, these methods will be overriden: The actual\n        // implementations are those in [[FadingFeatureMixin]], see below:\n        //\n        // applyMixinsWithoutProperties(FadingMeshBasicMaterial, [FadingFeatureMixin]);\n        //\n        // Mixin declarations start ---------------------------------------------------------\n        get: function () {\n            return FadingFeature.DEFAULT_FADE_NEAR;\n        },\n        // tslint:disable-next-line:no-unused-variable\n        set: function (value) {\n            // to be overridden\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapMeshStandardMaterial.prototype, \"fadeFar\", {\n        get: function () {\n            return FadingFeature.DEFAULT_FADE_FAR;\n        },\n        // tslint:disable-next-line:no-unused-variable\n        set: function (value) {\n            // to be overridden\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MapMeshStandardMaterial.prototype.addFadingProperties = function () {\n        // to be overridden\n    };\n    // tslint:disable-next-line:no-unused-variable\n    MapMeshStandardMaterial.prototype.applyFadingParameters = function (params) {\n        // to be overridden\n    };\n    // tslint:disable-next-line:no-unused-variable\n    MapMeshStandardMaterial.prototype.copyFadingParameters = function (source) {\n        // to be overridden\n    };\n    return MapMeshStandardMaterial;\n}(THREE.MeshStandardMaterial));\nexports.MapMeshStandardMaterial = MapMeshStandardMaterial;\n/**\n * Finish the classes MapMeshBasicMaterial and MapMeshStandardMaterial by assigning them the actual\n * implementations of the mixed in functions.\n */\nharp_utils_1.applyMixinsWithoutProperties(MapMeshBasicMaterial, [FadingFeatureMixin]);\nharp_utils_1.applyMixinsWithoutProperties(MapMeshStandardMaterial, [FadingFeatureMixin]);\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum log levels\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Log\"] = 2] = \"Log\";\n    LogLevel[LogLevel[\"Info\"] = 3] = \"Info\";\n    LogLevel[LogLevel[\"Warn\"] = 4] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 5] = \"Error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Logger options to configure logger\n */\nvar LoggerOptions = /** @class */ (function () {\n    function LoggerOptions() {\n    }\n    return LoggerOptions;\n}());\nexports.LoggerOptions = LoggerOptions;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    project_line_vert_func: \"\\nvoid projectVertex(vec2 segment, vec2 t0, vec2 t1, float lineWidth, inout vec2 pos, inout vec2 uv) {\\n        float uu = uv.x / 2.0 + 0.5;\\n        float ss = mix(segment.x, segment.y, uu);\\n\\n        if (t0 != t1) {\\n            float angle = atan(t0.x * t1.y - t0.y * t1.x, t0.x * t1.x + t0.y * t1.y);\\n            vec2 t = normalize(t0 + t1);\\n            vec2 n = vec2(t.y, -t.x);\\n            pos += uv.y * lineWidth * n / cos(angle / 2.0);\\n            uv.x = ss + uv.x * lineWidth * uv.y * tan(angle / 2.0);\\n        }\\n        else {\\n            vec2 n = vec2(t0.y, -t0.x);\\n            pos += uv.y * lineWidth * n + uv.x * lineWidth * mix(t0, t1, uu);\\n            uv.x = ss + uv.x * lineWidth;\\n        }\\n}\\n\",\n    join_dist_func: \"\\nfloat joinDist(vec2 segment, vec2 texcoord) {\\n    float d = abs(texcoord.y);\\n    float dx = texcoord.x;\\n    if (dx < segment.x) {\\n        d = max(d, length(texcoord - vec2(segment.x, 0.0)));\\n    } else if (dx > segment.y) {\\n        d = max(d, length(texcoord - vec2(segment.y, 0.0)));\\n    }\\n    return d;\\n}\\n\",\n    tile_clip_func: \"\\nvoid tileClip(vec2 tilePos, vec2 tileSize) {\\n    if (tileSize.x > 0.0 && (tilePos.x < -tileSize.x / 2.0 || tilePos.x > tileSize.x / 2.0))\\n        discard;\\n    if (tileSize.y > 0.0 && (tilePos.y < -tileSize.y / 2.0 || tilePos.y > tileSize.y / 2.0))\\n        discard;\\n}\\n\",\n    high_precision_vert2D_func: \"\\nvec2 subtractDblEyePos( const in vec2 pos ) {\\n    vec2 t1 = positionLow - u_eyepos_lowpart.xy;\\n    vec2 e = t1 - positionLow.xy;\\n    vec2 t2 = ((-u_eyepos_lowpart.xy - e) + (positionLow.xy - (t1 - e))) + pos - u_eyepos.xy;\\n    vec2 high_delta = t1 + t2;\\n    vec2 low_delta = t2 - (high_delta - t1);\\n    return (high_delta + low_delta);\\n}\\n\",\n    high_precision_vert3D_func: \"\\nvec3 subtractDblEyePos( const in vec3 pos ) {\\n    vec3 t1 = positionLow - u_eyepos_lowpart;\\n    vec3 e = t1 - positionLow;\\n    vec3 t2 = ((-u_eyepos_lowpart - e) + (positionLow - (t1 - e))) + pos - u_eyepos;\\n    vec3 high_delta = t1 + t2;\\n    vec3 low_delta = t2 - (high_delta - t1);\\n    return (high_delta + low_delta);\\n}\\n\"\n};\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_datasource_protocol_1 = require(\"@here/harp-datasource-protocol\");\nvar harp_utils_1 = require(\"@here/harp-utils\");\nvar logger = harp_utils_1.LoggerManager.instance.create(\"WorkerService\", { enabled: false });\n/**\n * Worker Service communication helper.\n *\n * Listens to Web Worker messages from [[ConcurrentWorkerSet]] and implements:\n *  - worker service initialization\n *  - request/respone scheme\n *  - error handling.\n *\n * This class should be subclassed to provide concrete like [[TileDecoderService]].\n *\n * Communication peer for [[ConcurrentWorkerSet]].\n */\nvar WorkerService = /** @class */ (function () {\n    /**\n     * Sets up the `WorkerService` with the specified name, and starts processing messages.\n     *\n     * @param serviceId The service id.\n     */\n    function WorkerService(serviceId) {\n        var _this = this;\n        this.serviceId = serviceId;\n        this.m_pendingRequests = new Map();\n        /**\n         * Central message handler for this service.\n         *\n         * Responsible for filtering message target and managing request/response sequence.\n         *\n         * @param message Message to be dispatched.\n         */\n        this.onMessage = function (message) {\n            if (typeof message.data.service !== \"string\" || message.data.service !== _this.serviceId) {\n                return;\n            }\n            try {\n                if (harp_datasource_protocol_1.isRequestMessage(message.data)) {\n                    var request_1 = message.data;\n                    var requestEntry_1 = {\n                        service: request_1.service,\n                        messageId: request_1.messageId,\n                        responseSent: false\n                    };\n                    _this.m_pendingRequests.set(request_1.messageId, requestEntry_1);\n                    _this.tryHandleRequest(request_1.request)\n                        .then(function (response) {\n                        _this.doSendResponse(requestEntry_1, {\n                            service: _this.serviceId,\n                            type: harp_datasource_protocol_1.DecodedTileMessageName.Response,\n                            messageId: request_1.messageId,\n                            response: response.response\n                        }, response.transferList);\n                    })\n                        .catch(function (error) {\n                        _this.doSendResponse(requestEntry_1, {\n                            service: _this.serviceId,\n                            type: harp_datasource_protocol_1.DecodedTileMessageName.Response,\n                            messageId: request_1.messageId,\n                            error: error.toString()\n                        });\n                    });\n                }\n                else {\n                    _this.tryHandleMessage(message.data);\n                }\n            }\n            catch (err) {\n                logger.error(\"[\" + _this.serviceId + \"]: Unhandled exception when handling \" + message.type);\n            }\n        };\n        self.addEventListener(\"message\", this.onMessage);\n        var isInitializedMessage = {\n            service: serviceId,\n            type: harp_datasource_protocol_1.DecodedTileMessageName.Initialized\n        };\n        self.postMessage(isInitializedMessage);\n    }\n    /**\n     * Destroy the `WorkerService`. Cancels all pending requests ad removes itself from the message\n     * queue.\n     */\n    WorkerService.prototype.destroy = function () {\n        this.cancelAllPendingRequests();\n        self.removeEventListener(\"message\", this.onMessage);\n    };\n    /**\n     * Message handler to be overridden by implementation.\n     *\n     * @param message `MessageEvent.data` as received by `WorkerService`.\n     */\n    WorkerService.prototype.handleMessage = function (message) {\n        logger.error(\"[\" + this.serviceId + \"]: Invalid message \" + message.type);\n    };\n    /**\n     * Call request handler to be overridden by implementation.\n     *\n     * @param request [[RequestMessage.request]] as received by `WorkerService`.\n     */\n    WorkerService.prototype.handleRequest = function (request) {\n        throw new Error(\"ServiceAdapter[\" + this.serviceId + \"]: Invalid request '\" + request.type + \"'\");\n    };\n    /**\n     * Safety belt over [[handleMessage]] for correct exception handling & logging.\n     */\n    WorkerService.prototype.tryHandleMessage = function (message) {\n        try {\n            this.handleMessage(message);\n        }\n        catch (error) {\n            logger.error(\"[\" + this.serviceId + \"]: Failed, handling message \" + message.type);\n        }\n    };\n    /**\n     * Safety belt over [[handleRequest]] for correct exception handling in promise chain.\n     */\n    WorkerService.prototype.tryHandleRequest = function (request) {\n        try {\n            return this.handleRequest(request);\n        }\n        catch (error) {\n            // we don't log exceptions here as they are propagated to client as responses\n            logger.error(\"[\" + this.serviceId + \"]: Failure\", error);\n            return Promise.reject(error);\n        }\n    };\n    WorkerService.prototype.doSendResponse = function (requestEntry, response, transferList) {\n        if (requestEntry.responseSent) {\n            return;\n        }\n        self.postMessage(response, transferList);\n        requestEntry.responseSent = true;\n        this.m_pendingRequests.delete(requestEntry.messageId);\n    };\n    WorkerService.prototype.cancelAllPendingRequests = function () {\n        var _this = this;\n        this.m_pendingRequests.forEach(function (requestEntry) {\n            _this.doSendResponse(requestEntry, {\n                service: _this.serviceId,\n                type: harp_datasource_protocol_1.DecodedTileMessageName.Response,\n                messageId: requestEntry.messageId,\n                error: \"cancelled\"\n            });\n        });\n    };\n    return WorkerService;\n}());\nexports.WorkerService = WorkerService;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lib/coordinates/GeoBox\"));\n__export(require(\"./lib/coordinates/GeoCoordinatesLike\"));\n__export(require(\"./lib/coordinates/GeoCoordinates\"));\n__export(require(\"./lib/projection/EarthConstants\"));\n__export(require(\"./lib/projection/EquirectangularProjection\"));\n__export(require(\"./lib/projection/IdentityProjection\"));\n__export(require(\"./lib/projection/MercatorProjection\"));\n__export(require(\"./lib/projection/WebMercatorProjection\"));\n__export(require(\"./lib/tiling/FlatTileBoundingBoxGenerator\"));\n__export(require(\"./lib/tiling/HalfQuadTreeSubdivisionScheme\"));\n__export(require(\"./lib/tiling/QuadTreeSubdivisionScheme\"));\n__export(require(\"./lib/tiling/QuadTree\"));\n__export(require(\"./lib/tiling/SubTiles\"));\n__export(require(\"./lib/tiling/TileKey\"));\n__export(require(\"./lib/tiling/TileKeyUtils\"));\n__export(require(\"./lib/tiling/TileTreeTraverse\"));\n__export(require(\"./lib/tiling/TilingScheme\"));\n__export(require(\"./lib/tiling/HereTilingScheme\"));\n__export(require(\"./lib/tiling/WebMercatorTilingScheme\"));\n__export(require(\"./lib/tiling/MercatorTilingScheme\"));\n__export(require(\"./lib/math/Vector3Like\"));\n__export(require(\"./lib/math/MathUtils\"));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GeoBox_1 = require(\"../coordinates/GeoBox\");\nvar GeoCoordinates_1 = require(\"../coordinates/GeoCoordinates\");\nvar MathUtils_1 = require(\"../math/MathUtils\");\nvar DEG2RAD = Math.PI / 180;\nvar EquirectangularProjection = /** @class */ (function () {\n    function EquirectangularProjection() {\n    }\n    EquirectangularProjection.prototype.getScaleFactor = function (_worldPoint) {\n        return 1;\n    };\n    EquirectangularProjection.prototype.worldExtent = function (minAltitude, maxAltitude, result) {\n        if (!result) {\n            result = MathUtils_1.MathUtils.newEmptyBox3();\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = 1.0;\n        result.max.y = 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    };\n    EquirectangularProjection.prototype.projectPoint = function (geoPoint, result) {\n        if (result === undefined) {\n            /*\n             * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n             * might be a concrete class which is not available at runtime.\n             * Consider the following example:\n             *\n             *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n             *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n             *\n             * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n             */\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 };\n        }\n        result.x =\n            (geoPoint.longitude * DEG2RAD + Math.PI) * EquirectangularProjection.geoToWorldScale;\n        result.y =\n            (geoPoint.latitude * DEG2RAD + Math.PI * 0.5) *\n                EquirectangularProjection.geoToWorldScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    };\n    EquirectangularProjection.prototype.unprojectPoint = function (worldPoint) {\n        var geoPoint = GeoCoordinates_1.GeoCoordinates.fromRadians(worldPoint.y * EquirectangularProjection.worldToGeoScale - Math.PI * 0.5, worldPoint.x * EquirectangularProjection.worldToGeoScale - Math.PI, worldPoint.z);\n        return geoPoint;\n    };\n    EquirectangularProjection.prototype.projectBox = function (geoBox, result) {\n        var worldCenter = this.projectPoint(new GeoCoordinates_1.GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0));\n        var latitudeSpanInRadians = geoBox.latitudeSpanInRadians, longitudeSpanInRadians = geoBox.longitudeSpanInRadians, altitudeSpan = geoBox.altitudeSpan;\n        var sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        var sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = MathUtils_1.MathUtils.newEmptyBox3();\n        }\n        result.min.x = worldCenter.x - sizeX * 0.5;\n        result.min.y = worldCenter.y - sizeY * 0.5;\n        result.max.x = worldCenter.x + sizeX * 0.5;\n        result.max.y = worldCenter.y + sizeY * 0.5;\n        if (altitudeSpan !== undefined) {\n            result.min.z = worldCenter.z - altitudeSpan * 0.5;\n            result.max.z = worldCenter.z + altitudeSpan * 0.5;\n        }\n        else {\n            result.min.z = 0;\n            result.max.z = 0;\n        }\n        return result;\n    };\n    EquirectangularProjection.prototype.unprojectBox = function (worldBox) {\n        var minGeo = this.unprojectPoint(worldBox.min);\n        var maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox_1.GeoBox.fromCoordinates(minGeo, maxGeo);\n    };\n    EquirectangularProjection.geoToWorldScale = 1.0 / (2.0 * Math.PI);\n    EquirectangularProjection.worldToGeoScale = (2.0 * Math.PI) / 1.0;\n    return EquirectangularProjection;\n}());\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexports.equirectangularProjection = new EquirectangularProjection();\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GeoBox_1 = require(\"../coordinates/GeoBox\");\nvar GeoCoordinates_1 = require(\"../coordinates/GeoCoordinates\");\nvar EarthConstants_1 = require(\"./EarthConstants\");\nvar MercatorProjection_1 = require(\"./MercatorProjection\");\nvar WebMercatorProjection = /** @class */ (function (_super) {\n    __extends(WebMercatorProjection, _super);\n    function WebMercatorProjection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebMercatorProjection.prototype.projectPoint = function (geoPoint, result) {\n        var normalized;\n        if (geoPoint instanceof GeoCoordinates_1.GeoCoordinates) {\n            normalized = geoPoint.normalized();\n        }\n        else {\n            normalized = new GeoCoordinates_1.GeoCoordinates(geoPoint.latitude, geoPoint.longitude, geoPoint.altitude).normalized();\n        }\n        /*\n        * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n        * might be a concrete class which is not available at runtime.\n        * Consider the following example:\n        *\n        *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n        *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n        *\n        * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n        */\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 };\n        }\n        result.x = ((normalized.longitude + 180) / 360) * EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        var sy = Math.sin(MercatorProjection_1.MercatorProjection.latitudeClamp(normalized.latitudeInRadians));\n        result.y =\n            (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) *\n                EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    };\n    WebMercatorProjection.prototype.unprojectPoint = function (worldPoint) {\n        var clampedX = MercatorProjection_1.MercatorProjection.clamp(worldPoint.x, 0, EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE);\n        var x = clampedX / EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE - 0.5;\n        var clampedY = MercatorProjection_1.MercatorProjection.clamp(worldPoint.y, 0, EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE);\n        var y = 0.5 - clampedY / EarthConstants_1.EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n        var longitude = 360 * x;\n        var latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n        return new GeoCoordinates_1.GeoCoordinates(latitude, longitude, worldPoint.z);\n    };\n    WebMercatorProjection.prototype.unprojectBox = function (worldBox) {\n        var minGeo = this.unprojectPoint(worldBox.min);\n        var maxGeo = this.unprojectPoint(worldBox.max);\n        var geoBox = new GeoBox_1.GeoBox(new GeoCoordinates_1.GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude), new GeoCoordinates_1.GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude));\n        return geoBox;\n    };\n    WebMercatorProjection.MAXIMUM_LATITUDE = 1.4844222297453323;\n    return WebMercatorProjection;\n}(MercatorProjection_1.MercatorProjection));\n/**\n * Web Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexports.webMercatorProjection = new WebMercatorProjection();\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MathUtils_1 = require(\"../math/MathUtils\");\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nvar FlatTileBoundingBoxGenerator = /** @class */ (function () {\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme The [[TilingScheme]] used to compute bounding boxes.\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     */\n    function FlatTileBoundingBoxGenerator(tilingScheme, minElevation, maxElevation) {\n        if (minElevation === void 0) { minElevation = 0; }\n        if (maxElevation === void 0) { maxElevation = 0; }\n        this.tilingScheme = tilingScheme;\n        this.minElevation = minElevation;\n        this.maxElevation = maxElevation;\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        var _a = this.m_worldBox, min = _a.min, max = _a.max;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n    Object.defineProperty(FlatTileBoundingBoxGenerator.prototype, \"projection\", {\n        /**\n         * Returns the [[Projection]] of the [[TilingScheme]].\n         */\n        get: function () {\n            return this.m_tilingScheme.projection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlatTileBoundingBoxGenerator.prototype, \"subdivisionScheme\", {\n        /**\n         * Returns the [[SubdivisionScheme]] of the [[TilingScheme]].\n         */\n        get: function () {\n            return this.m_tilingScheme.subdivisionScheme;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the bounding box in world coordinates of the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey The TileKey.\n     * @param result The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    FlatTileBoundingBoxGenerator.prototype.getWorldBox = function (tileKey, result) {\n        var level = tileKey.level;\n        var levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        var levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        var sizeX = this.m_worldDimensions.x / levelDimensionX;\n        var sizeY = this.m_worldDimensions.y / levelDimensionY;\n        var originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        var originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n        if (!result) {\n            result = MathUtils_1.MathUtils.newEmptyBox3();\n        }\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    };\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey The [[TileKey]].\n     */\n    FlatTileBoundingBoxGenerator.prototype.getGeoBox = function (tileKey) {\n        var worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    };\n    return FlatTileBoundingBoxGenerator;\n}());\nexports.FlatTileBoundingBoxGenerator = FlatTileBoundingBoxGenerator;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HalfQuadTreeSubdivisionScheme = /** @class */ (function () {\n    function HalfQuadTreeSubdivisionScheme() {\n    }\n    HalfQuadTreeSubdivisionScheme.prototype.getSubdivisionX = function () {\n        return 2;\n    };\n    HalfQuadTreeSubdivisionScheme.prototype.getSubdivisionY = function (level) {\n        return level === 0 ? 1 : 2;\n    };\n    HalfQuadTreeSubdivisionScheme.prototype.getLevelDimensionX = function (level) {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    };\n    HalfQuadTreeSubdivisionScheme.prototype.getLevelDimensionY = function (level) {\n        // tslint:disable-next-line:no-bitwise\n        return level !== 0 ? 1 << (level - 1) : 1;\n    };\n    return HalfQuadTreeSubdivisionScheme;\n}());\n/**\n * A [[SubdivisionScheme]] used to represent half quadtrees. This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexports.halfQuadTreeSubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TileKey_1 = require(\"./TileKey\");\nvar SubTiles = /** @class */ (function () {\n    function SubTiles(tileKey, level, mask) {\n        this.m_tileKey = tileKey;\n        this.m_level = level;\n        // tslint:disable:no-bitwise\n        this.m_count = 1 << (level << 1);\n        this.m_mask = mask;\n        this.m_shift = level > 2 ? (level - 2) << 1 : 0;\n        // tslint:enable:no-bitwise\n    }\n    Object.defineProperty(SubTiles.prototype, \"length\", {\n        get: function () {\n            return this.m_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SubTiles.prototype, \"level\", {\n        get: function () {\n            return this.m_level;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SubTiles.prototype, \"tileKey\", {\n        get: function () {\n            return this.m_tileKey;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SubTiles.prototype.iterator = function () {\n        return new SubTiles.Iterator(this);\n    };\n    SubTiles.prototype.skip = function (index) {\n        // tslint:disable:no-bitwise\n        if (this.m_mask !== ~0) {\n            while (index < this.m_count && (this.m_mask & (1 << (index >> this.m_shift))) === 0) {\n                ++index;\n            }\n        }\n        // tslint:enable:no-bitwise\n        return index;\n    };\n    return SubTiles;\n}());\nexports.SubTiles = SubTiles;\n(function (SubTiles) {\n    var Iterator = /** @class */ (function () {\n        function Iterator(parent, index) {\n            if (index === void 0) { index = 0; }\n            this.m_parent = parent;\n            this.m_index = parent.skip(index);\n        }\n        Object.defineProperty(Iterator.prototype, \"value\", {\n            get: function () {\n                var parentKey = this.m_parent.tileKey;\n                var subLevel = this.m_parent.level;\n                return TileKey_1.TileKey.fromRowColumnLevel(\n                // tslint:disable:no-bitwise\n                (parentKey.row << subLevel) | (this.m_index >> subLevel), (parentKey.column << subLevel) | (this.m_index & ((1 << subLevel) - 1)), parentKey.level + subLevel\n                // tslint:enableno-bitwise\n                );\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Iterator.prototype.next = function () {\n            this.m_index = this.m_parent.skip(++this.m_index);\n        };\n        return Iterator;\n    }());\n    SubTiles.Iterator = Iterator;\n})(SubTiles = exports.SubTiles || (exports.SubTiles = {}));\nexports.SubTiles = SubTiles;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GeoCoordinates_1 = require(\"../coordinates/GeoCoordinates\");\nvar TileKey_1 = require(\"./TileKey\");\nvar TileKeyUtils = /** @class */ (function () {\n    function TileKeyUtils() {\n    }\n    TileKeyUtils.geoCoordinatesToTileKey = function (tilingScheme, geoPoint, level) {\n        var projection = tilingScheme.projection;\n        var subdivisionScheme = tilingScheme.subdivisionScheme;\n        var worldPoint = projection.projectPoint(geoPoint);\n        var cx = subdivisionScheme.getLevelDimensionX(level);\n        var cy = subdivisionScheme.getLevelDimensionY(level);\n        var _a = projection.worldExtent(0, 0), min = _a.min, max = _a.max;\n        var worldSizeX = max.x - min.x;\n        var worldSizeY = max.y - min.y;\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n        var column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        var row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n        return TileKey_1.TileKey.fromRowColumnLevel(row, column, level);\n    };\n    TileKeyUtils.geoRectangleToTileKeys = function (tilingScheme, geoBox, level) {\n        var wrap = function (value, lower, upper) {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n            return lower + ((value - lower) % (upper - lower));\n        };\n        var clamp = function (x, minVal, maxVal) {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n        // Clamp at the poles and wrap around the international date line.\n        var southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        var southWestLatitude = clamp(geoBox.southWest.latitudeInRadians, -(Math.PI * 0.5), Math.PI * 0.5);\n        var northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        var northEastLatitude = clamp(geoBox.northEast.latitudeInRadians, -(Math.PI * 0.5), Math.PI * 0.5);\n        var minTileKey = TileKeyUtils.geoCoordinatesToTileKey(tilingScheme, GeoCoordinates_1.GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude), level);\n        var maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(tilingScheme, GeoCoordinates_1.GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude), level);\n        var columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n        var minColumn = minTileKey.column;\n        var maxColumn = maxTileKey.column;\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            }\n            else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n        var minRow = Math.min(minTileKey.row, maxTileKey.row);\n        var maxRow = Math.max(minTileKey.row, maxTileKey.row);\n        var keys = new Array();\n        for (var row = minRow; row <= maxRow; ++row) {\n            for (var column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey_1.TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n        return keys;\n    };\n    return TileKeyUtils;\n}());\nexports.TileKeyUtils = TileKeyUtils;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubTiles_1 = require(\"./SubTiles\");\nvar TileTreeTraverse = /** @class */ (function () {\n    function TileTreeTraverse(subdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n    TileTreeTraverse.prototype.subTiles = function (tileKey) {\n        var subTileCount = this.m_subdivisionScheme.getSubdivisionX(tileKey.level) *\n            this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n        // tslint:disable-next-line:no-bitwise\n        var subTileMask = ~(~0 << subTileCount);\n        var subTiles = new SubTiles_1.SubTiles(tileKey, 1, subTileMask);\n        var it = subTiles.iterator();\n        var result = new Array();\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < subTiles.length; ++i) {\n            result.push(it.value);\n            it.next();\n        }\n        return result;\n    };\n    return TileTreeTraverse;\n}());\nexports.TileTreeTraverse = TileTreeTraverse;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lib/CopyShader\"));\n__export(require(\"./lib/DashedLineMaterial\"));\n__export(require(\"./lib/EdgeMaterial\"));\n__export(require(\"./lib/MapMeshMaterials\"));\n__export(require(\"./lib/GlyphCopyMaterial\"));\n__export(require(\"./lib/HighPrecisionLineMaterial\"));\n__export(require(\"./lib/HighPrecisionPointMaterial\"));\n__export(require(\"./lib/IconMaterial\"));\n__export(require(\"./lib/SolidLineMaterial\"));\n__export(require(\"./lib/CirclePointsMaterial\"));\n__export(require(\"./lib/MSAAMaterial\"));\n__export(require(\"./lib/TextMaterial\"));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The base shader to use for [[MapView]]'s composing passes, like [[MSAAMaterial]].\n */\nexports.CopyShader = {\n    uniforms: {\n        tDiffuse: { value: null },\n        opacity: { value: 1.0 }\n    },\n    vertexShader: \"\\n    varying vec2 vUv;\\n    void main() {\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n    }\",\n    fragmentShader: \"\\n    uniform float opacity;\\n    uniform sampler2D tDiffuse;\\n    varying vec2 vUv;\\n    void main() {\\n        vec4 texel = texture2D( tDiffuse, vUv );\\n        gl_FragColor = opacity * texel;\\n    }\"\n};\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar MapMeshMaterials_1 = require(\"./MapMeshMaterials\");\nvar LinesChunks_1 = require(\"./ShaderChunks/LinesChunks\");\nvar vertexSource = \"\\nattribute vec2 position;\\nattribute vec4 tangents;\\nattribute vec2 segment;\\nattribute vec2 angles;\\nattribute vec2 texcoord;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float lineWidth;\\n\\nvarying vec2 vPosition;\\nvarying vec2 vTexcoord;\\nvarying vec2 vSegment;\\nvarying float vLinewidth;\\n\\n#ifdef USE_COLOR\\nattribute vec4 color;\\nvarying vec3 vColor;\\n#endif\\n\\n#ifdef USE_FADING\\n#include <fading_pars_vertex>\\n#endif\\n\\n#include <fog_pars_vertex>\\n#include <project_line_vert_func>\\n\\nvoid main() {\\n    vLinewidth = lineWidth;\\n    vSegment = segment;\\n\\n    #ifdef USE_COLOR\\n    vColor = color.rgb;\\n    #endif\\n\\n    vec2 pos = position;\\n    vec2 uvs = texcoord;\\n    projectVertex(segment, normalize(tangents.xy), normalize(tangents.zw), lineWidth, pos, uvs);\\n\\n    vPosition = pos;\\n    vTexcoord = vec2(uvs.x, uvs.y * lineWidth);\\n    vec4 mvPosition = modelViewMatrix * vec4(pos, 0.0, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    #ifdef USE_FADING\\n    #include <fading_vertex>\\n    #endif\\n\\n    #include <fog_vertex>\\n}\";\nvar fragmentSource = \"\\nprecision highp float;\\nprecision highp int;\\n\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform vec2 tileSize;\\n#if DASHED_LINE\\nuniform float dashSize;\\nuniform float gapSize;\\n#endif\\n\\nvarying vec2 vPosition;\\nvarying vec2 vTexcoord;\\nvarying vec2 vSegment;\\nvarying float vLinewidth;\\n#ifdef USE_COLOR\\nvarying vec3 color;\\n#endif\\n\\n#include <join_dist_func>\\n#include <tile_clip_func>\\n\\n#ifdef USE_FADING\\n#include <fading_pars_fragment>\\n#endif\\n\\n#include <fog_pars_fragment>\\n\\nvoid main() {\\n\\n    float alpha = opacity;\\n\\n    #if TILE_CLIP\\n    tileClip(vPosition, tileSize);\\n    #endif\\n\\n    #if DASHED_LINE\\n    float halfSegment = (dashSize + gapSize) / dashSize * 0.5;\\n    float segmentDist = mod(vTexcoord.x, dashSize + gapSize) / dashSize;\\n    float dist = 0.5 - distance(segmentDist, halfSegment);\\n    float width = fwidth(dist);\\n    alpha *= smoothstep(-width, width, dist);\\n    #else\\n    float dist = joinDist(vSegment, vTexcoord) - vLinewidth;\\n    float width = fwidth(dist);\\n    alpha *= (1.0 - smoothstep(-width, width, dist));\\n    #endif\\n\\n    #ifdef USE_COLOR\\n    gl_FragColor = vec4( diffuse * vColor, alpha );\\n    #else\\n    gl_FragColor = vec4( diffuse, alpha );\\n    #endif\\n    #include <fog_fragment>\\n\\n    #ifdef USE_FADING\\n    #include <fading_fragment>\\n    #endif\\n}\";\n/**\n * Material designed to render solid variable-width lines.\n */\nvar SolidLineMaterial = /** @class */ (function (_super) {\n    __extends(SolidLineMaterial, _super);\n    /**\n     * Constructs a new `SolidLineMaterial`.\n     *\n     * @param params `SolidLineMaterial` parameters.\n     */\n    function SolidLineMaterial(params) {\n        var _this = this;\n        Object.assign(THREE.ShaderChunk, LinesChunks_1.default);\n        MapMeshMaterials_1.FadingFeature.patchGlobalShaderChunks();\n        var defines = { DASHED_LINE: 0, TILE_CLIP: 0 };\n        var hasFog = params !== undefined && params.fog === true;\n        if (hasFog) {\n            defines.USE_FOG = \"\";\n        }\n        var shaderParams = {\n            name: \"SolidLineMaterial\",\n            vertexShader: vertexSource,\n            fragmentShader: fragmentSource,\n            uniforms: THREE.UniformsUtils.merge([\n                {\n                    diffuse: new THREE.Uniform(new THREE.Color(SolidLineMaterial.DEFAULT_COLOR)),\n                    lineWidth: new THREE.Uniform(SolidLineMaterial.DEFAULT_WIDTH),\n                    opacity: new THREE.Uniform(SolidLineMaterial.DEFAULT_OPACITY),\n                    tileSize: new THREE.Uniform(new THREE.Vector2()),\n                    fadeNear: new THREE.Uniform(MapMeshMaterials_1.FadingFeature.DEFAULT_FADE_NEAR),\n                    fadeFar: new THREE.Uniform(MapMeshMaterials_1.FadingFeature.DEFAULT_FADE_FAR)\n                },\n                // We need the fog uniforms available when we use `updateFog` as the internal\n                // recompilation cannot add or remove uniforms.\n                THREE.UniformsLib.fog\n            ]),\n            defines: defines,\n            transparent: true,\n            fog: true\n        };\n        _this = _super.call(this, shaderParams) || this;\n        _this.extensions.derivatives = true;\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.color !== undefined) {\n                _this.color.set(params.color);\n            }\n            if (params.lineWidth !== undefined) {\n                _this.lineWidth = params.lineWidth;\n            }\n            if (params.opacity !== undefined) {\n                _this.opacity = params.opacity;\n            }\n            if (params.depthTest !== undefined) {\n                _this.depthTest = params.depthTest;\n            }\n            if (params.fadeNear !== undefined) {\n                _this.fadeNear = params.fadeNear;\n            }\n            if (params.fadeFar !== undefined) {\n                _this.fadeFar = params.fadeFar;\n            }\n            _this.fog = hasFog;\n        }\n        return _this;\n    }\n    /**\n     * The method to call to recompile a material to get a new fog define.\n     *\n     * @param enableFog Whether we want to enable the fog.\n     */\n    SolidLineMaterial.prototype.updateFog = function (enableFog) {\n        if (!enableFog) {\n            delete this.defines.USE_FOG;\n        }\n        else {\n            this.defines.USE_FOG = \"\";\n        }\n    };\n    Object.defineProperty(SolidLineMaterial.prototype, \"color\", {\n        /**\n         * Line color.\n         */\n        get: function () {\n            return this.uniforms.diffuse.value;\n        },\n        set: function (value) {\n            this.uniforms.diffuse.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SolidLineMaterial.prototype, \"lineWidth\", {\n        /**\n         * Line width.\n         */\n        get: function () {\n            return this.uniforms.lineWidth.value;\n        },\n        set: function (value) {\n            this.uniforms.lineWidth.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SolidLineMaterial.prototype, \"fadeNear\", {\n        get: function () {\n            return this.uniforms.fadeNear.value;\n        },\n        set: function (value) {\n            this.uniforms.fadeNear.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SolidLineMaterial.prototype, \"fadeFar\", {\n        get: function () {\n            return this.uniforms.fadeFar.value;\n        },\n        set: function (value) {\n            var fadeFar = this.uniforms.fadeFar.value;\n            this.uniforms.fadeFar.value = value;\n            var doFade = fadeFar !== undefined && fadeFar > 0.0;\n            if (doFade) {\n                this.defines.USE_FADING = \"\";\n            }\n            else {\n                delete this.defines.USE_FADING;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SolidLineMaterial.DEFAULT_COLOR = 0xff0000;\n    SolidLineMaterial.DEFAULT_WIDTH = 1.0;\n    SolidLineMaterial.DEFAULT_OPACITY = 1.0;\n    return SolidLineMaterial;\n}(THREE.RawShaderMaterial));\nexports.SolidLineMaterial = SolidLineMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Class for the default console channel.\n */\nvar ConsoleChannel = /** @class */ (function () {\n    function ConsoleChannel() {\n    }\n    ConsoleChannel.prototype.error = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        // tslint:disable-next-line:no-console\n        console.error.apply(console, __spread([message], optionalParams));\n    };\n    ConsoleChannel.prototype.debug = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        // tslint:disable-next-line:no-console\n        console.debug.apply(console, __spread([message], optionalParams));\n    };\n    ConsoleChannel.prototype.info = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        // tslint:disable-next-line:no-console\n        console.info.apply(console, __spread([message], optionalParams));\n    };\n    ConsoleChannel.prototype.log = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        // tslint:disable-next-line:no-console\n        console.log.apply(console, __spread([message], optionalParams));\n    };\n    ConsoleChannel.prototype.trace = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        // tslint:disable-next-line:no-console\n        console.trace.apply(console, __spread([message], optionalParams));\n    };\n    ConsoleChannel.prototype.warn = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        // tslint:disable-next-line:no-console\n        console.warn.apply(console, __spread([message], optionalParams));\n    };\n    return ConsoleChannel;\n}());\nexports.ConsoleChannel = ConsoleChannel;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ILogger_1 = require(\"./ILogger\");\n/**\n * Logger class.\n */\nvar Logger = /** @class */ (function () {\n    function Logger(name, m_channel, options) {\n        this.name = name;\n        this.m_channel = m_channel;\n        this.enabled = true;\n        this.level = ILogger_1.LogLevel.Trace;\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n    Logger.prototype.error = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var _a;\n        if (this.enabled && this.level <= ILogger_1.LogLevel.Error) {\n            (_a = this.m_channel).error.apply(_a, __spread([this.prefix, message], optionalParams));\n        }\n    };\n    Logger.prototype.debug = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var _a;\n        if (this.enabled && this.level <= ILogger_1.LogLevel.Debug) {\n            (_a = this.m_channel).debug.apply(_a, __spread([this.prefix, message], optionalParams));\n        }\n    };\n    Logger.prototype.info = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var _a;\n        if (this.enabled && this.level <= ILogger_1.LogLevel.Info) {\n            (_a = this.m_channel).info.apply(_a, __spread([this.prefix, message], optionalParams));\n        }\n    };\n    Logger.prototype.log = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var _a;\n        if (this.enabled && this.level <= ILogger_1.LogLevel.Log) {\n            (_a = this.m_channel).log.apply(_a, __spread([this.prefix, message], optionalParams));\n        }\n    };\n    Logger.prototype.trace = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var _a;\n        if (this.enabled && this.level <= ILogger_1.LogLevel.Trace) {\n            (_a = this.m_channel).trace.apply(_a, __spread([this.prefix, message], optionalParams));\n        }\n    };\n    Logger.prototype.warn = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var _a;\n        if (this.enabled && this.level <= ILogger_1.LogLevel.Warn) {\n            (_a = this.m_channel).warn.apply(_a, __spread([this.prefix, message], optionalParams));\n        }\n    };\n    Logger.prototype.update = function (options) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    };\n    Object.defineProperty(Logger.prototype, \"prefix\", {\n        get: function () {\n            return this.name + \":\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Logger;\n}());\nexports.Logger = Logger;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ILogger_1 = require(\"./ILogger\");\nexports.WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n/**\n * The class for the worker channel.\n */\nvar WorkerChannel = /** @class */ (function () {\n    function WorkerChannel() {\n    }\n    WorkerChannel.prototype.error = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var workerMessage = {\n            message: __spread([message], optionalParams),\n            type: exports.WORKERCHANNEL_MSG_TYPE,\n            level: ILogger_1.LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    };\n    WorkerChannel.prototype.debug = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var workerMessage = {\n            message: __spread([message], optionalParams),\n            type: exports.WORKERCHANNEL_MSG_TYPE,\n            level: ILogger_1.LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    };\n    WorkerChannel.prototype.info = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var workerMessage = {\n            message: __spread([message], optionalParams),\n            type: exports.WORKERCHANNEL_MSG_TYPE,\n            level: ILogger_1.LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    };\n    WorkerChannel.prototype.log = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var workerMessage = {\n            message: __spread([message], optionalParams),\n            type: exports.WORKERCHANNEL_MSG_TYPE,\n            level: ILogger_1.LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    };\n    WorkerChannel.prototype.trace = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var workerMessage = {\n            message: __spread([message], optionalParams),\n            type: exports.WORKERCHANNEL_MSG_TYPE,\n            level: ILogger_1.LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    };\n    WorkerChannel.prototype.warn = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var workerMessage = {\n            message: __spread([message], optionalParams),\n            type: exports.WORKERCHANNEL_MSG_TYPE,\n            level: ILogger_1.LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    };\n    return WorkerChannel;\n}());\nexports.WorkerChannel = WorkerChannel;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_materials_1 = require(\"@here/harp-materials\");\nvar THREE = require(\"three\");\n/**\n * Define the stacking option. Enum values for theme file are in \"kebap-case\".\n */\nvar PoiStackMode;\n(function (PoiStackMode) {\n    /**\n     * Show in a stack.\n     */\n    PoiStackMode[\"ShowInStack\"] = \"show-in-stack\";\n    /**\n     * Do not show in a stack.\n     */\n    PoiStackMode[\"HideInStack\"] = \"hide-in-stack\";\n    /**\n     * Show category parent in the stack.\n     */\n    PoiStackMode[\"ShowParent\"] = \"show-parent\";\n})(PoiStackMode = exports.PoiStackMode || (exports.PoiStackMode = {}));\nfunction isCirclesTechnique(technique) {\n    return technique.name === \"circles\";\n}\nexports.isCirclesTechnique = isCirclesTechnique;\nfunction isSquaresTechnique(technique) {\n    return technique.name === \"squares\";\n}\nexports.isSquaresTechnique = isSquaresTechnique;\nfunction isPoiTechnique(technique) {\n    return technique.name === \"labeled-icon\";\n}\nexports.isPoiTechnique = isPoiTechnique;\nfunction isLineMarkerTechnique(technique) {\n    return technique.name === \"line-marker\";\n}\nexports.isLineMarkerTechnique = isLineMarkerTechnique;\nfunction isLineTechnique(technique) {\n    return technique.name === \"line\";\n}\nexports.isLineTechnique = isLineTechnique;\nfunction isSolidLineTechnique(technique) {\n    return technique.name === \"solid-line\";\n}\nexports.isSolidLineTechnique = isSolidLineTechnique;\nfunction isSegmentsTechnique(technique) {\n    return technique.name === \"segments\";\n}\nexports.isSegmentsTechnique = isSegmentsTechnique;\nfunction isExtrudedLineTechnique(technique) {\n    return technique.name === \"extruded-line\";\n}\nexports.isExtrudedLineTechnique = isExtrudedLineTechnique;\nfunction isFillTechnique(technique) {\n    return technique.name === \"fill\";\n}\nexports.isFillTechnique = isFillTechnique;\nfunction isExtrudedPolygonTechnique(technique) {\n    return technique.name === \"extruded-polygon\";\n}\nexports.isExtrudedPolygonTechnique = isExtrudedPolygonTechnique;\nfunction isStandardTechnique(technique) {\n    return technique.name === \"standard\";\n}\nexports.isStandardTechnique = isStandardTechnique;\nfunction isStandardTexturedTechnique(technique) {\n    return technique.name === \"standard-textured\";\n}\nexports.isStandardTexturedTechnique = isStandardTexturedTechnique;\nfunction isLandmarkTechnique(technique) {\n    return technique.name === \"landmark\";\n}\nexports.isLandmarkTechnique = isLandmarkTechnique;\nfunction isTextTechnique(technique) {\n    return technique.name === \"text\";\n}\nexports.isTextTechnique = isTextTechnique;\nfunction isShaderTechnique(technique) {\n    return technique.name === \"shader\";\n}\nexports.isShaderTechnique = isShaderTechnique;\nfunction getMaterialConstructor(technique) {\n    switch (technique.name) {\n        case \"extruded-line\":\n            return technique.shading === \"standard\"\n                ? harp_materials_1.MapMeshStandardMaterial\n                : harp_materials_1.MapMeshBasicMaterial;\n        case \"standard\":\n        case \"standard-textured\":\n        case \"landmark\":\n        case \"extruded-polygon\":\n            return harp_materials_1.MapMeshStandardMaterial;\n        case \"solid-line\":\n            return harp_materials_1.SolidLineMaterial;\n        case \"dashed-line\":\n            return harp_materials_1.DashedLineMaterial;\n        case \"fill\":\n            return harp_materials_1.MapMeshBasicMaterial;\n        case \"squares\":\n            return THREE.PointsMaterial;\n        case \"circles\":\n            return harp_materials_1.CirclePointsMaterial;\n        case \"line\":\n        case \"segments\":\n            return THREE.LineBasicMaterial;\n        case \"shader\":\n            return THREE.ShaderMaterial;\n        case \"text\":\n        case \"labeled-icon\":\n        case \"line-marker\":\n            return undefined;\n    }\n}\nexports.getMaterialConstructor = getMaterialConstructor;\n/**\n * Gets the default `three.js` object constructor associated with the given technique.\n *\n * @param technique The technique.\n */\nfunction getObjectConstructor(technique) {\n    switch (technique.name) {\n        case \"extruded-line\":\n        case \"standard\":\n        case \"standard-textured\":\n        case \"landmark\":\n        case \"extruded-polygon\":\n        case \"fill\":\n        case \"solid-line\":\n        case \"dashed-line\":\n            return THREE.Mesh;\n        case \"circles\":\n        case \"squares\":\n            return THREE.Points;\n        case \"line\":\n            return THREE.LineSegments;\n        case \"segments\":\n            return THREE.LineSegments;\n        case \"shader\": {\n            switch (technique.primitive) {\n                case \"line\":\n                    return THREE.Line;\n                case \"segments\":\n                    return THREE.LineSegments;\n                case \"point\":\n                    return THREE.Points;\n                case \"mesh\":\n                    return THREE.Mesh;\n                default:\n                    return undefined;\n            }\n        }\n        case \"text\":\n        case \"labeled-icon\":\n        case \"line-marker\":\n            return undefined;\n    }\n}\nexports.getObjectConstructor = getObjectConstructor;\nexports.BASE_TECHNIQUE_NON_MATERIAL_PROPS = [\n    \"name\",\n    \"id\",\n    \"renderOrder\",\n    \"renderOrderBiasProperty\",\n    \"renderOrderBiasGroup\",\n    \"renderOrderBiasRange\",\n    \"transient\"\n];\nfunction isCaseProperty(p) {\n    if (p instanceof Array && p.length > 0 && p[0].value !== undefined) {\n        return true;\n    }\n    return false;\n}\nfunction getPropertyValue(property, level) {\n    var e_1, _a;\n    if (property instanceof Array) {\n        try {\n            for (var property_1 = __values(property), property_1_1 = property_1.next(); !property_1_1.done; property_1_1 = property_1.next()) {\n                var range = property_1_1.value;\n                if (range.minLevel !== undefined && level < range.minLevel) {\n                    continue;\n                }\n                if (range.maxLevel !== undefined && level > range.maxLevel) {\n                    continue;\n                }\n                return range.value;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (property_1_1 && !property_1_1.done && (_a = property_1.return)) _a.call(property_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return undefined;\n    }\n    return property;\n}\nexports.getPropertyValue = getPropertyValue;\nfunction isTextureBuffer(object) {\n    return object && object.buffer && typeof object.format === \"string\";\n}\nexports.isTextureBuffer = isTextureBuffer;\n/**\n * Get the value of the specified attribute at the given zoom level. Handles [[CaseProperty]]\n * instances as well as future interpolated values.\n *\n * @param attribute Attribute of a technique.\n * @param level Display level the attribute should be rendered at.\n */\nfunction getAttributeValue(attribute, level) {\n    if (isCaseProperty(attribute)) {\n        return getPropertyValue(attribute, level);\n    }\n    return attribute;\n}\nexports.getAttributeValue = getAttributeValue;\nfunction toWrappingMode(mode) {\n    if (mode === \"clamp\") {\n        return THREE.ClampToEdgeWrapping;\n    }\n    else if (mode === \"repeat\") {\n        return THREE.RepeatWrapping;\n    }\n    else if (mode === \"mirror\") {\n        return THREE.MirroredRepeatWrapping;\n    }\n    throw new Error(\"invalid wrapping: \" + mode);\n}\nexports.toWrappingMode = toWrappingMode;\n/**\n * Apply generic technique parameters to material.\n *\n * Skips non-material [[Technique]] props:\n *  * [[BaseTechnique]] props,\n *  * `name` which is used as discriminator for technique types,\n *  * props starting with `_`\n *  * props found `skipExtraProps`\n *\n * `THREE.Color` properties are supported.\n *\n * @param technique technique from where params are copied\n * @param material target material\n * @param level optional, tile zoom level for zoom-level dependent props\n * @param skipExtraProps optional, skipped props\n */\nfunction applyTechniqueToMaterial(technique, material, level, skipExtraProps) {\n    Object.getOwnPropertyNames(technique).forEach(function (propertyName) {\n        if (propertyName.startsWith(\"_\") ||\n            exports.BASE_TECHNIQUE_NON_MATERIAL_PROPS.indexOf(propertyName) !== -1 ||\n            (skipExtraProps !== undefined && skipExtraProps.indexOf(propertyName) !== -1)) {\n            return;\n        }\n        var prop = propertyName;\n        var m = material;\n        var value = technique[prop];\n        if (typeof m[prop] === \"undefined\") {\n            return;\n        }\n        if (level !== undefined && isCaseProperty(value)) {\n            value = getPropertyValue(value, level);\n        }\n        if (m[prop] instanceof THREE.Color) {\n            m[prop].set(value);\n        }\n        else {\n            m[prop] = value;\n        }\n    });\n}\nexports.applyTechniqueToMaterial = applyTechniqueToMaterial;\n","const QUANTIZED_MESH_HEADER = new Map([\n  ['centerX', Float64Array.BYTES_PER_ELEMENT],\n  ['centerY', Float64Array.BYTES_PER_ELEMENT],\n  ['centerZ', Float64Array.BYTES_PER_ELEMENT],\n\n  ['minHeight', Float32Array.BYTES_PER_ELEMENT],\n  ['maxHeight', Float32Array.BYTES_PER_ELEMENT],\n\n  ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT],\n\n  ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]\n])\n\nfunction decodeZigZag (value) {\n  return (value >> 1) ^ (-(value & 1))\n}\n\nfunction decodeHeader (dataView) {\n  let position = 0\n  const header = {}\n\n  for (let [key, bytesCount] of QUANTIZED_MESH_HEADER) {\n    const getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32\n\n    header[key] = getter.call(dataView, position, true)\n    position += bytesCount\n  }\n\n  return { header, headerEndPosition: position }\n}\n\nfunction decodeVertexData (dataView, headerEndPosition) {\n  let position = headerEndPosition\n  const elementsPerVertex = 3\n  const vertexCount = dataView.getUint32(position, true)\n  const vertexData = new Uint16Array(vertexCount * elementsPerVertex)\n\n  position += Uint32Array.BYTES_PER_ELEMENT\n\n  const bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT\n  const elementArrayLength = vertexCount * bytesPerArrayElement\n  const uArrayStartPosition = position\n  const vArrayStartPosition = uArrayStartPosition + elementArrayLength\n  const heightArrayStartPosition = vArrayStartPosition + elementArrayLength\n\n  let u = 0\n  let v = 0\n  let height = 0\n\n  for (let i = 0; i < vertexCount; i++) {\n    u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true))\n    v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true))\n    height += decodeZigZag(dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true))\n\n    vertexData[i] = u\n    vertexData[i + vertexCount] = v\n    vertexData[i + vertexCount * 2] = height\n  }\n\n  position += elementArrayLength * 3\n\n  return { vertexData, vertexDataEndPosition: position }\n}\n\nfunction decodeIndex (buffer, position, indicesCount, bytesPerIndex, encoded = true) {\n  let indices\n\n  if (bytesPerIndex === 2) {\n    indices = new Uint16Array(buffer, position, indicesCount)\n  } else {\n    indices = new Uint32Array(buffer, position, indicesCount)\n  }\n\n  if (!encoded) {\n    return indices\n  }\n\n  let highest = 0\n\n  for (let i = 0; i < indices.length; ++i) {\n    let code = indices[i]\n\n    indices[i] = highest - code\n\n    if (code === 0) {\n      ++highest\n    }\n  }\n\n  return indices\n}\n\nfunction decodeTriangleIndices (dataView, vertexData, vertexDataEndPosition) {\n  let position = vertexDataEndPosition\n  const elementsPerVertex = 3\n  const vertexCount = vertexData.length / elementsPerVertex\n  const bytesPerIndex = vertexCount > 65536\n    ? Uint32Array.BYTES_PER_ELEMENT\n    : Uint16Array.BYTES_PER_ELEMENT\n\n  if (position % bytesPerIndex !== 0) {\n    position += bytesPerIndex - (position % bytesPerIndex)\n  }\n\n  const triangleCount = dataView.getUint32(position, true)\n  position += Uint32Array.BYTES_PER_ELEMENT\n\n  const triangleIndicesCount = triangleCount * 3\n  const triangleIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    triangleIndicesCount,\n    bytesPerIndex\n  )\n  position += triangleIndicesCount * bytesPerIndex\n\n  return {\n    triangleIndicesEndPosition: position,\n    triangleIndices\n  }\n}\n\nfunction decodeEdgeIndices (dataView, vertexData, triangleIndicesEndPosition) {\n  let position = triangleIndicesEndPosition\n  const elementsPerVertex = 3\n  const vertexCount = vertexData.length / elementsPerVertex\n  const bytesPerIndex = vertexCount > 65536\n    ? Uint32Array.BYTES_PER_ELEMENT\n    : Uint16Array.BYTES_PER_ELEMENT\n\n  const westVertexCount = dataView.getUint32(position, true)\n  position += Uint32Array.BYTES_PER_ELEMENT\n\n  const westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false)\n  position += westVertexCount * bytesPerIndex\n\n  const southVertexCount = dataView.getUint32(position, true)\n  position += Uint32Array.BYTES_PER_ELEMENT\n\n  const southIndices = decodeIndex(dataView.buffer, position, southVertexCount, bytesPerIndex, false)\n  position += southVertexCount * bytesPerIndex\n\n  const eastVertexCount = dataView.getUint32(position, true)\n  position += Uint32Array.BYTES_PER_ELEMENT\n\n  const eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false)\n  position += eastVertexCount * bytesPerIndex\n\n  const northVertexCount = dataView.getUint32(position, true)\n  position += Uint32Array.BYTES_PER_ELEMENT\n\n  const northIndices = decodeIndex(dataView.buffer, position, northVertexCount, bytesPerIndex, false)\n  position += northVertexCount * bytesPerIndex\n\n  return {\n    edgeIndicesEndPosition: position,\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices\n  }\n}\n\nfunction decodeVertexNormalsExtension (extensionDataView) {\n  return new Uint8Array(\n    extensionDataView.buffer, extensionDataView.byteOffset, extensionDataView.byteLength\n  )\n}\n\nfunction decodeWaterMaskExtension (extensionDataView) {\n  return extensionDataView.buffer.slice(\n    extensionDataView.byteOffset,\n    extensionDataView.byteOffset + extensionDataView.byteLength\n  )\n}\n\nfunction decodeExtensions (dataView, indicesEndPosition) {\n  const extensions = {}\n\n  if (dataView.byteLength <= indicesEndPosition) {\n    return { extensions, extensionsEndPosition: indicesEndPosition }\n  }\n\n  let position = indicesEndPosition\n\n  while (position < dataView.byteLength) {\n    const extensionId = dataView.getUint8(position, true)\n    position += Uint8Array.BYTES_PER_ELEMENT\n\n    const extensionLength = dataView.getUint32(position, true)\n    position += Uint32Array.BYTES_PER_ELEMENT\n\n    const extensionView = new DataView(dataView.buffer, position, extensionLength)\n\n    switch (extensionId) {\n      case 1: {\n        extensions.vertexNormals = decodeVertexNormalsExtension(extensionView)\n\n        break\n      }\n      case 2: {\n        extensions.waterMask = decodeWaterMaskExtension(extensionView)\n\n        break\n      }\n      default: {\n        console.warn(`Unknown extension with id ${extensionId}`)\n      }\n    }\n\n    position += extensionLength\n  }\n\n  return { extensions, extensionsEndPosition: position }\n}\n\nexport const DECODING_STEPS = {\n  header: 0,\n  vertices: 1,\n  triangleIndices: 2,\n  edgeIndices: 3,\n  extensions: 4\n}\n\nconst DEFAULT_OPTIONS = {\n  maxDecodingStep: DECODING_STEPS.extensions\n}\n\nexport default function decode (data, userOptions) {\n  const options = Object.assign({}, DEFAULT_OPTIONS, userOptions)\n  const view = new DataView(data)\n  const { header, headerEndPosition } = decodeHeader(view)\n\n  if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n    return { header }\n  }\n\n  const { vertexData, vertexDataEndPosition } = decodeVertexData(view, headerEndPosition)\n\n  if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n    return { header, vertexData }\n  }\n\n  const {\n    triangleIndices,\n    triangleIndicesEndPosition\n  } = decodeTriangleIndices(view, vertexData, vertexDataEndPosition)\n\n  if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n    return { header, vertexData, triangleIndices }\n  }\n\n  const {\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices,\n    edgeIndicesEndPosition\n  } = decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition)\n\n  if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n    return {\n      header,\n      vertexData,\n      triangleIndices,\n      westIndices,\n      northIndices,\n      eastIndices,\n      southIndices\n    }\n  }\n\n  const { extensions } = decodeExtensions(view, edgeIndicesEndPosition)\n\n  return {\n    header,\n    vertexData,\n    triangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices,\n    extensions\n  }\n}\n","/*\n * Copyright © 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport decode from '@here/quantized-mesh-decoder'\n\nexport const QUANTIZED_MESH_TILE_DECODER_ID = 'quantized-mesh-tile-decoder'\n\nexport class QuantizedMeshTileDecoder {\n  connect () {\n    return Promise.resolve()\n  }\n\n  /**\n   * Rearranges vertices components in more THREE.js-friendly\n   * way [x, y, z, x, y, z, ...] instead of\n   * [x, x, x,..., y, y, y,... z, z, z, ...].\n   *\n   * Also, scales x, y, z to be in [0, 1] range.\n   *\n   * @param {Uint16Array} vertexData\n   * @returns {Float32Array}\n   */\n  constructPositionArray (vertexData) {\n    const elementsPerVertex = 3\n    const vertexCount = vertexData.length / 3\n    const positionAttributeArray = new Float32Array(vertexData.length)\n\n    const vertexMaxPosition = 32767\n\n    for (let i = 0; i < vertexCount; i++) {\n      positionAttributeArray[i * elementsPerVertex] = vertexData[i] / vertexMaxPosition\n      positionAttributeArray[i * elementsPerVertex + 1] = vertexData[i + vertexCount] / vertexMaxPosition\n      positionAttributeArray[i * elementsPerVertex + 2] = vertexData[i + vertexCount * 2] / vertexMaxPosition\n    }\n\n    return positionAttributeArray\n  }\n\n  /**\n   * Drops z-coordinate of each vertex to make a UV-map.\n   *\n   * @param {Float32Array} positionArray\n   * @returns {Float32Array}\n   */\n  constructUvArray (positionArray) {\n    return positionArray.filter((item, index) => index % 3 < 2)\n  }\n\n  decodeTile (data) {\n    const decodedTile = decode(data)\n    const positionArray = this.constructPositionArray(decodedTile.vertexData)\n    const uvArray = this.constructUvArray(positionArray)\n    const vertexAttributes = []\n\n    vertexAttributes.push(\n      {\n        name: 'position',\n        type: 'float',\n        buffer: positionArray,\n        itemCount: 3,\n        metadata: decodedTile.header\n      },\n      {\n        name: 'uv',\n        type: 'float',\n        buffer: uvArray,\n        itemCount: 2\n      }\n    )\n\n    Object.keys(decodedTile.extensions).forEach(key => {\n      if (key === 'vertexNormals' && decodedTile.extensions[key].byteLength > 0) {\n        let array = new Uint8Array(decodedTile.extensions[key])\n        vertexAttributes.push({\n          name: 'octNormal',\n          type: 'float',\n          buffer: array,\n          itemCount: 2\n        })\n      }\n    })\n\n    const verityTile = {\n      techniques: [],\n      geometries: [\n        {\n          index: {\n            name: 'index',\n            type: 'uint16',\n            buffer: decodedTile.triangleIndices,\n            itemCount: 1\n          },\n          vertexAttributes\n        }\n      ]\n    }\n\n    return Promise.resolve(verityTile)\n  }\n}\n","/*\n * Copyright © 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-env worker */\nimportScripts('three/build/three.js')\n\n// Must be require(), not import, to be loaded after importScript()\nrequire('@here/harp-terrain-datasource/src/quantized-mesh/tile-decoder-worker')\n","/*\n * Copyright © 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst {WorkerServiceManager, TileDecoderService} = require('@here/harp-mapview-decoder/index-worker')\nconst {QUANTIZED_MESH_TILE_DECODER_ID} = require('./tile-decoder')\nconst {QuantizedMeshTileDecoder} = require('./tile-decoder')\n\nWorkerServiceManager.getInstance().register({\n  serviceType: QUANTIZED_MESH_TILE_DECODER_ID,\n  factory: (serviceId) => {\n    return TileDecoderService.start(serviceId, new QuantizedMeshTileDecoder())\n  }\n})\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lib/ThemedTileDecoder\"));\n__export(require(\"./lib/TileDecoderService\"));\n__export(require(\"./lib/WorkerService\"));\n__export(require(\"./lib/WorkerServiceManager\"));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_datasource_protocol_1 = require(\"@here/harp-datasource-protocol\");\n/**\n * `ThemedTileDecoder` implements an [[ITileDecoder]] which uses a [[Theme]] to apply styles to the\n * objects displayed in the map.\n *\n * By default, decoders are executed in web workers (using [[TileDecoderService]]) for performance\n * reasons.\n */\nvar ThemedTileDecoder = /** @class */ (function () {\n    function ThemedTileDecoder() {\n    }\n    ThemedTileDecoder.prototype.dispose = function () {\n        // implemented in subclasses\n    };\n    ThemedTileDecoder.prototype.decodeTile = function (data, tileKey, projection) {\n        if (this.m_styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"No style is defined\"));\n        }\n        return this.decodeThemedTile(data, tileKey, this.m_styleSetEvaluator, projection);\n    };\n    // tslint:disable:no-unused-variable\n    ThemedTileDecoder.prototype.getTileInfo = function (data, tileKey, projection) {\n        return Promise.resolve(undefined);\n    };\n    // tslint:disable:no-unused-variable\n    ThemedTileDecoder.prototype.configure = function (styleSet, languages, options) {\n        if (styleSet !== undefined) {\n            this.m_styleSetEvaluator = new harp_datasource_protocol_1.StyleSetEvaluator(styleSet);\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n    };\n    return ThemedTileDecoder;\n}());\nexports.ThemedTileDecoder = ThemedTileDecoder;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar harp_geoutils_1 = require(\"@here/harp-geoutils\");\nvar harp_materials_1 = require(\"@here/harp-materials\");\nvar Techniques_1 = require(\"./Techniques\");\nfunction getArrayConstructor(attr) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n    }\n}\nexports.getArrayConstructor = getArrayConstructor;\nvar GeometryType;\n(function (GeometryType) {\n    GeometryType[GeometryType[\"Unspecified\"] = 0] = \"Unspecified\";\n    GeometryType[GeometryType[\"Point\"] = 1] = \"Point\";\n    GeometryType[GeometryType[\"Line\"] = 2] = \"Line\";\n    GeometryType[GeometryType[\"SolidLine\"] = 3] = \"SolidLine\";\n    GeometryType[GeometryType[\"Text\"] = 4] = \"Text\";\n    GeometryType[GeometryType[\"TextPath\"] = 5] = \"TextPath\";\n    GeometryType[GeometryType[\"ExtrudedLine\"] = 6] = \"ExtrudedLine\";\n    GeometryType[GeometryType[\"Polygon\"] = 7] = \"Polygon\";\n    GeometryType[GeometryType[\"ExtrudedPolygon\"] = 8] = \"ExtrudedPolygon\";\n    GeometryType[GeometryType[\"Object3D\"] = 9] = \"Object3D\";\n    GeometryType[GeometryType[\"Other\"] = 1000] = \"Other\";\n})(GeometryType = exports.GeometryType || (exports.GeometryType = {}));\n/**\n * Create a material, depending on the rendering technique provided in the options.\n *\n * @param options The material options the subsequent functions need.\n *\n * @returns new material instance that matches `technique.name`\n */\nfunction createMaterial(options) {\n    var Constructor = Techniques_1.getMaterialConstructor(options.technique);\n    var settings = {};\n    if (Constructor === undefined) {\n        return undefined;\n    }\n    if (Constructor.prototype instanceof THREE.RawShaderMaterial &&\n        Constructor !== harp_materials_1.HighPrecisionLineMaterial) {\n        settings.fog = options.fog;\n    }\n    var material = new Constructor(settings);\n    if (options.technique.id !== undefined) {\n        material.name = options.technique.id;\n    }\n    if (options.technique.name === \"extruded-polygon\") {\n        material.flatShading = true;\n    }\n    material.depthTest =\n        options.technique.name === \"extruded-polygon\" && options.technique.depthTest !== false;\n    if (options.technique.name === \"shader\") {\n        // special case for ShaderTechnique.\n        // The shader technique takes the argument from its `params' member.\n        var params_1 = options.technique.params;\n        Object.getOwnPropertyNames(params_1).forEach(function (property) {\n            var prop = property;\n            if (prop === \"name\") {\n                // skip reserved property names\n                return;\n            }\n            var m = material;\n            if (m[prop] instanceof THREE.Color) {\n                m[prop].set(params_1[prop]);\n            }\n            else {\n                m[prop] = params_1[prop];\n            }\n        });\n    }\n    else {\n        Techniques_1.applyTechniqueToMaterial(options.technique, material, options.level, options.skipExtraProps);\n    }\n    return material;\n}\nexports.createMaterial = createMaterial;\nfunction getProjection(projectionName) {\n    switch (projectionName) {\n        case \"mercator\":\n            return harp_geoutils_1.mercatorProjection;\n        case \"webMercator\":\n            return harp_geoutils_1.webMercatorProjection;\n        default:\n            throw new Error(\"Unknown projection \" + projectionName);\n    } // switch\n}\nexports.getProjection = getProjection;\nfunction getProjectionName(projection) {\n    if (projection === harp_geoutils_1.mercatorProjection) {\n        return \"mercator\";\n    }\n    else if (projection === harp_geoutils_1.webMercatorProjection) {\n        return \"webMercator\";\n    }\n    throw new Error(\"Unknown projection\");\n}\nexports.getProjectionName = getProjectionName;\nfunction getBufferAttribute(attribute) {\n    switch (attribute.type) {\n        case \"float\":\n            return new THREE.BufferAttribute(new Float32Array(attribute.buffer), attribute.itemCount);\n        case \"uint16\":\n            return new THREE.BufferAttribute(new Uint16Array(attribute.buffer), attribute.itemCount);\n        case \"uint32\":\n            return new THREE.BufferAttribute(new Uint32Array(attribute.buffer), attribute.itemCount);\n        default:\n            throw new Error(\"unsupported buffer of type \" + attribute.type);\n    } // switch\n}\nexports.getBufferAttribute = getBufferAttribute;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Type guard to assert that `object` conforms to [[GeoCoordinatesLike]] data interface.\n */\nfunction isGeoCoordinatesLike(object) {\n    return (object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\"));\n}\nexports.isGeoCoordinatesLike = isGeoCoordinatesLike;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GeoBox_1 = require(\"../coordinates/GeoBox\");\nvar GeoCoordinates_1 = require(\"../coordinates/GeoCoordinates\");\nvar MathUtils_1 = require(\"../math/MathUtils\");\nvar DEG2RAD = Math.PI / 180;\nvar IdentityProjection = /** @class */ (function () {\n    function IdentityProjection() {\n    }\n    IdentityProjection.prototype.getScaleFactor = function (_worldPoint) {\n        return 1;\n    };\n    IdentityProjection.prototype.worldExtent = function (minAltitude, maxAltitude, result) {\n        if (!result) {\n            result = MathUtils_1.MathUtils.newEmptyBox3();\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    };\n    IdentityProjection.prototype.projectPoint = function (geoPoint, result) {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 };\n        }\n        result.x = geoPoint.longitude * DEG2RAD;\n        result.y = geoPoint.latitude * DEG2RAD;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    };\n    IdentityProjection.prototype.unprojectPoint = function (worldPoint) {\n        var geoPoint = GeoCoordinates_1.GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    };\n    IdentityProjection.prototype.projectBox = function (geoBox, result) {\n        if (!result) {\n            result = MathUtils_1.MathUtils.newEmptyBox3();\n        }\n        this.projectPoint(new GeoCoordinates_1.GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude), result.min);\n        this.projectPoint(new GeoCoordinates_1.GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude), result.max);\n        return result;\n    };\n    IdentityProjection.prototype.unprojectBox = function (worldBox) {\n        var minGeo = this.unprojectPoint(worldBox.min);\n        var maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox_1.GeoBox.fromCoordinates(minGeo, maxGeo);\n    };\n    return IdentityProjection;\n}());\n/**\n * Identity [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexports.identityProjection = new IdentityProjection();\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TileKey_1 = require(\"./TileKey\");\n/**\n * A class used to represent a quadtree.\n */\nvar QuadTree = /** @class */ (function () {\n    /**\n     * Constructs a new `QuadTree` for the given [[TilingScheme]].\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme The TilingScheme used by this `QuadTree`.\n     */\n    function QuadTree(tilingScheme) {\n        this.tilingScheme = tilingScheme;\n    }\n    /**\n     * Visits this `QuadTree` and invoke the given accept method with the current [[TileKey]] and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    QuadTree.prototype.visit = function (accept) {\n        this.visitTileKey(TileKey_1.TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    };\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey The root of the subtree that should be visited.\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    QuadTree.prototype.visitTileKey = function (tileKey, accept) {\n        var e_1, _a;\n        var geoBox = this.tilingScheme.getGeoBox(tileKey);\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n        try {\n            for (var _b = __values(this.tilingScheme.getSubTileKeys(tileKey)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var subTileKey = _c.value;\n                this.visitTileKey(subTileKey, accept);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return QuadTree;\n}());\nexports.QuadTree = QuadTree;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EquirectangularProjection_1 = require(\"../projection/EquirectangularProjection\");\nvar HalfQuadTreeSubdivisionScheme_1 = require(\"./HalfQuadTreeSubdivisionScheme\");\nvar TilingScheme_1 = require(\"./TilingScheme\");\n/**\n * [[TilingScheme]] used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexports.hereTilingScheme = new TilingScheme_1.TilingScheme(HalfQuadTreeSubdivisionScheme_1.halfQuadTreeSubdivisionScheme, EquirectangularProjection_1.equirectangularProjection);\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebMercatorProjection_1 = require(\"../projection/WebMercatorProjection\");\nvar QuadTreeSubdivisionScheme_1 = require(\"./QuadTreeSubdivisionScheme\");\nvar TilingScheme_1 = require(\"./TilingScheme\");\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and web Mercator projection.\n */\nexports.webMercatorTilingScheme = new TilingScheme_1.TilingScheme(QuadTreeSubdivisionScheme_1.quadTreeSubdivisionScheme, WebMercatorProjection_1.webMercatorProjection);\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MercatorProjection_1 = require(\"../projection/MercatorProjection\");\nvar QuadTreeSubdivisionScheme_1 = require(\"./QuadTreeSubdivisionScheme\");\nvar TilingScheme_1 = require(\"./TilingScheme\");\n/**\n * The [[TilingScheme]] used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexports.mercatorTilingScheme = new TilingScheme_1.TilingScheme(QuadTreeSubdivisionScheme_1.quadTreeSubdivisionScheme, MercatorProjection_1.mercatorProjection);\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isVector3Like(v) {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\nexports.isVector3Like = isVector3Like;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar SolidLineMaterial_1 = require(\"./SolidLineMaterial\");\n/**\n * Material designed to render dashed variable-width lines.\n */\nvar DashedLineMaterial = /** @class */ (function (_super) {\n    __extends(DashedLineMaterial, _super);\n    /**\n     * Constructs a new `DashedLineMaterial`.\n     *\n     * @param params `DashedLineMaterial` parameters.\n     */\n    function DashedLineMaterial(params) {\n        var _this = this;\n        var shaderParams = {};\n        if (params !== undefined && params.color !== undefined) {\n            shaderParams.color = params.color;\n        }\n        if (params !== undefined && params.lineWidth !== undefined) {\n            shaderParams.lineWidth = params.lineWidth;\n        }\n        if (params !== undefined && params.opacity !== undefined) {\n            shaderParams.opacity = params.opacity;\n        }\n        if (params !== undefined && params.fog !== undefined) {\n            shaderParams.fog = params.fog;\n        }\n        _this = _super.call(this, shaderParams) || this;\n        _this.name = \"DashedLineMaterial\";\n        Object.assign(_this.uniforms, {\n            dashSize: new THREE.Uniform(DashedLineMaterial.DEFAULT_DASH_SIZE),\n            gapSize: new THREE.Uniform(DashedLineMaterial.DEFAULT_GAP_SIZE)\n        });\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.dashSize !== undefined) {\n                _this.dashSize = params.dashSize;\n            }\n            if (params.gapSize !== undefined) {\n                _this.gapSize = params.gapSize;\n            }\n            if (params.fog !== undefined) {\n                _this.fog = params.fog !== null;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(DashedLineMaterial.prototype, \"dashSize\", {\n        /**\n         * Size of the dashed segments.\n         */\n        get: function () {\n            return this.uniforms.dashSize.value;\n        },\n        set: function (value) {\n            this.uniforms.dashSize.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DashedLineMaterial.prototype, \"gapSize\", {\n        /**\n         * Size of the gaps between dashed segments.\n         */\n        get: function () {\n            return this.uniforms.gapSize.value;\n        },\n        set: function (value) {\n            this.uniforms.gapSize.value = value;\n            this.updateDashedFeature();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DashedLineMaterial.prototype.updateDashedFeature = function () {\n        this.defines.DASHED_LINE = this.gapSize > 0.0 ? 1 : 0;\n    };\n    DashedLineMaterial.DEFAULT_DASH_SIZE = 1.0;\n    DashedLineMaterial.DEFAULT_GAP_SIZE = 1.0;\n    return DashedLineMaterial;\n}(SolidLineMaterial_1.SolidLineMaterial));\nexports.DashedLineMaterial = DashedLineMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The `PriorityListGroup` contains a list of [[PriorityListElement]]s that all have the same\n * (integer) priority.\n */\nvar PriorityListGroup = /** @class */ (function () {\n    function PriorityListGroup(priority, elements) {\n        if (elements === void 0) { elements = new Array(); }\n        this.priority = priority;\n        this.elements = elements;\n    }\n    return PriorityListGroup;\n}());\nexports.PriorityListGroup = PriorityListGroup;\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nvar GroupedPriorityList = /** @class */ (function () {\n    function GroupedPriorityList() {\n        this.groups = new Map();\n    }\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element Element to be added.\n     */\n    GroupedPriorityList.prototype.add = function (element) {\n        this.getGroup(element.priority).elements.push(element);\n    };\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    GroupedPriorityList.prototype.remove = function (element) {\n        var group = this.getGroup(element.priority);\n        if (group !== undefined) {\n            var foundIndex = group.elements.indexOf(element);\n            if (foundIndex >= 0) {\n                group.elements.splice(foundIndex, 1);\n                if (group.elements.length === 0) {\n                    var normalizedPriority = Math.floor(element.priority);\n                    this.groups.delete(normalizedPriority);\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Remove all internal [[PriorityListGroup]]s.\n     */\n    GroupedPriorityList.prototype.clear = function () {\n        this.groups.clear();\n    };\n    /**\n     * Merge another [[GroupedPriorityList]] into this one.\n     *\n     * @param other Other group to merge.\n     */\n    GroupedPriorityList.prototype.merge = function (other) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(other.groups), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var otherGroup = _c.value;\n                var group = this.findGroup(otherGroup[1].priority);\n                if (group === undefined) {\n                    this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1]);\n                    continue;\n                }\n                group.elements = group.elements.concat(otherGroup[1].elements);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Object.defineProperty(GroupedPriorityList.prototype, \"sortedGroups\", {\n        /**\n         * Return a sorted list of [[PriorityListGroup]]s.\n         */\n        get: function () {\n            var e_2, _a;\n            var groups = [];\n            try {\n                for (var _b = __values(this.groups), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var priorityList = _c.value;\n                    groups.push(priorityList[1]);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            groups.sort(function (a, b) {\n                return b.priority - a.priority;\n            });\n            return groups;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    GroupedPriorityList.prototype.findGroup = function (priority) {\n        var normalizedPriority = Math.floor(priority);\n        var group = this.groups.get(normalizedPriority);\n        return group;\n    };\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    GroupedPriorityList.prototype.getGroup = function (priority) {\n        var group = this.findGroup(priority);\n        if (group === undefined) {\n            var normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup(normalizedPriority);\n            this.groups.set(normalizedPriority, group);\n        }\n        return group;\n    };\n    return GroupedPriorityList;\n}());\nexports.GroupedPriorityList = GroupedPriorityList;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./ConsoleChannel\"));\n__export(require(\"./ILogger\"));\n__export(require(\"./Logger\"));\n__export(require(\"./LoggerManager\"));\n__export(require(\"./MultiChannel\"));\n__export(require(\"./WorkerChannel\"));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LoggerManagerImpl_1 = require(\"./LoggerManagerImpl\");\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nvar LoggerManager = /** @class */ (function () {\n    function LoggerManager() {\n    }\n    Object.defineProperty(LoggerManager, \"instance\", {\n        get: function () {\n            return this.m_instance || (this.m_instance = new LoggerManagerImpl_1.LoggerManagerImpl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LoggerManager;\n}());\nexports.LoggerManager = LoggerManager;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConsoleChannel_1 = require(\"./ConsoleChannel\");\nvar Logger_1 = require(\"./Logger\");\nvar WorkerChannel_1 = require(\"./WorkerChannel\");\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\nvar LoggerManagerImpl = /** @class */ (function () {\n    function LoggerManagerImpl() {\n        this.m_loggers = [];\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel_1.ConsoleChannel()\n                : new WorkerChannel_1.WorkerChannel();\n    }\n    LoggerManagerImpl.prototype.getLoggerNames = function () {\n        return this.m_loggers.map(function (logger) { return logger.name; });\n    };\n    LoggerManagerImpl.prototype.getLogger = function (name) {\n        return this.m_loggers.find(function (logger) { return logger.name === name; });\n    };\n    LoggerManagerImpl.prototype.create = function (loggerName, options) {\n        var logger = new Logger_1.Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    };\n    LoggerManagerImpl.prototype.dispose = function (logger) {\n        var found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(\"Cannot unregister \\\"\" + logger + \"\\\" : no such logger registered.\");\n        }\n        this.m_loggers.splice(found, 1);\n    };\n    LoggerManagerImpl.prototype.updateAll = function (options) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this.m_loggers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var logger = _c.value;\n                logger.update(options);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    LoggerManagerImpl.prototype.update = function (loggerName, config) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this.m_loggers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var logger = _c.value;\n                if (logger.name === loggerName) {\n                    logger.update(config);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    LoggerManagerImpl.prototype.enableAll = function (enabled) {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this.m_loggers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var logger = _c.value;\n                logger.enabled = enabled;\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    LoggerManagerImpl.prototype.enable = function (loggerName, value) {\n        this.update(loggerName, { enabled: value });\n    };\n    LoggerManagerImpl.prototype.setLogLevelForAll = function (level) {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this.m_loggers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var logger = _c.value;\n                logger.level = level;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    LoggerManagerImpl.prototype.setLogLevel = function (loggerName, level) {\n        this.update(loggerName, { level: level });\n    };\n    LoggerManagerImpl.prototype.setChannel = function (channel) {\n        this.channel = channel;\n    };\n    return LoggerManagerImpl;\n}());\nexports.LoggerManagerImpl = LoggerManagerImpl;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Class allowing mixing several channels.\n */\nvar MultiChannel = /** @class */ (function () {\n    function MultiChannel() {\n        var channels = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            channels[_i] = arguments[_i];\n        }\n        this.channels = [];\n        this.channels = channels;\n    }\n    MultiChannel.prototype.error = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var e_1, _a;\n        try {\n            for (var _b = __values(this.channels), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var channel = _c.value;\n                channel.error.apply(channel, __spread([message], optionalParams));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    MultiChannel.prototype.debug = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var e_2, _a;\n        try {\n            for (var _b = __values(this.channels), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var channel = _c.value;\n                channel.debug.apply(channel, __spread([message], optionalParams));\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    MultiChannel.prototype.info = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var e_3, _a;\n        try {\n            for (var _b = __values(this.channels), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var channel = _c.value;\n                channel.info.apply(channel, __spread([message], optionalParams));\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    MultiChannel.prototype.log = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var e_4, _a;\n        try {\n            for (var _b = __values(this.channels), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var channel = _c.value;\n                channel.log.apply(channel, __spread([message], optionalParams));\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    MultiChannel.prototype.trace = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var e_5, _a;\n        try {\n            for (var _b = __values(this.channels), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var channel = _c.value;\n                channel.trace.apply(channel, __spread([message], optionalParams));\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n    };\n    MultiChannel.prototype.warn = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var e_6, _a;\n        try {\n            for (var _b = __values(this.channels), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var channel = _c.value;\n                channel.warn.apply(channel, __spread([message], optionalParams));\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    return MultiChannel;\n}());\nexports.MultiChannel = MultiChannel;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Math2D;\n(function (Math2D) {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    var Box = /** @class */ (function () {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        function Box(x, y, w, h) {\n            if (x === void 0) { x = 0; }\n            if (y === void 0) { y = 0; }\n            if (w === void 0) { w = 0; }\n            if (h === void 0) { h = 0; }\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        Box.prototype.set = function (x, y, w, h) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        };\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x X coordinate of point.\n         * @param y Y coordinate of point.\n         */\n        Box.prototype.contains = function (x, y) {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        };\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other Box 2 to test for intersection.\n         */\n        Box.prototype.intersects = function (other) {\n            return (this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y);\n        };\n        return Box;\n    }());\n    Math2D.Box = Box;\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax Point a.x\n     * @param ay Point a.y\n     * @param bx Point b.x\n     * @param by Point b.y\n     * @returns Squared distance between the two points\n     */\n    function distSquared(ax, ay, bx, by) {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n    Math2D.distSquared = distSquared;\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line An array of even length, which form a line via [x,y,x,y,...] pairs.\n     */\n    function computeSquaredLineLength(line) {\n        var squaredLineLength = 0;\n        var length = line.length - 3;\n        for (var i = 0; i < length; i += 2) {\n            var xDiff = line[i + 2] - line[i];\n            var yDiff = line[i + 3] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n    Math2D.computeSquaredLineLength = computeSquaredLineLength;\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px Test point X\n     * @param py Test point y\n     * @param l0x Line segment start X\n     * @param l0y Line segment start Y\n     * @param l1x Line segment end X\n     * @param l1y Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    function distToSegmentSquared(px, py, l0x, l0y, l1x, l1y) {\n        var lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        var t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n    Math2D.distToSegmentSquared = distToSegmentSquared;\n})(Math2D = exports.Math2D || (exports.Math2D = {}));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MathUtils;\n(function (MathUtils) {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     * @returns Clamped value.\n     */\n    function clamp(value, min, max) {\n        return value < min ? min : value > max ? max : value;\n    }\n    MathUtils.clamp = clamp;\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    function smoothStep(edge0, edge1, x) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n    MathUtils.smoothStep = smoothStep;\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    function smootherStep(edge0, edge1, x) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n    MathUtils.smootherStep = smootherStep;\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val The incoming value to be converted.\n     * @param inMin Lower bound of the value's current range.\n     * @param inMax Upper bound of the value's current range.\n     * @param outMin Lower bound of the value's target range.\n     * @param outMax Upper bound of the value's target range.\n     */\n    function lerp(val, inMin, inMax, outMin, outMax) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n    MathUtils.lerp = lerp;\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    function min2(a, b) {\n        var result;\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n        return result;\n    }\n    MathUtils.min2 = min2;\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    function max2(a, b) {\n        var result;\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n        return result;\n    }\n    MathUtils.max2 = max2;\n    /**\n     * Checks if a the value of a given number is ouside of an upper and lower bound. The bounds\n     * may be undefined, in which case their value is ignored.\n     *\n     * @returns `true` if value is outside of the bounds.\n     *\n     * @param value Value to check.\n     * @param lowerBound Lower bound.\n     * @param upperBound Upper bound.\n     */\n    function isClamped(value, lowerBound, upperBound) {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return true;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return true;\n        }\n        return false;\n    }\n    MathUtils.isClamped = isClamped;\n})(MathUtils = exports.MathUtils || (exports.MathUtils = {}));\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods and properties into.\n * @param baseCtors Class to take all methods and properties from.\n */\nfunction applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach(function (baseCtor) {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(function (name) {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\nexports.applyMixins = applyMixins;\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods into.\n * @param baseCtors Class to take all methods from.\n */\nfunction applyMixinsWithoutProperties(derivedCtor, baseCtors) {\n    baseCtors.forEach(function (baseCtor) {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(function (name) {\n            var descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (descriptor !== undefined && descriptor.get === undefined) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\nexports.applyMixinsWithoutProperties = applyMixinsWithoutProperties;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// cache value, because access to process.env.NODE_ENV is SLOW!\nvar isProduction = process.env.NODE_ENV === \"production\";\n//TODO: Make assertHandler configurable\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition Condition to match, if false, throws an Error(message)\n * @param message Optional message, defaults to \"ASSERTION failed\"\n */\nfunction assert(condition, message) {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\nexports.assert = assert;\nfunction assertExists(element, message) {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\");\n        }\n    }\n    return element;\n}\nexports.assertExists = assertExists;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:max-line-length */\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n/* tslint:ensable:max-line-length */\nvar PerformanceTimer = /** @class */ (function () {\n    function PerformanceTimer() {\n    }\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    PerformanceTimer.now = function () {\n        return PerformanceTimer.nowFunc();\n    };\n    PerformanceTimer.getNowFunc = function () {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return function () { return performance.now(); };\n        }\n        // fall back to Date.getTime()\n        return function () {\n            return new Date().getTime();\n        };\n    };\n    // tslint:disable-next-line:no-unused-variable\n    PerformanceTimer.instance = new PerformanceTimer();\n    PerformanceTimer.nowFunc = PerformanceTimer.getNowFunc();\n    return PerformanceTimer;\n}());\nexports.PerformanceTimer = PerformanceTimer;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getOptionValue() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    var e_1, _a;\n    try {\n        for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n            var candidate = values_1_1.value;\n            if (candidate !== undefined && candidate !== null) {\n                return candidate;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return undefined;\n}\nexports.getOptionValue = getOptionValue;\n/**\n * Merge options into existing parameters object.\n *\n * Convenience helper with _similar_ semantics as:\n *\n *     const finalParams1 = { ...defaults, ... options };\n *     const finalParams2 = Object.assign({}, defaults, options);\n *\n * This function doesn't copy _extra_ properties of `options` that doesn't exist in `defaults`.\n * `defaults` is used as _parameters_ template.\n *\n * This doc uses following notion of `option` and `parameter` terms:\n * * `parameter` is a variable, or 'almost constant' of procedure/function/algorith/object\n *    * `parameter` usually have sensible and usually used default\n *    * `parameter` is always defined (no `undefined`, `null` or `?` in type)\n *    * `parameter` can be overriden by specyfying `option` with same name\n * * `option` means value that may be passed optionally, overrides `parameter` value with same name\n *\n * Usage:\n *\n *     interface FooParams {\n *         useTextures: boolean;\n *         opacity: number;\n *     }\n *\n *     const FOO_DEFAULTS: FooParams = {\n *         useTextures: true,\n *         opacity: 0.8\n *     };\n *\n *     type FooOptions = Partial<FooParams>;\n *\n *     function doSomething(options: FooOptions) {\n *         const params = mergeWithOptions(FOO_DEFAULTS, options);\n *             // typeof params === FooParams\n *             // params.opacity = 0.5\n *             // params.useTextures = true\n *             // params.someOtherOptionFromOtherApi is not defined\n *     }\n *     const opt = {opacity: 0.5, someOtherOptionFromOtherApi: 'aaa'};\n *     doSomething(opt);\n *\n * Rationale:\n *   * both `Object.assign` and spread operator copy extra options\n *   * `Object.assign` & `spread operator` may copy `undefined` and `null`s if they really exist\n *     in options object\n *\n * @param parameters parmeters template object holding all expected parameters\n * @param options options object\n * @returns new object with `parameters` overriden by values from `options`\n */\nfunction mergeWithOptions(parameters, options) {\n    // NOTE: `as object` needed due to TypeScript bug:\n    //       https://github.com/Microsoft/TypeScript/issues/14409\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    var result = __assign({}, parameters);\n    if (options === undefined || options === null) {\n        return result;\n    }\n    for (var prop in parameters) {\n        if (parameters.hasOwnProperty(prop)) {\n            var optionValue = options[prop];\n            if (optionValue !== undefined && optionValue !== null) {\n                result[prop] = optionValue;\n            }\n        }\n    }\n    return result;\n}\nexports.mergeWithOptions = mergeWithOptions;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Resolves URL using default URL resolver.\n *\n * By default URL resolver is just identity function, it can be changed using\n * [[setDefaultUrlResolver].\n */\nfunction defaultUrlResolver(url) {\n    if (customDefaultUrlResolver !== undefined) {\n        return customDefaultUrlResolver(url);\n    }\n    else {\n        return url;\n    }\n}\nexports.defaultUrlResolver = defaultUrlResolver;\n/**\n * Change resolver used by [[defaultUrlResolver]].\n *\n * `undefined` resets default resolver to identity function.\n *\n * @param resolver\n */\nfunction setDefaultUrlResolver(resolver) {\n    customDefaultUrlResolver = resolver;\n}\nexports.setDefaultUrlResolver = setDefaultUrlResolver;\nvar customDefaultUrlResolver;\n/**\n * Compose URL resolvers.\n *\n * Creates new `UrlResolver` that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           (childUrl: string) => resolveReferenceUrl(themeUrl, childUrl),\n *           defaultUrlResolver\n *     );\n */\nfunction composeUrlResolvers() {\n    var resolvers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        resolvers[_i] = arguments[_i];\n    }\n    return function (originalUrl) {\n        return resolvers.reduce(function (url, resolver) {\n            if (resolver !== undefined) {\n                return resolver(url);\n            }\n            else {\n                return url;\n            }\n        }, originalUrl);\n    };\n}\nexports.composeUrlResolvers = composeUrlResolvers;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Resolve URL of referenced object.\n *\n * Resolves `childUrl` as it would be loaded from location specified by `parentUrl`.\n *\n * If `childUrl` is absolute, then it is returned unchanged.\n * If `childUrl` is origin-absolute path, then only origin path is taken from `parentUrl`.\n *\n * See [[baseUrl]] for reference how base URL of `parentUrl` is determined.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUrl URL of parent resource\n * @param childUrl URL of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nfunction resolveReferenceUrl(parentUrl, childUrl) {\n    if (absoluteUrlWithOriginRe.test(childUrl)) {\n        return childUrl;\n    }\n    else if (childUrl.startsWith(\"/\")) {\n        var origin_1 = getUrlOrigin(parentUrl);\n        return origin_1 + childUrl;\n    }\n    else {\n        if (childUrl.startsWith(\"./\")) {\n            childUrl = childUrl.substr(2);\n        }\n        var parentBaseUrl = baseUrl(parentUrl);\n        return parentBaseUrl + childUrl;\n    }\n}\nexports.resolveReferenceUrl = resolveReferenceUrl;\nvar absoluteUrlWithOriginRe = new RegExp(\"^(?:[a-z]+:)?//\", \"i\");\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nfunction baseUrl(url) {\n    var idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    }\n    else {\n        return url.substring(0, idx + 1);\n    }\n}\nexports.baseUrl = baseUrl;\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url input URL\n * @return origin of given URL\n */\nfunction getUrlOrigin(url) {\n    var parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    }\n    else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    }\n    else if (parsed.host) {\n        return \"//\" + parsed.host;\n    }\n    else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    }\n    else {\n        return \"\";\n    }\n}\nexports.getUrlOrigin = getUrlOrigin;\n/**\n * Parse `host` and `protocol` part from URL.\n */\nfunction getUrlHostAndProtocol(url) {\n    var urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n    var match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(\"getUrlHostAndProtocol: unable to parse URL '\" + url + \"'\");\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\nexports.getUrlHostAndProtocol = getUrlHostAndProtocol;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The shader chunks have their lines \"#ifdef USE_FADING\" commented out, because currently the\n * mesh materials use individually created shader strings based on the materials settings.\n * @see [[FadingMeshBasicMaterial]]\n **/\nexports.default = {\n    fading_pars_vertex: \"\\nvarying float fadingDepth;\\n\",\n    fading_vertex: \"\\nfadingDepth = -mvPosition.z;\\n\",\n    fading_pars_fragment: \"\\nvarying float fadingDepth;\\nuniform float fadeNear;\\nuniform float fadeFar;\\n\",\n    fading_fragment: \"\\n\\n// lerp with \\\"hard\\\" edges\\n//float fadingFactor = 1.0 - clamp((fadingDepth - fadeNear) / (fadeFar - fadeNear), 0.0, 1.0);\\n\\n// smooth transitions\\nfloat fadingFactor = smoothstep( fadeNear, fadeFar, fadingDepth );\\n\\ngl_FragColor.a *= 1.0 - fadingFactor;\\n\\n// debugging color:\\n// gl_FragColor = vec4(1., fadingFactor, fadingFactor, 1.0);\\n\"\n};\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar MapMeshMaterials_1 = require(\"./MapMeshMaterials\");\nvar vertexSource = \"\\nattribute vec3 position;\\nattribute vec4 color;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform vec3 edgeColor;\\nuniform float edgeColorMix;\\n\\nvarying vec3 vColor;\\n\\n#ifdef USE_FADING\\n#include <fading_pars_vertex>\\n#endif\\n\\nvoid main() {\\n    #if USE_COLOR\\n    vColor = mix(edgeColor.rgb, color.rgb, edgeColorMix);\\n    #else\\n    vColor = edgeColor.rgb;\\n    #endif\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    #ifdef USE_FADING\\n    #include <fading_vertex>\\n    #endif\\n}\";\nvar fragmentSource = \"\\nprecision highp float;\\nprecision highp int;\\n\\nvarying vec3 vColor;\\n\\n#ifdef USE_FADING\\n#include <fading_pars_fragment>\\n#endif\\n\\nvoid main() {\\n    float alphaValue = 1.0;\\n    gl_FragColor = vec4(vColor, alphaValue);\\n\\n    #ifdef USE_FADING\\n    #include <fading_fragment>\\n    #endif\\n}\";\n/**\n * Material designed to render the edges of extruded buildings using GL_LINES. It supports solid\n * colors, vertex colors, color mixing and distance fading.\n */\nvar EdgeMaterial = /** @class */ (function (_super) {\n    __extends(EdgeMaterial, _super);\n    /**\n     * Constructs a new `EdgeMaterial`.\n     *\n     * @param params `EdgeMaterial` parameters.\n     */\n    function EdgeMaterial(params) {\n        var _this = this;\n        var shaderParams = {\n            name: \"EdgeMaterial\",\n            vertexShader: vertexSource,\n            fragmentShader: fragmentSource,\n            uniforms: {\n                edgeColor: new THREE.Uniform(new THREE.Color(EdgeMaterial.DEFAULT_COLOR)),\n                edgeColorMix: new THREE.Uniform(EdgeMaterial.DEFAULT_COLOR_MIX),\n                fadeNear: new THREE.Uniform(MapMeshMaterials_1.FadingFeature.DEFAULT_FADE_NEAR),\n                fadeFar: new THREE.Uniform(MapMeshMaterials_1.FadingFeature.DEFAULT_FADE_FAR)\n            },\n            depthWrite: false\n        };\n        _this = _super.call(this, shaderParams) || this;\n        MapMeshMaterials_1.FadingFeature.patchGlobalShaderChunks();\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.color !== undefined) {\n                _this.color.set(params.color);\n            }\n            if (params.colorMix !== undefined) {\n                _this.colorMix = params.colorMix;\n            }\n            if (params.fadeNear !== undefined) {\n                _this.fadeNear = params.fadeNear;\n            }\n            if (params.fadeFar !== undefined) {\n                _this.fadeFar = params.fadeFar;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(EdgeMaterial.prototype, \"color\", {\n        /**\n         * Edge color.\n         */\n        get: function () {\n            return this.uniforms.edgeColor.value;\n        },\n        set: function (value) {\n            this.uniforms.edgeColor.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EdgeMaterial.prototype, \"colorMix\", {\n        /**\n         * Color mix value. Mixes between vertexColors and edgeColor.\n         */\n        get: function () {\n            return this.uniforms.edgeColorMix.value;\n        },\n        set: function (value) {\n            this.uniforms.edgeColorMix.value = value;\n            this.updateColorMixFeature();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EdgeMaterial.prototype.updateColorMixFeature = function () {\n        this.defines.USE_COLOR = this.colorMix > 0.0 ? 1 : 0;\n    };\n    Object.defineProperty(EdgeMaterial.prototype, \"fadeNear\", {\n        get: function () {\n            return this.uniforms.fadeNear.value;\n        },\n        set: function (value) {\n            this.uniforms.fadeNear.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EdgeMaterial.prototype, \"fadeFar\", {\n        get: function () {\n            return this.uniforms.fadeFar.value;\n        },\n        set: function (value) {\n            this.uniforms.fadeFar.value = value;\n            var doFade = value !== undefined && value > 0.0;\n            if (doFade) {\n                this.needsUpdate = this.needsUpdate || this.defines.USE_FADING === undefined;\n                this.defines.USE_FADING = \"\";\n            }\n            else {\n                this.needsUpdate = this.needsUpdate || this.defines.USE_FADING !== undefined;\n                delete this.defines.USE_FADING;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EdgeMaterial.DEFAULT_COLOR = 0x000000;\n    EdgeMaterial.DEFAULT_COLOR_MIX = 0.0;\n    return EdgeMaterial;\n}(THREE.RawShaderMaterial));\nexports.EdgeMaterial = EdgeMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar vertexSource = \"\\nattribute vec4 position;\\nattribute vec3 uv;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\n\\nvarying vec3 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xy, 0.0, 1.0);\\n}\";\nvar fragmentSource = \"\\nprecision highp float;\\nprecision highp int;\\n\\nuniform float pageOffset;\\nuniform sampler2D page0;\\nuniform sampler2D page1;\\nuniform sampler2D page2;\\nuniform sampler2D page3;\\nuniform sampler2D page4;\\nuniform sampler2D page5;\\nuniform sampler2D page6;\\nuniform sampler2D page7;\\n\\nvarying vec3 vUv;\\n\\nvoid main() {\\n    float sample = 0.0;\\n    if (vUv.z < pageOffset || vUv.z > (pageOffset + 7.0)) discard;\\n    else if (vUv.z < pageOffset + 1.0) sample = texture2D(page0, vUv.xy).a;\\n    else if (vUv.z < pageOffset + 2.0) sample = texture2D(page1, vUv.xy).a;\\n    else if (vUv.z < pageOffset + 3.0) sample = texture2D(page2, vUv.xy).a;\\n    else if (vUv.z < pageOffset + 4.0) sample = texture2D(page3, vUv.xy).a;\\n    else if (vUv.z < pageOffset + 5.0) sample = texture2D(page4, vUv.xy).a;\\n    else if (vUv.z < pageOffset + 6.0) sample = texture2D(page5, vUv.xy).a;\\n    else if (vUv.z < pageOffset + 7.0) sample = texture2D(page6, vUv.xy).a;\\n    else sample = texture2D(page7, vUv.xy).a;\\n\\n    gl_FragColor = vec4(sample, sample, sample, 1.0);\\n}\";\n/**\n * Material designed to copy glyph into a [[GlyphTextureCache]].\n */\nvar GlyphCopyMaterial = /** @class */ (function (_super) {\n    __extends(GlyphCopyMaterial, _super);\n    /**\n     * Constructs a new `GlyphCopyMaterial`.\n     *\n     * @param params `GlyphCopyMaterial` parameters.\n     */\n    function GlyphCopyMaterial() {\n        var _this = this;\n        var shaderParams = {\n            name: \"GlyphCopyMaterial\",\n            vertexShader: vertexSource,\n            fragmentShader: fragmentSource,\n            uniforms: {\n                pageOffset: new THREE.Uniform(0.0),\n                page0: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                page1: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                page2: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                page3: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                page4: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                page5: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                page6: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                page7: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE)\n            },\n            depthTest: false,\n            depthWrite: false\n        };\n        _this = _super.call(this, shaderParams) || this;\n        return _this;\n    }\n    return GlyphCopyMaterial;\n}(THREE.RawShaderMaterial));\nexports.GlyphCopyMaterial = GlyphCopyMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar LinesChunks_1 = require(\"./ShaderChunks/LinesChunks\");\nvar vertexSource2D = \"\\n#ifdef USE_COLOR\\nattribute vec4 color;\\nvarying vec3 vColor;\\n#endif\\n\\n// uniforms to implement double-precision\\nuniform mat4 u_mvp;             // combined modelView and projection matrix\\nuniform vec3 u_eyepos;          // eye position major\\nuniform vec3 u_eyepos_lowpart;  // eye position minor ((double) eyepos - (float) eyepos)\\n\\n// vertex attributes\\nattribute vec2 position;        // high part\\nattribute vec2 positionLow;     // low part\\n\\n#include <high_precision_vert2D_func>\\n\\nvoid main() {\\n    #ifdef USE_COLOR\\n    vColor = color.rgb;\\n    #endif\\n\\n    vec2 pos = subtractDblEyePos(position);\\n    gl_Position = u_mvp * vec4(pos, 0.0, 1.0);\\n}\";\nvar vertexSource3D = \"\\n#ifdef USE_COLOR\\nattribute vec4 color;\\nvarying vec3 vColor;\\n#endif\\n\\n// uniforms to implement double-precision\\nuniform mat4 u_mvp;             // combined modelView and projection matrix\\nuniform vec3 u_eyepos;          // eye position major\\nuniform vec3 u_eyepos_lowpart;  // eye position minor ((double) eyepos - (float) eyepos)\\n\\n// vertex attributes\\nattribute vec3 position;        // high part\\nattribute vec3 positionLow;     // low part\\n\\n#include <high_precision_vert3D_func>\\n\\nvoid main() {\\n    #ifdef USE_COLOR\\n    vColor = color.rgb;\\n    #endif\\n\\n    vec3 pos = subtractDblEyePos(position);\\n    gl_Position = u_mvp * vec4(pos, 1.0);\\n}\";\nvar fragmentSource = \"\\nprecision highp float;\\nprecision highp int;\\n\\nuniform vec3 diffuse;\\nuniform float opacity;\\n\\n#ifdef USE_COLOR\\nvarying vec3 color;\\n#endif\\n\\nvoid main() {\\n    #ifdef USE_COLOR\\n    gl_FragColor = vec4( diffuse * vColor, opacity );\\n    #else\\n    gl_FragColor = vec4( diffuse, opacity );\\n    #endif\\n}\";\n/**\n * Material designed to render high precision lines (ideal for position-sensible data).\n */\nvar HighPrecisionLineMaterial = /** @class */ (function (_super) {\n    __extends(HighPrecisionLineMaterial, _super);\n    /**\n     * Constructs a new `HighPrecisionLineMaterial`.\n     *\n     * @param params `HighPrecisionLineMaterial` parameters.\n     */\n    function HighPrecisionLineMaterial(params) {\n        var _this = this;\n        Object.assign(THREE.ShaderChunk, LinesChunks_1.default);\n        var shaderParams = {\n            name: \"HighPrecisionLineMaterial\",\n            vertexShader: vertexSource3D,\n            fragmentShader: fragmentSource,\n            uniforms: {\n                diffuse: new THREE.Uniform(new THREE.Color(HighPrecisionLineMaterial.DEFAULT_COLOR)),\n                opacity: new THREE.Uniform(HighPrecisionLineMaterial.DEFAULT_OPACITY),\n                u_mvp: new THREE.Uniform(new THREE.Matrix4()),\n                u_eyepos: new THREE.Uniform(new THREE.Vector3()),\n                u_eyepos_lowpart: new THREE.Uniform(new THREE.Vector3())\n            }\n        };\n        Object.assign(shaderParams, params);\n        _this = _super.call(this, shaderParams) || this;\n        _this.type = \"HighPrecisionLineMaterial\";\n        _this.isHighPrecisionLineMaterial = true;\n        _this.dimensionality = 3;\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.color !== undefined) {\n                _this.color.set(params.color);\n            }\n            if (params.opacity !== undefined) {\n                _this.opacity = params.opacity;\n            }\n        }\n        _this.updateTransparencyFeature();\n        return _this;\n    }\n    Object.defineProperty(HighPrecisionLineMaterial.prototype, \"color\", {\n        /**\n         * Line color.\n         */\n        get: function () {\n            return this.uniforms.diffuse.value;\n        },\n        set: function (value) {\n            this.uniforms.diffuse.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the number of dimensions this material is intended to work for (2D/3D).\n     * @param dimensionality Number of dimensions (`2` = 2D, `3` = 3D).\n     */\n    HighPrecisionLineMaterial.prototype.setDimensionality = function (dimensionality) {\n        if (dimensionality !== this.dimensionality) {\n            this.dimensionality = dimensionality;\n            this.vertexShader = this.dimensionality === 2 ? vertexSource2D : vertexSource3D;\n        }\n    };\n    HighPrecisionLineMaterial.prototype.updateTransparencyFeature = function () {\n        this.transparent = this.opacity < 1.0 ? true : false;\n    };\n    HighPrecisionLineMaterial.DEFAULT_COLOR = 0x000050;\n    HighPrecisionLineMaterial.DEFAULT_OPACITY = 1.0;\n    return HighPrecisionLineMaterial;\n}(THREE.RawShaderMaterial));\nexports.HighPrecisionLineMaterial = HighPrecisionLineMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar LinesChunks_1 = require(\"./ShaderChunks/LinesChunks\");\nvar vertexSource2D = \"\\n#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\\n\\nuniform float size;\\n\\n// uniforms to implement double-precision\\nuniform mat4 u_mvp;             // combined modelView and projection matrix\\nuniform vec3 u_eyepos;          // eye position major\\nuniform vec3 u_eyepos_lowpart;  // eye position minor ((double) eyepos - (float) eyepos)\\n\\n// vertex attributes\\nattribute vec2 position;        // high part\\nattribute vec2 positionLow;     // low part\\n\\n#include <high_precision_vert2D_func>\\n\\nvoid main() {\\n    #ifdef USE_COLOR\\n    vColor = color.rgb;\\n    #endif\\n\\n    vec2 pos = subtractDblEyePos(position);\\n    gl_Position = u_mvp * vec4(pos, 0.0, 1.0);\\n\\n    // ignore sizeAttenuation for now!\\n    gl_PointSize = size;\\n}\";\nvar vertexSource3D = \"\\n#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\\n\\nuniform float size;\\n\\n// uniforms to implement double-precision\\nuniform mat4 u_mvp;             // combined modelView and projection matrix\\nuniform vec3 u_eyepos;          // eye position major\\nuniform vec3 u_eyepos_lowpart;  // eye position minor ((double) eyepos - (float) eyepos)\\n\\n// vertex attributes\\nattribute vec3 positionLow;     // low part\\n\\n#include <high_precision_vert3D_func>\\n\\nvoid main() {\\n    #ifdef USE_COLOR\\n    vColor = color.rgb;\\n    #endif\\n\\n    vec3 pos = subtractDblEyePos(position);\\n    gl_Position = u_mvp * vec4(pos, 1.0);\\n\\n    // ignore sizeAttenuation for now!\\n    gl_PointSize = size;\\n}\";\n/**\n * Material designed to render high precision points (ideal for position-sensible data).\n */\nvar HighPrecisionPointMaterial = /** @class */ (function (_super) {\n    __extends(HighPrecisionPointMaterial, _super);\n    /**\n     * Constructs a new `HighPrecisionPointMaterial`.\n     *\n     * @param params `HighPrecisionPointMaterial` parameters.\n     */\n    function HighPrecisionPointMaterial(params) {\n        var _this = this;\n        Object.assign(THREE.ShaderChunk, LinesChunks_1.default);\n        var shaderParams = params;\n        _this = _super.call(this, shaderParams) || this;\n        _this.type = \"HighPrecisionPointMaterial\";\n        _this.vertexShader = vertexSource3D;\n        _this.fragmentShader = THREE.ShaderChunk.points_frag;\n        _this.fog = false;\n        _this.uniforms = {\n            diffuse: new THREE.Uniform(new THREE.Color(HighPrecisionPointMaterial.DEFAULT_COLOR)),\n            opacity: new THREE.Uniform(HighPrecisionPointMaterial.DEFAULT_OPACITY),\n            size: new THREE.Uniform(HighPrecisionPointMaterial.DEFAULT_SIZE),\n            scale: new THREE.Uniform(HighPrecisionPointMaterial.DEFAULT_SCALE),\n            map: new THREE.Uniform(new THREE.Texture()),\n            uvTransform: new THREE.Uniform(new THREE.Matrix3()),\n            u_mvp: new THREE.Uniform(new THREE.Matrix4()),\n            u_eyepos: new THREE.Uniform(new THREE.Vector3()),\n            u_eyepos_lowpart: new THREE.Uniform(new THREE.Vector3())\n        };\n        _this.isHighPrecisionPointMaterial = true;\n        _this.dimensionality = 3;\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.color !== undefined) {\n                _this.color.set(params.color);\n            }\n            if (params.opacity !== undefined) {\n                _this.opacity = params.opacity;\n            }\n            if (params.size !== undefined) {\n                _this.size = params.size;\n            }\n            if (params.scale !== undefined) {\n                _this.scale = params.scale;\n            }\n            if (params.uvTransform !== undefined) {\n                _this.uvTransform = params.uvTransform;\n            }\n            if (params.map !== undefined) {\n                _this.map = params.map;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(HighPrecisionPointMaterial.prototype, \"scale\", {\n        /**\n         *  Point scale.\n         */\n        get: function () {\n            return this.uniforms.scale.value;\n        },\n        set: function (value) {\n            this.uniforms.scale.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HighPrecisionPointMaterial.prototype, \"uvTransform\", {\n        /**\n         * UV transformation matrix.\n         */\n        get: function () {\n            return this.uniforms.uvTransform.value;\n        },\n        set: function (value) {\n            this.uniforms.uvTransform.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the number of dimensions this material is intended to work for (2D/3D).\n     * @param dimensionality Number of dimensions (`2` = 2D, `3` = 3D).\n     */\n    HighPrecisionPointMaterial.prototype.setDimensionality = function (dimensionality) {\n        if (dimensionality !== this.dimensionality) {\n            this.dimensionality = dimensionality;\n            this.vertexShader = this.dimensionality === 2 ? vertexSource2D : vertexSource3D;\n        }\n    };\n    HighPrecisionPointMaterial.DEFAULT_COLOR = 0x000050;\n    HighPrecisionPointMaterial.DEFAULT_OPACITY = 1.0;\n    HighPrecisionPointMaterial.DEFAULT_SIZE = 1.0;\n    HighPrecisionPointMaterial.DEFAULT_SCALE = 1.0;\n    return HighPrecisionPointMaterial;\n}(THREE.PointsMaterial));\nexports.HighPrecisionPointMaterial = HighPrecisionPointMaterial;\nfunction isHighPrecisionPointMaterial(material) {\n    return (material !== undefined &&\n        material.isHighPrecisionPointMaterial === true);\n}\nexports.isHighPrecisionPointMaterial = isHighPrecisionPointMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar vertexSource = \"\\nattribute vec4 position;\\nattribute vec4 color;\\nattribute vec2 uv;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\n\\nvarying vec4 vColor;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    vColor = color;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz, 1.0);\\n}\";\nvar fragmentSource = \"\\nprecision highp float;\\nprecision highp int;\\n\\nuniform sampler2D map;\\n\\nvarying vec4 vColor;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    vec4 color = texture2D(map, vUv.xy);\\n    color *= vColor.a;\\n    if (color.a < 0.05) {\\n        discard;\\n    }\\n    gl_FragColor = color;\\n}\";\n/**\n * 2D material for icons, similar to [[TextMaterial]]. Uses component in texture coordinates to\n * apply opacity.\n */\nvar IconMaterial = /** @class */ (function (_super) {\n    __extends(IconMaterial, _super);\n    /**\n     * Constructs a new `IconMaterial`.\n     *\n     * @param params `IconMaterial` parameters.\n     */\n    function IconMaterial(params) {\n        var _this = this;\n        var shaderParams = {\n            name: \"IconMaterial\",\n            vertexShader: vertexSource,\n            fragmentShader: fragmentSource,\n            uniforms: {\n                map: new THREE.Uniform(params.map)\n            },\n            depthTest: true,\n            depthWrite: true,\n            transparent: true,\n            vertexColors: THREE.VertexColors,\n            premultipliedAlpha: true,\n            blending: THREE.NormalBlending\n        };\n        _this = _super.call(this, shaderParams) || this;\n        return _this;\n    }\n    Object.defineProperty(IconMaterial.prototype, \"map\", {\n        /**\n         * Icon texture map/atlas.\n         */\n        get: function () {\n            return this.uniforms.map.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IconMaterial;\n}(THREE.RawShaderMaterial));\nexports.IconMaterial = IconMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright (C) 2018 HERE Global B.V. and its affiliate(s). All rights reserved.\n *\n * This software and other materials contain proprietary information controlled by HERE and are\n * protected by applicable copyright legislation. Any use and utilization of this software and other\n * materials and disclosure to any third parties is conditional upon having a separate agreement\n * with HERE for the access, use, utilization or disclosure of this software. In the absence of such\n * agreement, the use of the software is not allowed.\n */\nvar three_1 = require(\"three\");\nvar vertexShader = \"\\nuniform float size;\\n\\nvoid main() {\\n    vec3 transformed = vec3(position);\\n    vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.0);\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = size;\\n}\\n\";\nvar fragmentShader = \"\\nuniform vec3 diffuse;\\n\\nvoid main() {\\n    float alpha = 1.0;\\n\\n    float radius = 0.5;\\n    vec2 coords = gl_PointCoord.xy - vec2(0.5);\\n    float len = length(coords);\\n    float falloff = fwidth(len);\\n    float threshold = 1.0 - smoothstep(radius - falloff, radius, len);\\n    alpha *= threshold;\\n\\n    gl_FragColor = vec4(diffuse, alpha);\\n}\";\nvar DEFAULT_CIRCLE_SIZE = 1;\n/**\n * Material designed to render circle points.\n */\nvar CirclePointsMaterial = /** @class */ (function (_super) {\n    __extends(CirclePointsMaterial, _super);\n    /**\n     * Constructs a new `CirclePointsMaterial`.\n     *\n     * @param parameters The constructor's parameters.\n     */\n    function CirclePointsMaterial(parameters) {\n        if (parameters === void 0) { parameters = {}; }\n        var _this = this;\n        parameters.depthTest = false;\n        _this = _super.call(this, parameters) || this;\n        _this.isCirclePointsMaterial = true;\n        _this.type = \"CirclePointsMaterial\";\n        _this.vertexShader = vertexShader;\n        _this.fragmentShader = fragmentShader;\n        _this.m_size = parameters.size || DEFAULT_CIRCLE_SIZE;\n        _this.m_color = new three_1.Color();\n        _this.uniforms = {\n            diffuse: new three_1.Uniform(_this.m_color),\n            size: new three_1.Uniform(_this.m_size)\n        };\n        _this.extensions.derivatives = true;\n        return _this;\n    }\n    Object.defineProperty(CirclePointsMaterial.prototype, \"size\", {\n        /**\n         * Gets the circle screen size.\n         */\n        get: function () {\n            return this.m_size;\n        },\n        /**\n         * Sets the circle screen size.\n         */\n        set: function (size) {\n            this.m_size = size;\n            this.uniforms.size.value = size;\n            this.needsUpdate = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CirclePointsMaterial.prototype, \"color\", {\n        /**\n         * Gets the diffuse.\n         */\n        get: function () {\n            return \"#\" + this.m_color.getHexString();\n        },\n        /**\n         * Sets the diffuse.\n         */\n        set: function (color) {\n            this.m_color.set(color);\n            this.uniforms.diffuse.value.set(this.m_color);\n            this.needsUpdate = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CirclePointsMaterial;\n}(three_1.ShaderMaterial));\nexports.CirclePointsMaterial = CirclePointsMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar three_1 = require(\"three\");\nvar CopyShader_1 = require(\"./CopyShader\");\n/**\n * The material to use for the quad of the [[MSAARenderPass]] in the composing.\n */\nvar MSAAMaterial = /** @class */ (function (_super) {\n    __extends(MSAAMaterial, _super);\n    /**\n     * The constructor of `MSAAMaterial`.\n     *\n     * @param uniforms The [[CopyShader]]'s uniforms.\n     */\n    function MSAAMaterial(uniforms) {\n        return _super.call(this, {\n            uniforms: uniforms,\n            vertexShader: CopyShader_1.CopyShader.vertexShader,\n            fragmentShader: CopyShader_1.CopyShader.fragmentShader,\n            premultipliedAlpha: true,\n            transparent: true,\n            blending: three_1.AdditiveBlending,\n            depthTest: false,\n            depthWrite: false\n        }) || this;\n    }\n    return MSAAMaterial;\n}(three_1.ShaderMaterial));\nexports.MSAAMaterial = MSAAMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar vertexSource = \"\\nattribute vec4 position;\\nattribute vec4 color;\\nattribute vec4 uv;\\nattribute vec2 glyphAxis;\\nattribute vec2 dummy_for_alignment;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\n\\nvarying vec4 vColor;\\nvarying vec4 vUv;\\nvarying float vWeight;\\nvarying float vBG;\\n\\nvoid main() {\\n    vColor = color;\\n    vUv = vec4(uv.xy, glyphAxis.xy);\\n    vWeight = uv.z;\\n    vBG = uv.w;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz, 1.0);\\n}\";\nvar fragmentSource = \"\\nprecision highp float;\\nprecision highp int;\\n\\n// Make sure this parameter matches the \\\"distanceRange\\\" used when generating these fonts (found in:\\n// @here/harp-map-theme/scripts/create-font-catalog.js).\\n#define SDF_DISTANCE_RANGE 8.0\\n\\nuniform sampler2D texture;\\nuniform float textureSize;\\n\\n#if BG_TEXT\\nuniform vec3 bgColor;\\nuniform float bgFactor;\\nuniform float bgAlpha;\\n#endif\\n\\nvarying vec4 vColor;\\nvarying vec4 vUv;\\nvarying float vWeight;\\nvarying float vBG;\\n\\nvoid main() {\\n\\n    vec4 color = vec4(vColor);\\n    vec3 sample = texture2D(texture, vUv.xy).rgb;\\n\\n    float h = sqrt(vUv.z * vUv.z + vUv.w * vUv.w);\\n    float textScale = max(abs(vUv.z / h), 0.000001);\\n    float dx = abs(dFdx( vUv.x ) * textureSize);\\n    float dy = abs(dFdy( vUv.y ) * textureSize);\\n    // Special case for glyphs perfectly aligned with the screen Y axis.\\n    if (dx == 0.0 && dy == 0.0) {\\n        textScale = 1.0;\\n        dx = abs(dFdy( vUv.x ) * textureSize);\\n        dy = abs(dFdx( vUv.y ) * textureSize);\\n    }\\n    float toPixels = SDF_DISTANCE_RANGE * inversesqrt( dx * dx + dy * dy ) * textScale;\\n\\n    float distScale = vWeight;\\n    float alphaScale = 1.0;\\n    #if BG_TEXT\\n    // TODO: Make this less hard-coded with proper outlines specified in pixel width.\\n    distScale = (1.0 + (bgFactor * (vWeight - 1.0 ))) * bgFactor;\\n    alphaScale = bgAlpha;\\n    color.rgb = bgColor;\\n\\n    float dist = sample.r * distScale - 0.5;\\n    float alpha = 1.0;\\n    if (vBG < 1.0) alpha = clamp( dist * toPixels + 0.5, 0.0, alphaScale);\\n    else alpha = (dist + 0.5) * alphaScale;\\n    #else\\n    float dist = sample.r * distScale - 0.5;\\n    float alpha = clamp( dist * toPixels + 0.5, 0.0, alphaScale);\\n    #endif\\n    color.a *= alpha;\\n    if (color.a < 0.05) {\\n        discard;\\n    }\\n\\n    gl_FragColor = color;\\n}\";\n/**\n * Material designed to render text (using distance-encoded fonts).\n */\nvar TextMaterial = /** @class */ (function (_super) {\n    __extends(TextMaterial, _super);\n    /**\n     * Constructs a new `TextMaterial`.\n     *\n     * @param params `TextMaterial` parameters.\n     */\n    function TextMaterial(params) {\n        var _this = this;\n        var shaderParams = {\n            name: \"TextMaterial\",\n            vertexShader: vertexSource,\n            fragmentShader: fragmentSource,\n            uniforms: {\n                texture: new THREE.Uniform(params.texture),\n                textureSize: new THREE.Uniform(params.textureSize),\n                bgFactor: new THREE.Uniform(TextMaterial.DEFAULT_BG_FACTOR),\n                bgColor: new THREE.Uniform(new THREE.Color(TextMaterial.DEFAULT_BG_COLOR)),\n                bgAlpha: new THREE.Uniform(TextMaterial.DEFAULT_BG_ALPHA)\n            },\n            defines: { BG_TEXT: 0 },\n            depthTest: true,\n            depthWrite: true,\n            side: THREE.DoubleSide,\n            transparent: true\n        };\n        _this = _super.call(this, shaderParams) || this;\n        _this.extensions.derivatives = true;\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.bgColor !== undefined) {\n                _this.bgColor.set(params.bgColor);\n            }\n            if (params.bgFactor !== undefined) {\n                _this.bgFactor = params.bgFactor;\n            }\n            if (params.bgAlpha !== undefined) {\n                _this.bgAlpha = params.bgAlpha;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(TextMaterial.prototype, \"bgFactor\", {\n        /**\n         * Outline thickness. Choose a value in the range `[5.0, 20.0]` to get a simple outline.\n         */\n        get: function () {\n            return this.uniforms.bgFactor.value;\n        },\n        set: function (value) {\n            this.uniforms.bgFactor.value = value;\n            this.updateBackgroundFeature();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextMaterial.prototype, \"bgColor\", {\n        /**\n         * Outline color value.\n         */\n        get: function () {\n            return this.uniforms.bgColor.value;\n        },\n        set: function (value) {\n            this.uniforms.bgColor.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextMaterial.prototype, \"bgAlpha\", {\n        /**\n         * Outline alpha value. A value of `0` makes it totally transparent. A value of `1` makes it\n         * fully opaque.\n         */\n        get: function () {\n            return this.uniforms.bgAlpha.value;\n        },\n        set: function (value) {\n            this.uniforms.bgAlpha.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextMaterial.prototype.updateBackgroundFeature = function () {\n        this.defines.BG_TEXT = this.bgFactor > 0.0 ? 1 : 0;\n    };\n    TextMaterial.DEFAULT_BG_FACTOR = 0.0;\n    TextMaterial.DEFAULT_BG_COLOR = 0xe0e0e0;\n    TextMaterial.DEFAULT_BG_ALPHA = 1.0;\n    return TextMaterial;\n}(THREE.RawShaderMaterial));\nexports.TextMaterial = TextMaterial;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_utils_1 = require(\"@here/harp-utils\");\nvar THREE = require(\"three\");\nvar logger = harp_utils_1.LoggerManager.instance.create(\"Theme\");\nvar Env = /** @class */ (function () {\n    function Env() {\n    }\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     */\n    Env.prototype.lookup = function (_name) {\n        return undefined;\n    };\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    Env.prototype.unmap = function () {\n        return {};\n    };\n    return Env;\n}());\nexports.Env = Env;\nvar Bind = /** @class */ (function (_super) {\n    __extends(Bind, _super);\n    function Bind(name, value, parent) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.parent = parent;\n        return _this;\n    }\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     */\n    Bind.prototype.lookup = function (name) {\n        if (name === this.name) {\n            return this.value;\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    };\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     */\n    Bind.prototype.unmap = function () {\n        var obj = this.parent ? this.parent.unmap() : {};\n        obj[this.name] = this.value;\n        return obj;\n    };\n    return Bind;\n}(Env));\nexports.Bind = Bind;\nexports.EmptyEnv = {\n    /**\n     * Returns property in [[Env]] by name.\n     */\n    lookup: function (_name) {\n        return undefined;\n    },\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap: function () {\n        return {};\n    }\n};\nvar MapEnv = /** @class */ (function (_super) {\n    __extends(MapEnv, _super);\n    function MapEnv(entries, parent) {\n        var _this = _super.call(this) || this;\n        _this.entries = entries;\n        _this.parent = parent;\n        return _this;\n    }\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     */\n    MapEnv.prototype.lookup = function (name) {\n        var value = this.entries[name];\n        if (value !== undefined) {\n            return value;\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    };\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     */\n    MapEnv.prototype.unmap = function () {\n        var obj = this.parent ? this.parent.unmap() : {};\n        for (var key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    };\n    return MapEnv;\n}(Env));\nexports.MapEnv = MapEnv;\nvar Expr = /** @class */ (function () {\n    function Expr(kind) {\n        this.kind = kind;\n    }\n    Expr.parse = function (code) {\n        var parser = new Parser(code);\n        var expr = parser.parse();\n        return expr;\n    };\n    return Expr;\n}());\nexports.Expr = Expr;\nvar VarExpr = /** @class */ (function (_super) {\n    __extends(VarExpr, _super);\n    function VarExpr(name) {\n        var _this = _super.call(this, \"var\") || this;\n        _this.name = name;\n        return _this;\n    }\n    VarExpr.prototype.evaluate = function (env) {\n        var value = env.lookup(this.name);\n        return value;\n    };\n    return VarExpr;\n}(Expr));\nvar NumberLiteralExpr = /** @class */ (function (_super) {\n    __extends(NumberLiteralExpr, _super);\n    function NumberLiteralExpr(value) {\n        var _this = _super.call(this, \"number\") || this;\n        _this.value = value;\n        return _this;\n    }\n    NumberLiteralExpr.prototype.evaluate = function () {\n        return this.value;\n    };\n    return NumberLiteralExpr;\n}(Expr));\nvar StringLiteralExpr = /** @class */ (function (_super) {\n    __extends(StringLiteralExpr, _super);\n    function StringLiteralExpr(value) {\n        var _this = _super.call(this, \"string\") || this;\n        _this.value = value;\n        return _this;\n    }\n    StringLiteralExpr.prototype.evaluate = function () {\n        return this.value;\n    };\n    return StringLiteralExpr;\n}(Expr));\nvar HasAttributeExpr = /** @class */ (function (_super) {\n    __extends(HasAttributeExpr, _super);\n    function HasAttributeExpr(attribute) {\n        var _this = _super.call(this, \"has\") || this;\n        _this.attribute = attribute;\n        return _this;\n    }\n    HasAttributeExpr.prototype.evaluate = function (env) {\n        return env.lookup(this.attribute) !== undefined;\n    };\n    return HasAttributeExpr;\n}(Expr));\nvar ContainsExpr = /** @class */ (function (_super) {\n    __extends(ContainsExpr, _super);\n    function ContainsExpr(value, elements) {\n        var _this = _super.call(this, \"in\") || this;\n        _this.value = value;\n        _this.elements = elements;\n        return _this;\n    }\n    ContainsExpr.prototype.evaluate = function (env) {\n        var e_1, _a;\n        var value = this.value.evaluate(env);\n        try {\n            for (var _b = __values(this.elements), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var e = _c.value;\n                var element = e.evaluate(env);\n                if (value === element) {\n                    return true;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return false;\n    };\n    return ContainsExpr;\n}(Expr));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(expr) {\n        var _this = _super.call(this, \"!\") || this;\n        _this.expr = expr;\n        return _this;\n    }\n    NotExpr.prototype.evaluate = function (env) {\n        return !this.expr.evaluate(env);\n    };\n    return NotExpr;\n}(Expr));\nvar BinaryExpr = /** @class */ (function (_super) {\n    __extends(BinaryExpr, _super);\n    function BinaryExpr(op, left, right) {\n        var _this = _super.call(this, op) || this;\n        _this.op = op;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    BinaryExpr.prototype.evaluate = function (env) {\n        var left = this.left.evaluate(env);\n        var right = this.right.evaluate(env);\n        switch (this.op) {\n            case \"~=\": {\n                if (typeof left === \"string\" && typeof right === \"string\") {\n                    return left.indexOf(right) !== -1;\n                }\n                return false;\n            }\n            case \"^=\": {\n                if (typeof left === \"string\" && typeof right === \"string\") {\n                    return left.startsWith(right);\n                }\n                return false;\n            }\n            case \"$=\": {\n                if (typeof left === \"string\" && typeof right === \"string\") {\n                    return left.endsWith(right);\n                }\n                return false;\n            }\n            case \"==\":\n                return left === right;\n            case \"!=\":\n                return left !== right;\n            case \"<\":\n                return left !== undefined && right !== undefined ? left < right : undefined;\n            case \">\":\n                return left !== undefined && right !== undefined ? left > right : undefined;\n            case \"<=\":\n                return left !== undefined && right !== undefined ? left <= right : undefined;\n            case \">=\":\n                return left !== undefined && right !== undefined ? left >= right : undefined;\n        }\n        throw new Error(\"invalid relational op \" + this.op);\n    };\n    return BinaryExpr;\n}(Expr));\nvar LogicalExpr = /** @class */ (function (_super) {\n    __extends(LogicalExpr, _super);\n    function LogicalExpr(op, left, right) {\n        var _this = _super.call(this, op) || this;\n        _this.op = op;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    LogicalExpr.prototype.evaluate = function (env) {\n        var value = this.left.evaluate(env);\n        switch (this.op) {\n            case \"||\":\n                return value || this.right.evaluate(env);\n            case \"&&\":\n                return value && this.right.evaluate(env);\n        } // switch\n        throw new Error(\"invalid logical op \" + this.op);\n    };\n    return LogicalExpr;\n}(Expr));\nvar Character;\n(function (Character) {\n    Character[Character[\"Tab\"] = 9] = \"Tab\";\n    Character[Character[\"Lf\"] = 10] = \"Lf\";\n    Character[Character[\"Cr\"] = 13] = \"Cr\";\n    Character[Character[\"Space\"] = 32] = \"Space\";\n    Character[Character[\"LParen\"] = 40] = \"LParen\";\n    Character[Character[\"RParen\"] = 41] = \"RParen\";\n    Character[Character[\"Comma\"] = 44] = \"Comma\";\n    Character[Character[\"Dot\"] = 46] = \"Dot\";\n    Character[Character[\"LBracket\"] = 91] = \"LBracket\";\n    Character[Character[\"Backslash\"] = 92] = \"Backslash\";\n    Character[Character[\"RBracket\"] = 93] = \"RBracket\";\n    Character[Character[\"_0\"] = 48] = \"_0\";\n    Character[Character[\"_9\"] = 57] = \"_9\";\n    Character[Character[\"_\"] = 95] = \"_\";\n    Character[Character[\"A\"] = 64] = \"A\";\n    Character[Character[\"Z\"] = 90] = \"Z\";\n    Character[Character[\"a\"] = 97] = \"a\";\n    Character[Character[\"z\"] = 122] = \"z\";\n    Character[Character[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    Character[Character[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    Character[Character[\"Exclaim\"] = 33] = \"Exclaim\";\n    Character[Character[\"Equal\"] = 61] = \"Equal\";\n    Character[Character[\"Caret\"] = 94] = \"Caret\";\n    Character[Character[\"Tilde\"] = 126] = \"Tilde\";\n    Character[Character[\"Dollar\"] = 36] = \"Dollar\";\n    Character[Character[\"Less\"] = 60] = \"Less\";\n    Character[Character[\"Greater\"] = 62] = \"Greater\";\n    Character[Character[\"Bar\"] = 124] = \"Bar\";\n    Character[Character[\"Amp\"] = 38] = \"Amp\";\n})(Character || (Character = {}));\nfunction isSpace(codepoint) {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\nfunction isNumber(codepoint) {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\nfunction isLetter(codepoint) {\n    return ((codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z));\n}\nfunction isLetterOrNumber(codepoint) {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\nfunction isIdentChar(codepoint) {\n    return (isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket);\n}\nvar Token;\n(function (Token) {\n    Token[Token[\"Eof\"] = 0] = \"Eof\";\n    Token[Token[\"Error\"] = 1] = \"Error\";\n    Token[Token[\"Identifier\"] = 2] = \"Identifier\";\n    Token[Token[\"Number\"] = 3] = \"Number\";\n    Token[Token[\"String\"] = 4] = \"String\";\n    Token[Token[\"Comma\"] = 5] = \"Comma\";\n    Token[Token[\"LParen\"] = 6] = \"LParen\";\n    Token[Token[\"RParen\"] = 7] = \"RParen\";\n    Token[Token[\"LBracket\"] = 8] = \"LBracket\";\n    Token[Token[\"RBracket\"] = 9] = \"RBracket\";\n    Token[Token[\"Exclaim\"] = 10] = \"Exclaim\";\n    Token[Token[\"TildeEqual\"] = 11] = \"TildeEqual\";\n    Token[Token[\"CaretEqual\"] = 12] = \"CaretEqual\";\n    Token[Token[\"DollarEqual\"] = 13] = \"DollarEqual\";\n    Token[Token[\"EqualEqual\"] = 14] = \"EqualEqual\";\n    Token[Token[\"ExclaimEqual\"] = 15] = \"ExclaimEqual\";\n    Token[Token[\"Less\"] = 16] = \"Less\";\n    Token[Token[\"Greater\"] = 17] = \"Greater\";\n    Token[Token[\"LessEqual\"] = 18] = \"LessEqual\";\n    Token[Token[\"GreaterEqual\"] = 19] = \"GreaterEqual\";\n    Token[Token[\"BarBar\"] = 20] = \"BarBar\";\n    Token[Token[\"AmpAmp\"] = 21] = \"AmpAmp\";\n})(Token || (Token = {}));\nfunction tokenSpell(token) {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(\"invalid token \" + token);\n    }\n}\nvar Lexer = /** @class */ (function () {\n    function Lexer(code) {\n        this.code = code;\n        this.m_token = Token.Error;\n        this.m_index = 0;\n        this.m_char = Character.Lf;\n    }\n    Lexer.prototype.token = function () {\n        return this.m_token;\n    };\n    Lexer.prototype.text = function () {\n        return this.m_text || \"\";\n    };\n    Lexer.prototype.next = function () {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(\"unexpected character \" + this.m_char);\n        }\n        return this.m_token;\n    };\n    Lexer.prototype.yyinp = function () {\n        this.m_char = this.code.codePointAt(this.m_index++) || 0;\n    };\n    Lexer.prototype.yylex = function () {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        var ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                var start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                var start = this.m_index - 2;\n                if (isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                }\n                else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                }\n                else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    };\n    return Lexer;\n}());\nfunction getEqualityOp(token) {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\nfunction getRelationalOp(token) {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\nvar Parser = /** @class */ (function () {\n    function Parser(code) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n    Parser.prototype.parse = function () {\n        return this.parseLogicalOr();\n    };\n    Parser.prototype.yyexpect = function (token) {\n        if (this.lex.token() !== token) {\n            throw new Error(\"Syntax error: Expected token '\" + tokenSpell(token) + \"' but \" +\n                (\"found '\" + tokenSpell(this.lex.token()) + \"'\"));\n        }\n        this.lex.next();\n    };\n    Parser.prototype.parsePrimary = function () {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                var text = this.lex.text();\n                if (text !== \"has\") {\n                    var expr = new VarExpr(text);\n                    this.lex.next();\n                    return expr;\n                }\n                this.lex.next(); // skip has\n                this.yyexpect(Token.LParen);\n                var attribute = this.lex.text();\n                this.yyexpect(Token.Identifier);\n                this.yyexpect(Token.RParen);\n                return new HasAttributeExpr(attribute);\n            }\n            case Token.Number: {\n                var expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                var expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            case Token.LParen: {\n                this.lex.next();\n                var expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n        }\n        throw new Error(\"Syntax error\");\n    };\n    Parser.prototype.parseUnary = function () {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new NotExpr(this.parseUnary());\n        }\n        return this.parsePrimary();\n    };\n    Parser.prototype.parseRelational = function () {\n        var expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                var elements = [this.parsePrimary()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parsePrimary());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new ContainsExpr(expr, elements);\n            }\n            else {\n                var op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                var right = this.parseUnary();\n                expr = new BinaryExpr(op, expr, right);\n            }\n        }\n        return expr;\n    };\n    Parser.prototype.parseEquality = function () {\n        var expr = this.parseRelational();\n        while (true) {\n            var op = getEqualityOp(this.lex.token());\n            if (op === undefined) {\n                break;\n            }\n            this.lex.next();\n            var right = this.parseRelational();\n            expr = new BinaryExpr(op, expr, right);\n        }\n        return expr;\n    };\n    Parser.prototype.parseLogicalAnd = function () {\n        var expr = this.parseEquality();\n        while (this.lex.token() === Token.AmpAmp) {\n            this.lex.next();\n            var right = this.parseEquality();\n            expr = new LogicalExpr(\"&&\", expr, right);\n        }\n        return expr;\n    };\n    Parser.prototype.parseLogicalOr = function () {\n        var expr = this.parseLogicalAnd();\n        while (this.lex.token() === Token.BarBar) {\n            this.lex.next();\n            var right = this.parseLogicalAnd();\n            expr = new LogicalExpr(\"||\", expr, right);\n        }\n        return expr;\n    };\n    return Parser;\n}());\nfunction createLight(lightDescription) {\n    switch (lightDescription.type) {\n        case \"ambient\": {\n            var light = new THREE.AmbientLight(lightDescription.color, lightDescription.intensity);\n            light.name = lightDescription.name;\n            return light;\n        }\n        case \"directional\": {\n            var light = new THREE.DirectionalLight(lightDescription.color, lightDescription.intensity);\n            light.name = lightDescription.name;\n            if (lightDescription.castShadow !== undefined) {\n                light.castShadow = lightDescription.castShadow;\n            }\n            light.position.set(lightDescription.direction.x, lightDescription.direction.y, lightDescription.direction.z);\n            light.position.normalize();\n            return light;\n        }\n    }\n}\nexports.createLight = createLight;\nvar StyleSetEvaluator = /** @class */ (function () {\n    function StyleSetEvaluator(styleSet, validate) {\n        var e_2, _a;\n        var _this = this;\n        this.styleSet = styleSet;\n        this.validate = validate;\n        this.m_renderOrderBiasGroups = new Map();\n        this.m_techniques = new Array();\n        var techniqueRenderOrder = 0;\n        var computeDefaultRenderOrder = function (style) {\n            var e_3, _a;\n            if (style.renderOrderBiasGroup !== undefined) {\n                var renderOrderBiasGroupOrder = style.renderOrderBiasGroup\n                    ? _this.m_renderOrderBiasGroups.get(style.renderOrderBiasGroup)\n                    : undefined;\n                if (style.renderOrderBiasRange !== undefined &&\n                    renderOrderBiasGroupOrder === undefined) {\n                    if (style.renderOrder !== undefined) {\n                        logger.warn(\"WARN: style.renderOrder will be overriden if \" +\n                            \"renderOrderBiasGroup is set:\", style);\n                    }\n                    var _b = __read(style.renderOrderBiasRange, 2), minRange = _b[0], maxRange = _b[1];\n                    style.renderOrder =\n                        minRange < 0\n                            ? techniqueRenderOrder + Math.abs(minRange)\n                            : techniqueRenderOrder;\n                    techniqueRenderOrder += Math.abs(minRange) + maxRange;\n                    if (style.renderOrderBiasGroup) {\n                        _this.m_renderOrderBiasGroups.set(style.renderOrderBiasGroup, style.renderOrder);\n                    }\n                    techniqueRenderOrder++;\n                }\n                else if (renderOrderBiasGroupOrder) {\n                    if (style.renderOrder !== undefined) {\n                        logger.warn(\"WARN: style.renderOrder will be overriden if \" +\n                            \"renderOrderBiasGroup is set:\", style);\n                    }\n                    style.renderOrder = renderOrderBiasGroupOrder;\n                }\n            }\n            // search through child styles\n            if (style.styles !== undefined) {\n                // TODO: Do proper validation (somewhere else). See HARP-732\n                if (_this.validate) {\n                    if (!Array.isArray(style.styles)) {\n                        logger.error(\"ERROR: style.styles must be an Array:\", style);\n                    }\n                }\n                try {\n                    for (var _c = __values(style.styles), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var currStyle = _d.value;\n                        computeDefaultRenderOrder(currStyle);\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n            }\n            else {\n                if (style.technique !== undefined) {\n                    if (style.attr !== undefined && style.attr.renderOrder === undefined) {\n                        style.attr._renderOrderAuto = techniqueRenderOrder++;\n                    }\n                }\n            }\n        };\n        try {\n            for (var styleSet_1 = __values(styleSet), styleSet_1_1 = styleSet_1.next(); !styleSet_1_1.done; styleSet_1_1 = styleSet_1.next()) {\n                var style = styleSet_1_1.value;\n                computeDefaultRenderOrder(style);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (styleSet_1_1 && !styleSet_1_1.done && (_a = styleSet_1.return)) _a.call(styleSet_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     */\n    StyleSetEvaluator.prototype.getMatchingTechniques = function (env) {\n        var e_4, _a;\n        var result = [];\n        var styleStack = new Array();\n        try {\n            for (var _b = __values(this.styleSet), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var currStyle = _c.value;\n                if (this.validate && styleStack.length !== 0) {\n                    throw new Error(\"Internal error: sytle stack cleanup failed\");\n                }\n                if (this.processStyle(env, styleStack, currStyle, result)) {\n                    break;\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return result;\n    };\n    /**\n     * Add a technique to the current array of techniques. Add its index to the style, so next time\n     * the technique can be found directly from this index.\n     *\n     * @param style Style that defines technique\n     * @param technique Technique to add\n     */\n    StyleSetEvaluator.prototype.checkAddTechnique = function (style, technique) {\n        var index = style._index === undefined ? -1 : style._index;\n        if (index < 0) {\n            technique._index = index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n            style._index = index;\n        }\n        else {\n            technique._index = index;\n        }\n        return index;\n    };\n    Object.defineProperty(StyleSetEvaluator.prototype, \"techniques\", {\n        /**\n         * Get the (current) array of techniques that have been created during decoding.\n         */\n        get: function () {\n            return this.m_techniques;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Shorten the style object for debug log. Remove special strings (starting with \"_\") as well\n     * as the sub-styles of style groups.\n     *\n     * @param key Key in object\n     * @param value value in object\n     */\n    StyleSetEvaluator.prototype.cleanupStyle = function (key, value) {\n        // Filtering out properties\n        if (key === \"styles\") {\n            return \"[...]\";\n        }\n        if (key.startsWith(\"_\")) {\n            return undefined;\n        }\n        return value;\n    };\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param styleStack Stack of styles containing the hierarchy of styles up to this point.\n     * @param style Current style (could also be top of stack).\n     * @param result The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    StyleSetEvaluator.prototype.processStyle = function (env, styleStack, style, result) {\n        var _this = this;\n        var e_5, _a, e_6, _b;\n        if (style.when !== undefined) {\n            // optimization: Lazy evaluation of when-expression\n            if (style._whenExpr === undefined) {\n                style._whenExpr = Expr.parse(style.when);\n            }\n            if (!style._whenExpr.evaluate(env)) {\n                return false;\n            }\n        }\n        // search through sub-styles\n        if (style.styles !== undefined) {\n            if (style.debug) {\n                logger.log(\"\\n======== style group =========\\nenv:\", JSON.stringify(env.unmap(), undefined, 2), \"\\nstyle group:\", JSON.stringify(style, this.cleanupStyle, 2));\n            }\n            styleStack.push(style);\n            // TODO: Do proper validation (somewhere else). See HARP-732\n            if (this.validate) {\n                if (!Array.isArray(style.styles)) {\n                    logger.error(\"ERROR: style.styles must be an Array:\", style);\n                    styleStack.pop();\n                    return false;\n                }\n            }\n            try {\n                for (var _c = __values(style.styles), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var currStyle = _d.value;\n                    if (this.processStyle(env, styleStack, currStyle, result)) {\n                        styleStack.pop();\n                        return true;\n                    }\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n            styleStack.pop();\n        }\n        else {\n            // we found a technique!\n            if (style.technique !== undefined) {\n                // check if we already assembled the technique for exactly this style. If we have,\n                // we return the preassembled technique object. Otherwise we assemble the technique\n                // from all parent styles' attributes and the current stales' attributes, and add it\n                // to the cached techniques.\n                if (style._index === undefined) {\n                    var technique_1 = {};\n                    technique_1.name = style.technique;\n                    var addAttributes = function (currStyle) {\n                        if (currStyle.renderOrder !== undefined) {\n                            technique_1.renderOrder = currStyle.renderOrder;\n                        }\n                        if (currStyle.transient !== undefined) {\n                            technique_1.transient = currStyle.transient;\n                        }\n                        if (currStyle.renderOrderBiasProperty !== undefined) {\n                            technique_1.renderOrderBiasProperty = currStyle.renderOrderBiasProperty;\n                        }\n                        if (currStyle.labelProperty !== undefined) {\n                            technique_1.label = currStyle.labelProperty;\n                        }\n                        if (currStyle.renderOrderBiasRange !== undefined) {\n                            technique_1.renderOrderBiasRange = currStyle.renderOrderBiasRange;\n                        }\n                        if (currStyle.renderOrderBiasGroup !== undefined) {\n                            technique_1.renderOrderBiasGroup = currStyle.renderOrderBiasGroup;\n                        }\n                        if (currStyle.attr !== undefined) {\n                            Object.getOwnPropertyNames(currStyle.attr).forEach(function (property) {\n                                // check for valid attr keys\n                                // TODO: Do proper validation (somewhere else). See HARP-732\n                                if (_this.validate) {\n                                    if (property === \"technique\") {\n                                        logger.warn(\"WARNING: technique defined in attr \" + \"(deprecated):\", currStyle);\n                                    }\n                                    else if (property === \"renderOrder\") {\n                                        logger.warn(\"WARNING: renderOrder defined in attr \" +\n                                            \"(deprecated):\", currStyle);\n                                    }\n                                }\n                                if (currStyle.attr !== undefined) {\n                                    technique_1[property] = currStyle.attr[property];\n                                }\n                            });\n                        }\n                    };\n                    try {\n                        for (var styleStack_1 = __values(styleStack), styleStack_1_1 = styleStack_1.next(); !styleStack_1_1.done; styleStack_1_1 = styleStack_1.next()) {\n                            var currStyle = styleStack_1_1.value;\n                            addAttributes(currStyle);\n                        }\n                    }\n                    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                    finally {\n                        try {\n                            if (styleStack_1_1 && !styleStack_1_1.done && (_b = styleStack_1.return)) _b.call(styleStack_1);\n                        }\n                        finally { if (e_6) throw e_6.error; }\n                    }\n                    addAttributes(style);\n                    this.checkAddTechnique(style, technique_1);\n                    result.push(technique_1);\n                    if (style.debug) {\n                        logger.log(\"\\n======== style w/ technique =========\\nenv:\", JSON.stringify(env.unmap(), undefined, 2), \"\\nstyle:\", JSON.stringify(style, this.cleanupStyle, 2), \"\\ntechnique:\", JSON.stringify(technique_1, this.cleanupStyle, 2));\n                    }\n                }\n                else {\n                    result.push(this.m_techniques[style._index]);\n                }\n                // stop processing if \"final\" is set\n                return style.final === true;\n            }\n            else if (this.validate) {\n                logger.warn(\"WARNING: No technique defined in style. Either sub-styles or a \" +\n                    \"technique must be defined:\", JSON.stringify(style));\n            }\n        }\n        return false;\n    };\n    return StyleSetEvaluator;\n}());\nexports.StyleSetEvaluator = StyleSetEvaluator;\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nvar ThemeVisitor = /** @class */ (function () {\n    function ThemeVisitor(theme) {\n        this.theme = theme;\n    }\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    ThemeVisitor.prototype.visitStyles = function (visitFunc) {\n        var e_7, _a;\n        var visit = function (style) {\n            var e_8, _a;\n            if (visitFunc(style)) {\n                return true;\n            }\n            if (style.styles !== undefined) {\n                try {\n                    for (var _b = __values(style.styles), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var currStyle = _c.value;\n                        if (visit(currStyle)) {\n                            return true;\n                        }\n                    }\n                }\n                catch (e_8_1) { e_8 = { error: e_8_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_8) throw e_8.error; }\n                }\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (var styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    try {\n                        for (var _b = __values(this.theme.styles[styleSetName]), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            var style = _c.value;\n                            if (visit(style)) {\n                                return true;\n                            }\n                        }\n                    }\n                    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                        }\n                        finally { if (e_7) throw e_7.error; }\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    return ThemeVisitor;\n}());\nexports.ThemeVisitor = ThemeVisitor;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_utils_1 = require(\"@here/harp-utils\");\n/**\n * Struct of arrays containing data for all features of this group. No methods, since the object is\n * being passed as part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n */\nvar FeatureGroup = /** @class */ (function () {\n    /**\n     * Construct featureGroup.\n     *\n     * @param storeExtendedTags Pass `true` to create fields for more OMV tags (`layer`, `class`\n     * and `type`).\n     */\n    function FeatureGroup(storeExtendedTags, startSize) {\n        if (startSize === void 0) { startSize = 5000; }\n        /** featureIds */\n        this.featureIds = new Array();\n        /** number of features */\n        this.numFeatures = 0;\n        /** number of potition elements (2 per point) */\n        this.numPositions = 0;\n        this.featureIds = new Array(startSize);\n        this.featureIds.length = startSize;\n        this.techniqueIndex = new Array(startSize);\n        this.techniqueIndex.length = startSize;\n        this.textIndex = new Array(startSize);\n        this.textIndex.length = startSize;\n        this.positionIndex = new Array(startSize);\n        this.positionIndex.length = startSize;\n        this.positions = new Array(10 * startSize);\n        this.positions.length = 10 * startSize;\n        if (storeExtendedTags) {\n            this.layerIndex = new Array(startSize);\n            this.layerIndex.length = startSize;\n            this.classIndex = new Array(startSize);\n            this.classIndex.length = startSize;\n            this.typeIndex = new Array(startSize);\n            this.typeIndex.length = startSize;\n        }\n    }\n    return FeatureGroup;\n}());\nexports.FeatureGroup = FeatureGroup;\n/**\n * Struct of arrays containing data for roads. No methods, since the object is being passed as part\n * of [[ExtendedTileInfo]] across \"process boundaries\" to the web worker.\n */\nvar LineFeatureGroup = /** @class */ (function (_super) {\n    __extends(LineFeatureGroup, _super);\n    function LineFeatureGroup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * An array of object defined by the user. Certain elements may be `undefined` (if this line\n         * feature is not a road, or if the object for that feature is undefined).\n         */\n        _this.userData = [];\n        return _this;\n    }\n    return LineFeatureGroup;\n}(FeatureGroup));\nexports.LineFeatureGroup = LineFeatureGroup;\n/**\n * Struct of arrays containing data for polygons. No methods, since the object is being passed as\n * part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespase [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nvar PolygonFeatureGroup = /** @class */ (function (_super) {\n    __extends(PolygonFeatureGroup, _super);\n    function PolygonFeatureGroup(storeExtendedTags, startSize) {\n        if (startSize === void 0) { startSize = 5000; }\n        var _this = _super.call(this, storeExtendedTags, startSize) || this;\n        /**\n         * Number of rings stored in all polygons in tis group. Used to keep size of the\n         * arrays.\n         */\n        _this.groupNumRings = 0;\n        _this.outerRingStartIndex = new Array(startSize);\n        _this.outerRingStartIndex.length = startSize;\n        _this.innerRingIsOuterContour = new Array(startSize);\n        _this.innerRingIsOuterContour.length = startSize;\n        _this.innerRingStartIndex = new Array(startSize);\n        _this.innerRingStartIndex.length = startSize;\n        return _this;\n    }\n    return PolygonFeatureGroup;\n}(FeatureGroup));\nexports.PolygonFeatureGroup = PolygonFeatureGroup;\n/**\n * Class to hold infos from [[OmvTile]]s. Optimized for fast serialisation when being passed from\n * webworker to main thread. No methods, since the object is being passed across \"process\n * boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nvar ExtendedTileInfo = /** @class */ (function () {\n    function ExtendedTileInfo(tileKey, storeExtendedTags) {\n        this.tileKey = tileKey;\n        /**\n         * Catalog of strings. Adressed by every features stringIndex.\n         */\n        this.textCatalog = new Array();\n        /**\n         * Catalog of techniques. Adressed by every features featureIndex.\n         */\n        this.techniqueCatalog = new Array();\n        this.setupTime = 0;\n        this.pointGroup = new FeatureGroup(storeExtendedTags);\n        this.lineGroup = new LineFeatureGroup(storeExtendedTags);\n        this.polygonGroup = new PolygonFeatureGroup(storeExtendedTags);\n        if (storeExtendedTags) {\n            this.layerCatalog = new Array();\n            this.classCatalog = new Array();\n            this.typeCatalog = new Array();\n        }\n    }\n    return ExtendedTileInfo;\n}());\nexports.ExtendedTileInfo = ExtendedTileInfo;\n(function (ExtendedTileInfo) {\n    function finishFeatureGroup(featureGroup) {\n        featureGroup.featureIds.length = featureGroup.numFeatures;\n        featureGroup.techniqueIndex.length = featureGroup.numFeatures;\n        featureGroup.textIndex.length = featureGroup.numFeatures;\n        featureGroup.positionIndex.length = featureGroup.numFeatures;\n        featureGroup.positions.length = featureGroup.numPositions;\n        if (featureGroup.layerIndex !== undefined) {\n            featureGroup.layerIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.classIndex !== undefined) {\n            featureGroup.classIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.typeIndex !== undefined) {\n            featureGroup.typeIndex.length = featureGroup.numFeatures;\n        }\n    }\n    function finishPolygonFeatureGroup(polygonGroup) {\n        finishFeatureGroup(polygonGroup);\n        polygonGroup.outerRingStartIndex.length = polygonGroup.numFeatures;\n        polygonGroup.innerRingIsOuterContour.length = polygonGroup.groupNumRings;\n        polygonGroup.innerRingStartIndex.length = polygonGroup.groupNumRings;\n    }\n    function finishLineFeatureGroup(lineGroup) {\n        finishFeatureGroup(lineGroup);\n        if (lineGroup.segmentIds !== undefined) {\n            lineGroup.segmentIds.length = lineGroup.numFeatures;\n            lineGroup.segmentStartOffsets.length = lineGroup.numFeatures;\n            lineGroup.segmentEndOffsets.length = lineGroup.numFeatures;\n        }\n    }\n    function finish(tileInfo) {\n        finishFeatureGroup(tileInfo.pointGroup);\n        finishLineFeatureGroup(tileInfo.lineGroup);\n        finishPolygonFeatureGroup(tileInfo.polygonGroup);\n    }\n    ExtendedTileInfo.finish = finish;\n    /**\n     * Number of features in this feature group.\n     */\n    function featureGroupSize(featureGroup) {\n        return featureGroup.numFeatures;\n    }\n    ExtendedTileInfo.featureGroupSize = featureGroupSize;\n    function featureGroupFinished(featureGroup) {\n        return featureGroup.numPositions === featureGroup.positions.length;\n    }\n    ExtendedTileInfo.featureGroupFinished = featureGroupFinished;\n    function tileInfoFinished(tileInfo) {\n        return (featureGroupFinished(tileInfo.pointGroup) &&\n            featureGroupFinished(tileInfo.lineGroup) &&\n            featureGroupFinished(tileInfo.polygonGroup));\n    }\n    ExtendedTileInfo.tileInfoFinished = tileInfoFinished;\n    /**\n     * Determine the text string of the (OMV) feature. It implements the special handling required\n     * to determine the text content of a feature from its tegas, which are passed in as the `env`.\n     *\n     * @param env Environment containing the tags from the (OMV) feature.\n     * @param useAbbreviation `true` to use the abbreviation if available.\n     * @param useIsoCode `true` to use the tag \"iso_code\".\n     * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n     *                  as the text of the string. Order reflects priority.\n     */\n    function getFeatureName(env, useAbbreviation, useIsoCode, languages) {\n        var e_1, _a;\n        var name;\n        if (useAbbreviation) {\n            var abbreviation = env.lookup(\"abbr\");\n            if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n                return abbreviation;\n            }\n        }\n        if (useIsoCode) {\n            var isoCode = env.lookup(\"iso_code\");\n            if (typeof isoCode === \"string\" && isoCode.length > 0) {\n                return isoCode;\n            }\n        }\n        if (languages !== undefined) {\n            try {\n                for (var languages_1 = __values(languages), languages_1_1 = languages_1.next(); !languages_1_1.done; languages_1_1 = languages_1.next()) {\n                    var lang = languages_1_1.value;\n                    name = env.lookup(\"name_\" + lang);\n                    if (typeof name === \"string\" && name.length > 0) {\n                        return name;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (languages_1_1 && !languages_1_1.done && (_a = languages_1.return)) _a.call(languages_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        name = env.lookup(\"name\");\n        if (typeof name === \"string\") {\n            return name;\n        }\n        return undefined;\n    }\n    ExtendedTileInfo.getFeatureName = getFeatureName;\n})(ExtendedTileInfo = exports.ExtendedTileInfo || (exports.ExtendedTileInfo = {}));\nexports.ExtendedTileInfo = ExtendedTileInfo;\n/**\n * Support class for [[ExtendedTileInfo]]. Assist in filling it with data.\n */\nvar ExtendedTileInfoWriter = /** @class */ (function () {\n    /**\n     * Create an [[ExtendedTileInfoWriter]] for an [[ExtendedTileInfo]]. Assist in filling the\n     * [[ExtendedTileInfo]] with data.\n     *\n     * @param tileInfo [[ExtendedTileInfo]] to write data to.\n     * @param storeExtendedTags Pass `true` if feature data like `layer`, `class`or `type` should\n     *          be stored for every feature.\n     */\n    function ExtendedTileInfoWriter(tileInfo, storeExtendedTags, languages) {\n        this.tileInfo = tileInfo;\n        this.storeExtendedTags = storeExtendedTags;\n        this.languages = languages;\n        /** Map to identify which techniques already have been added to the [[ExtendedTileInfo]]. */\n        this.techniqueIndexMap = new Map();\n        /** Map to identify which strings already have been added to the [[ExtendedTileInfo]]. */\n        this.stringMap = new Map();\n        /** Map to identify which `layer` names already have been added to the [[ExtendedTileInfo]]. */\n        this.layerMap = new Map();\n        /** Map to identify which `class` names already have been added to the [[ExtendedTileInfo]]. */\n        this.classMap = new Map();\n        /** Map to identify which `type` names already have been added to the [[ExtendedTileInfo]]. */\n        this.typeMap = new Map();\n    }\n    /**\n     * Add a [[Technique]] to the catalog of techniques. Individual techniques have a file `_index`\n     * which has been created in the [[StyleSetEvaluator]]. This index is required to identify the\n     * techniques. A `Map` is used map techniques to already added techniques, or store the\n     * technique as new, and add it to the map.\n     *\n     * @param technique The [[Technique]] to add.\n     */\n    ExtendedTileInfoWriter.prototype.addTechnique = function (technique) {\n        if (technique._index === undefined) {\n            throw new Error(\"ExtendedTileInfoEmitter#processPointFeature: Internal error - No technique index\");\n        }\n        var infoTileTechniqueIndex = this.techniqueIndexMap.get(technique._index);\n        if (infoTileTechniqueIndex !== undefined) {\n            return infoTileTechniqueIndex;\n        }\n        infoTileTechniqueIndex = this.tileInfo.techniqueCatalog.length;\n        // add a new technique. Select the subset of features that should be stored (e.g., _index is\n        // not)\n        var storedTechnique = {};\n        Object.getOwnPropertyNames(technique).forEach(function (property) {\n            if (!property.startsWith(\"_\")) {\n                storedTechnique[property] = technique[property];\n            }\n        });\n        // Keep the index to identify the original technique later.\n        storedTechnique._index = technique._index;\n        this.techniqueIndexMap.set(technique._index, infoTileTechniqueIndex);\n        this.tileInfo.techniqueCatalog.push(storedTechnique);\n        return infoTileTechniqueIndex;\n    };\n    /**\n     * Add a feature.\n     *\n     * @param featureGroup The feature group to add to.\n     * @param technique The technique to add.\n     * @param env The `env` which is a mix of original OMV feature tags and fields added by the\n     *      [[StyleSetEvaluator]]\n     * @param featureId The featureId, a number unique for many features (but not all).\n     * @param infoTileTechniqueIndex The previously computed index of the technique. Must have been\n     *      computed by `addTechnique(technique)`.\n     * @param isPolygonGroup `true`for polygons.\n     */\n    ExtendedTileInfoWriter.prototype.addFeature = function (featureGroup, technique, env, featureId, infoTileTechniqueIndex, isPolygonGroup) {\n        // compute name/label of feature\n        var textTechnique = technique;\n        var textLabel = textTechnique.label;\n        var useAbbreviation = textTechnique.useAbbreviation;\n        var useIsoCode = textTechnique.useIsoCode;\n        var name = typeof textLabel === \"string\"\n            ? env.lookup(textLabel)\n            : ExtendedTileInfo.getFeatureName(env, useAbbreviation, useIsoCode, this.languages);\n        var stringIndex = -1;\n        if (name && typeof name === \"string\") {\n            stringIndex = this.addText(name);\n        }\n        // add indices into the arrays.\n        featureGroup.featureIds[featureGroup.numFeatures] = featureId;\n        featureGroup.techniqueIndex[featureGroup.numFeatures] = infoTileTechniqueIndex;\n        featureGroup.textIndex[featureGroup.numFeatures] = stringIndex;\n        featureGroup.positionIndex[featureGroup.numFeatures] = featureGroup.numPositions;\n        // polygons need the extra fields for polygon rings\n        if (isPolygonGroup) {\n            var polygonGroup = featureGroup;\n            harp_utils_1.assert(polygonGroup.outerRingStartIndex !== undefined);\n            harp_utils_1.assert(polygonGroup.innerRingStartIndex !== undefined);\n            harp_utils_1.assert(polygonGroup.innerRingIsOuterContour !== undefined);\n            polygonGroup.outerRingStartIndex[featureGroup.numFeatures] = polygonGroup.groupNumRings;\n        }\n        // store the extra feature fields\n        if (this.storeExtendedTags) {\n            featureGroup.layerIndex[featureGroup.numFeatures] = this.addLayer(env.lookup(\"$layer\"));\n            featureGroup.classIndex[featureGroup.numFeatures] = this.addClass(env.lookup(\"class\"));\n            featureGroup.typeIndex[featureGroup.numFeatures] = this.addType(env.lookup(\"type\"));\n        }\n        featureGroup.numFeatures++;\n    };\n    /**\n     * Add the X/Y coordinate of the point. Only for point feature groups.\n     *\n     * @param featureGroup The feature group to add it to.\n     * @param x X Position of point.\n     * @param y Y Position of point.\n     */\n    ExtendedTileInfoWriter.prototype.addFeaturePoint = function (featureGroup, x, y) {\n        featureGroup.positions[featureGroup.numPositions++] = x;\n        featureGroup.positions[featureGroup.numPositions++] = y;\n    };\n    /**\n     * Add the line points as X/Y coordinates to the line feature.\n     *\n     * If a line feature has more than one line (rare for HERE data), it should define multiple\n     * line features for it.\n     *\n     * @param featureGroup The feature group to add to. Must be line feature group.\n     * @param points The X/Y coordinates of the points.\n     */\n    ExtendedTileInfoWriter.prototype.addFeaturePoints = function (featureGroup, points) {\n        var n = featureGroup.numPositions;\n        var l = points.length;\n        var p = featureGroup.positions;\n        for (var i = 0; i < l; i++) {\n            p[n + i] = points[i];\n        }\n        featureGroup.numPositions += points.length;\n    };\n    /**\n     * Add the information about road segments to the line feature. Performs lazy initialization of\n     * `segmentIds`, `segmentStartOffsets`, and `segmentEndOffsets` members of a\n     * [[LineFeatureGroup]] instance.\n     *\n     * @param featureGroup The line feature group to add information to.\n     * @param segmentId Segment id of a feature.\n     * @param startOffset Start offset of a feature.\n     * @param endOffset End offset of a feature.\n     */\n    ExtendedTileInfoWriter.prototype.addRoadSegments = function (featureGroup, segmentId, startOffset, endOffset) {\n        if (featureGroup.segmentIds === undefined) {\n            featureGroup.segmentIds = new Array();\n            featureGroup.segmentStartOffsets = new Array();\n            featureGroup.segmentEndOffsets = new Array();\n        }\n        featureGroup.segmentIds[featureGroup.numFeatures - 1] = segmentId;\n        featureGroup.segmentStartOffsets[featureGroup.numFeatures - 1] = startOffset;\n        featureGroup.segmentEndOffsets[featureGroup.numFeatures - 1] = endOffset;\n    };\n    /**\n     * Add a single ring to the polygon. Can be called multiple times to add multiple rings to the\n     * polygon.\n     *\n     * @param featureGroup Polygon feature group to add polygon ring to.\n     * @param contour The X/Y coordinates of the ring.\n     * @param isOuterRing Pass `true`if it is a outer ring, otherwise `false`.\n     */\n    ExtendedTileInfoWriter.prototype.addRingPoints = function (featureGroup, contour, isOuterRing) {\n        featureGroup.innerRingStartIndex[featureGroup.groupNumRings] = featureGroup.numPositions;\n        featureGroup.innerRingIsOuterContour[featureGroup.groupNumRings] = isOuterRing ? 1 : 0;\n        featureGroup.groupNumRings++;\n        var n = featureGroup.numPositions;\n        var l = contour.length;\n        var p = featureGroup.positions;\n        for (var i = 0; i < l; i++) {\n            p[n + i] = contour[i];\n        }\n        featureGroup.numPositions += contour.length;\n    };\n    ExtendedTileInfoWriter.prototype.finish = function () {\n        ExtendedTileInfo.finish(this.tileInfo);\n    };\n    ExtendedTileInfoWriter.prototype.addText = function (name) {\n        return this.addStringValue(name, this.tileInfo.textCatalog, this.stringMap);\n    };\n    ExtendedTileInfoWriter.prototype.addLayer = function (name) {\n        return this.addStringValue(name, this.tileInfo.layerCatalog, this.layerMap);\n    };\n    ExtendedTileInfoWriter.prototype.addClass = function (name) {\n        return this.addStringValue(name, this.tileInfo.classCatalog, this.classMap);\n    };\n    ExtendedTileInfoWriter.prototype.addType = function (name) {\n        return this.addStringValue(name, this.tileInfo.typeCatalog, this.typeMap);\n    };\n    // Add a string to the strings catalog. Returns index into the catalog.\n    ExtendedTileInfoWriter.prototype.addStringValue = function (str, catalog, map) {\n        if (str === undefined) {\n            return -1;\n        }\n        var name = str.toString();\n        var i = map.get(name);\n        if (i !== undefined) {\n            return i;\n        }\n        i = catalog.length;\n        catalog.push(name);\n        map.set(name, i);\n        return i;\n    };\n    return ExtendedTileInfoWriter;\n}());\nexports.ExtendedTileInfoWriter = ExtendedTileInfoWriter;\n/**\n * Implementation of [[ExtendedTileInfoPolygonAccessor]].\n */\nvar ExtendedTileInfoPolygonAccessorImpl = /** @class */ (function () {\n    function ExtendedTileInfoPolygonAccessorImpl() {\n        this.polygons = new PolygonFeatureGroup(false, 5000);\n        this.featureIndex = 0;\n        this.ringStart = 0;\n        this.numRings = 0;\n    }\n    ExtendedTileInfoPolygonAccessorImpl.prototype.setup = function (polygons, featureIndex, ringStart, numRings) {\n        this.polygons = polygons;\n        this.featureIndex = featureIndex;\n        this.ringStart = ringStart;\n        this.numRings = numRings;\n    };\n    ExtendedTileInfoPolygonAccessorImpl.prototype.isOuterRing = function (ringIndex) {\n        harp_utils_1.assert(ringIndex >= 0);\n        harp_utils_1.assert(ringIndex < this.numRings);\n        if (ringIndex < 0 || ringIndex >= this.numRings) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n        return this.polygons.innerRingIsOuterContour[this.ringStart + ringIndex] !== 0;\n    };\n    ExtendedTileInfoPolygonAccessorImpl.prototype.getPoints = function (ringIndex) {\n        harp_utils_1.assert(ringIndex >= 0);\n        harp_utils_1.assert(ringIndex < this.numRings);\n        if (ringIndex < 0 || ringIndex >= this.numRings) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n        // compute the start/size of the points in this ring. All `points` are actually just the\n        // indices of a single X/Y coordinate.\n        var pointsStart = this.polygons.innerRingStartIndex[this.ringStart + ringIndex];\n        var numPointValues;\n        if (ringIndex < this.numRings - 1) {\n            numPointValues =\n                this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n        }\n        else {\n            if (this.ringStart + ringIndex < this.polygons.innerRingStartIndex.length - 1) {\n                numPointValues =\n                    this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n            }\n            else {\n                numPointValues = this.polygons.positions.length - pointsStart;\n            }\n        }\n        return {\n            points: this.polygons.positions,\n            pointsStart: pointsStart,\n            numPointValues: numPointValues\n        };\n    };\n    return ExtendedTileInfoPolygonAccessorImpl;\n}());\n/**\n * Supporting class for [[ExtendedTileInfo]]. Takes an [[ExtendedTileInfoHandler]] and calls an\n * `accept` for every feature of the [[ExtendedTileInfo]], or just all features of a specified\n * `featureId`.\n */\nvar ExtendedTileInfoVisitor = /** @class */ (function () {\n    function ExtendedTileInfoVisitor(tileInfo) {\n        this.tileInfo = tileInfo;\n    }\n    /**\n     * Visit all feature in the [[ExtendedTileInfo]]\n     *\n     * @param handler Let the `handler` visit all features.\n     */\n    ExtendedTileInfoVisitor.prototype.visitAll = function (handler) {\n        this.visitAllPointFeatures(handler);\n        this.visitAllLineFeatures(handler);\n        this.visitAllPolygonFeatures(handler);\n    };\n    /**\n     * Visit all features of a specified featureId.\n     *\n     * @param featureId The featureId to visit.\n     * @param handler The `handler` to use.\n     */\n    ExtendedTileInfoVisitor.prototype.visitFeature = function (featureId, handler) {\n        var numFeaturesFound = 0;\n        var numPointFeatures = this.tileInfo.pointGroup.numFeatures;\n        var pointFeatures = this.tileInfo.pointGroup.featureIds;\n        for (var i = 0; i < numPointFeatures; i++) {\n            if (pointFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPointFeature(i, handler);\n            }\n        }\n        var numLineFeatures = this.tileInfo.lineGroup.numFeatures;\n        var lineFeatures = this.tileInfo.lineGroup.featureIds;\n        for (var i = 0; i < numLineFeatures; i++) {\n            if (lineFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitLineFeature(i, handler);\n            }\n        }\n        var numPolygonFeatures = this.tileInfo.polygonGroup.numFeatures;\n        var polygonsFeatures = this.tileInfo.polygonGroup.featureIds;\n        for (var i = 0; i < numPolygonFeatures; i++) {\n            if (polygonsFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPolygonFeature(i, handler);\n            }\n        }\n        return numFeaturesFound;\n    };\n    /**\n     * Visit all `POINT` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    ExtendedTileInfoVisitor.prototype.visitAllPointFeatures = function (handler) {\n        var numFeatures = this.tileInfo.pointGroup.numFeatures;\n        for (var i = 0; i < numFeatures; i++) {\n            this.visitPointFeature(i, handler);\n        }\n    };\n    /**\n     * Visit all `LINESTRING` features.\n     *\n     * @param handler The handler to use.\n     */\n    ExtendedTileInfoVisitor.prototype.visitAllLineFeatures = function (handler) {\n        var numFeatures = this.tileInfo.lineGroup.numFeatures;\n        for (var i = 0; i < numFeatures; i++) {\n            this.visitLineFeature(i, handler);\n        }\n    };\n    /**\n     * Visit all `POLYGON` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    ExtendedTileInfoVisitor.prototype.visitAllPolygonFeatures = function (handler) {\n        var numFeatures = this.tileInfo.polygonGroup.numFeatures;\n        for (var i = 0; i < numFeatures; i++) {\n            this.visitPolygonFeature(i, handler);\n        }\n    };\n    ExtendedTileInfoVisitor.prototype.getTag = function (featureIndex, index) {\n        return index !== undefined && index[featureIndex] >= 0 ? index[featureIndex] : -1;\n    };\n    /**\n     * Call the `handler` on a point feaure.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    ExtendedTileInfoVisitor.prototype.visitPointFeature = function (featureIndex, handler) {\n        var tileInfo = this.tileInfo;\n        var points = tileInfo.pointGroup;\n        var start = points.positionIndex[featureIndex];\n        var x = points.positions[start];\n        var y = points.positions[start + 1];\n        if (!!handler.acceptPoint) {\n            handler.acceptPoint(points.featureIds[featureIndex], points.techniqueIndex[featureIndex], x, y, points.textIndex[featureIndex], this.getTag(featureIndex, points.layerIndex), this.getTag(featureIndex, points.classIndex), this.getTag(featureIndex, points.typeIndex));\n        }\n    };\n    /**\n     * Call the `handler` on a line feaure.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    ExtendedTileInfoVisitor.prototype.visitLineFeature = function (featureIndex, handler) {\n        var tileInfo = this.tileInfo;\n        var lines = tileInfo.lineGroup;\n        var numFeatures = lines.numFeatures;\n        var positionsStart = lines.positionIndex[featureIndex];\n        var numPointValues = featureIndex === numFeatures - 1\n            ? lines.positions.length - positionsStart\n            : lines.positionIndex[featureIndex + 1] - positionsStart;\n        var segmentId;\n        var startOffset;\n        var endOffset;\n        if (lines.segmentIds !== undefined) {\n            segmentId = lines.segmentIds[featureIndex];\n            startOffset = lines.segmentStartOffsets[featureIndex];\n            endOffset = lines.segmentEndOffsets[featureIndex];\n        }\n        if (!!handler.acceptLine) {\n            handler.acceptLine(lines.featureIds[featureIndex], lines.techniqueIndex[featureIndex], lines.textIndex[featureIndex], this.getTag(featureIndex, lines.layerIndex), this.getTag(featureIndex, lines.classIndex), this.getTag(featureIndex, lines.typeIndex), tileInfo.lineGroup.positions, positionsStart, numPointValues, segmentId, startOffset, endOffset);\n        }\n    };\n    /**\n     * Call the `handler` on a polygon feaure.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    ExtendedTileInfoVisitor.prototype.visitPolygonFeature = function (featureIndex, handler) {\n        var tileInfo = this.tileInfo;\n        var polygons = tileInfo.polygonGroup;\n        var numFeatures = polygons.numFeatures;\n        var ringStart = polygons.outerRingStartIndex[featureIndex];\n        var numRings = featureIndex === numFeatures - 1\n            ? polygons.innerRingStartIndex.length - ringStart\n            : polygons.outerRingStartIndex[featureIndex + 1] - ringStart;\n        // Use a static instance, so we do not allocate anything here\n        ExtendedTileInfoVisitor.polygonAccessor.setup(polygons, featureIndex, ringStart, numRings);\n        if (!!handler.acceptPolygon) {\n            handler.acceptPolygon(polygons.featureIds[featureIndex], polygons.techniqueIndex[featureIndex], polygons.textIndex[featureIndex], this.getTag(featureIndex, polygons.layerIndex), this.getTag(featureIndex, polygons.classIndex), this.getTag(featureIndex, polygons.typeIndex), ExtendedTileInfoVisitor.polygonAccessor);\n        }\n    };\n    // static instance to work without allocations.\n    ExtendedTileInfoVisitor.polygonAccessor = new ExtendedTileInfoPolygonAccessorImpl();\n    return ExtendedTileInfoVisitor;\n}());\nexports.ExtendedTileInfoVisitor = ExtendedTileInfoVisitor;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Define possible names of messages exchanged with decoder services within `WebWorker`.\n */\nvar DecodedTileMessageName;\n(function (DecodedTileMessageName) {\n    DecodedTileMessageName[\"Configuration\"] = \"configuration\";\n    DecodedTileMessageName[\"Initialized\"] = \"initialized\";\n    DecodedTileMessageName[\"Request\"] = \"request\";\n    DecodedTileMessageName[\"Response\"] = \"response\";\n    DecodedTileMessageName[\"CreateService\"] = \"create-service\";\n    DecodedTileMessageName[\"DestroyService\"] = \"destroy-service\";\n})(DecodedTileMessageName = exports.DecodedTileMessageName || (exports.DecodedTileMessageName = {}));\n/**\n * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n * instances in workers.\n */\nexports.WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n/**\n * Define possible names of requests called on decoder services within `WebWorker`.\n */\nvar Requests;\n(function (Requests) {\n    Requests[\"DecodeTileRequest\"] = \"decode-tile-request\";\n    Requests[\"TileInfoRequest\"] = \"tile-info-request\";\n})(Requests = exports.Requests || (exports.Requests = {}));\nfunction isConfigurationMessage(message) {\n    return (message &&\n        typeof message.service === \"string\" &&\n        typeof message.type === \"string\" &&\n        message.type === DecodedTileMessageName.Configuration);\n}\nexports.isConfigurationMessage = isConfigurationMessage;\nfunction isInitializedMessage(message) {\n    return (message &&\n        typeof message.service === \"string\" &&\n        typeof message.type === \"string\" &&\n        message.type === DecodedTileMessageName.Initialized);\n}\nexports.isInitializedMessage = isInitializedMessage;\nfunction isRequestMessage(message) {\n    return (message &&\n        typeof message.service === \"string\" &&\n        typeof message.type === \"string\" &&\n        message.type === DecodedTileMessageName.Request);\n}\nexports.isRequestMessage = isRequestMessage;\nfunction isResponseMessage(message) {\n    return (message &&\n        typeof message.service === \"string\" &&\n        typeof message.type === \"string\" &&\n        message.type === DecodedTileMessageName.Response);\n}\nexports.isResponseMessage = isResponseMessage;\nfunction isDecodeTileRequest(message) {\n    return (message && typeof message.type === \"string\" && message.type === Requests.DecodeTileRequest);\n}\nexports.isDecodeTileRequest = isDecodeTileRequest;\nfunction isTileInfoRequest(message) {\n    return message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest;\n}\nexports.isTileInfoRequest = isTileInfoRequest;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_datasource_protocol_1 = require(\"@here/harp-datasource-protocol\");\nvar harp_geoutils_1 = require(\"@here/harp-geoutils\");\nvar harp_utils_1 = require(\"@here/harp-utils\");\nvar WorkerService_1 = require(\"./WorkerService\");\nvar logger = harp_utils_1.LoggerManager.instance.create(\"TileDecoderService\");\n/**\n * An extension to [[WorkerService]], the `TileDecoderService` implements an asynchronous\n * (message based) service to decode tile content in web workers. The `TileDecoderService` itself\n * lives in the web worker, and communicates with messages by means of a [[ConcurrentWorkerSet]]\n * with the application.\n *\n * The `TileDecoderService` handles a [[DecodeTileRequest]], which contains a tile and its freshly\n * loaded binary data, decodes the content with the [[ITileDecoder]] that the service is configured\n * to use, and sends the data back in form of a [[WorkerServiceResponse]].\n */\nvar TileDecoderService = /** @class */ (function (_super) {\n    __extends(TileDecoderService, _super);\n    /**\n     * Set up the `TileDecoderService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param m_decoder Decoder to handle the decoding and info requests.\n     */\n    function TileDecoderService(serviceId, m_decoder) {\n        var _this = _super.call(this, serviceId) || this;\n        _this.serviceId = serviceId;\n        _this.m_decoder = m_decoder;\n        _this.m_decoder.connect();\n        return _this;\n    }\n    /**\n     * Start a [[TileDecoderService]] with a given decoder.\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param decoder   [[TileDecoder]] instance.\n     */\n    TileDecoderService.start = function (serviceId, decoder) {\n        return new TileDecoderService(serviceId, decoder);\n    };\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request Message that is either a DecodeTileRequest or a TileInfoRequest.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     */\n    TileDecoderService.prototype.handleRequest = function (request) {\n        var _this = this;\n        if (harp_datasource_protocol_1.isDecodeTileRequest(request)) {\n            return new Promise(function (resolve) {\n                resolve(_this.handleDecodeTileRequest(request));\n            });\n        }\n        else if (harp_datasource_protocol_1.isTileInfoRequest(request)) {\n            return new Promise(function (resolve) {\n                resolve(_this.handleTileInfoRequest(request));\n            });\n        }\n        else {\n            return _super.prototype.handleRequest.call(this, request);\n        }\n    };\n    /**\n     * Handle incoming configuration message. Configuration message is passed on to decoder.\n     *\n     * @param request Message of type [[ConfigurationMessage]].\n     */\n    TileDecoderService.prototype.handleMessage = function (message) {\n        if (harp_datasource_protocol_1.isConfigurationMessage(message)) {\n            this.handleConfigurationMessage(message);\n        }\n        else {\n            logger.error(\"[\" + this.serviceId + \"]: invalid message \" + message.type);\n        }\n    };\n    TileDecoderService.prototype.handleDecodeTileRequest = function (request) {\n        var tileKey = harp_geoutils_1.TileKey.fromMortonCode(request.tileKey);\n        var projection = harp_datasource_protocol_1.getProjection(request.projection);\n        return this.m_decoder.decodeTile(request.data, tileKey, projection).then(function (decodedTile) {\n            var transferList = [];\n            decodedTile.geometries.forEach(function (geom) {\n                geom.vertexAttributes.forEach(function (attr) {\n                    if (attr.buffer instanceof ArrayBuffer) {\n                        transferList.push(attr.buffer);\n                    }\n                });\n                if (geom.index && geom.index.buffer instanceof ArrayBuffer) {\n                    transferList.push(geom.index.buffer);\n                }\n            });\n            decodedTile.techniques.forEach(function (technique) {\n                if (harp_datasource_protocol_1.isStandardTexturedTechnique(technique)) {\n                    if (harp_datasource_protocol_1.isTextureBuffer(technique.texture)) {\n                        if (technique.texture.buffer instanceof ArrayBuffer) {\n                            transferList.push(technique.texture.buffer);\n                        }\n                    }\n                }\n            });\n            return {\n                response: decodedTile,\n                transferList: transferList\n            };\n        });\n    };\n    TileDecoderService.prototype.handleTileInfoRequest = function (request) {\n        var tileKey = harp_geoutils_1.TileKey.fromMortonCode(request.tileKey);\n        var projection = harp_datasource_protocol_1.getProjection(request.projection);\n        return this.m_decoder.getTileInfo(request.data, tileKey, projection).then(function (tileInfo) {\n            var transferList = tileInfo !== undefined && tileInfo.transferList !== undefined\n                ? tileInfo.transferList\n                : [];\n            return {\n                response: tileInfo,\n                transferList: transferList\n            };\n        });\n    };\n    TileDecoderService.prototype.handleConfigurationMessage = function (message) {\n        this.m_decoder.configure(message.styleSet, message.languages, message.options);\n    };\n    return TileDecoderService;\n}(WorkerService_1.WorkerService));\nexports.TileDecoderService = TileDecoderService;\n","\"use strict\";\n/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar harp_datasource_protocol_1 = require(\"@here/harp-datasource-protocol\");\nvar harp_utils_1 = require(\"@here/harp-utils\");\nvar WorkerService_1 = require(\"./WorkerService\");\nvar logger = harp_utils_1.LoggerManager.instance.create(\"WorkerServiceManager\");\n/**\n * Manages dynamic worker services in Web Worker context.\n *\n * Handles `CreateService` and `DestroyService` messages sent to Web Worker. Singleton (in scope of\n * one worker runtime!), starts automatically with first [[getInstance]] call.\n */\nvar WorkerServiceManager = /** @class */ (function (_super) {\n    __extends(WorkerServiceManager, _super);\n    function WorkerServiceManager(serviceId) {\n        if (serviceId === void 0) { serviceId = harp_datasource_protocol_1.WORKER_SERVICE_MANAGER_SERVICE_ID; }\n        var _this = _super.call(this, serviceId) || this;\n        /**\n         * Contains all registered service factories indexed by `serviceType`.\n         */\n        _this.m_factories = new Map();\n        /**\n         * Contains all managed worker services indexed by their `serviceId`.\n         */\n        _this.m_services = new Map();\n        return _this;\n    }\n    /**\n     * Gets the default instance of `WorkerServiceManager`. Starts the service when first called.\n     */\n    WorkerServiceManager.getInstance = function () {\n        if (this.m_service === undefined) {\n            this.m_service = new WorkerServiceManager(harp_datasource_protocol_1.WORKER_SERVICE_MANAGER_SERVICE_ID);\n        }\n        return this.m_service;\n    };\n    /**\n     * Register [[WorkerService]] class to this manager.\n     *\n     * @param workerServiceDescriptor service type and factory\n     */\n    WorkerServiceManager.prototype.register = function (workerServiceDescriptor) {\n        this.m_factories.set(workerServiceDescriptor.serviceType, workerServiceDescriptor.factory);\n    };\n    WorkerServiceManager.prototype.handleMessage = function (message) {\n        if (message.type === harp_datasource_protocol_1.DecodedTileMessageName.CreateService) {\n            var existingService = this.m_services.get(message.targetServiceId);\n            if (existingService !== undefined) {\n                logger.error(\"error - service with targetServiceId='\" + message.targetServiceId + \"' already running, ignoring CreateService request\");\n                return;\n            }\n            var factory = this.m_factories.get(message.targetServiceType);\n            if (factory === undefined) {\n                logger.error(\"unkown targetServiceType requested: '\" + message.targetServiceType + \"'\");\n                return;\n            }\n            var service = factory(message.targetServiceId);\n            this.m_services.set(message.targetServiceId, service);\n        }\n        if (message.type === harp_datasource_protocol_1.DecodedTileMessageName.DestroyService) {\n            var service = this.m_services.get(message.targetServiceId);\n            if (service === undefined) {\n                logger.error(\"unkown targetServiceId '\" + message.targetServiceId + \"'\");\n                return;\n            }\n            service.destroy();\n            this.m_services.delete(message.targetServiceId);\n        }\n    };\n    return WorkerServiceManager;\n}(WorkerService_1.WorkerService));\nexports.WorkerServiceManager = WorkerServiceManager;\n"],"sourceRoot":""}